{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/help/help.component.ts","webpack:///src/app/components/help/help.component.html","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/participant-list/participant-list.component.html","webpack:///src/app/components/participant-list/participant-list.component.ts","webpack:///src/app/components/settings/settings.component.ts","webpack:///src/app/components/settings/settings.component.html","webpack:///src/app/components/timer/timer.component.html","webpack:///src/app/components/timer/timer.component.ts","webpack:///src/app/models/Participant.ts","webpack:///src/app/pipes/secs.pipe.ts","webpack:///src/app/services/participant/participant.service.ts","webpack:///src/app/services/settings/settings.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","AppComponent","title","appRoutes","path","component","TimerComponent","ParticipantListComponent","SettingsComponent","HelpComponent","AppModule","ParticipantService","SettingsService","Location","provide","LocationStrategy","useClass","HashLocationStrategy","BrowserModule","HttpClientModule","FormsModule","RouterModule","relativeLinkResolution","NavbarComponent","SecsPipe","version","noOpener","scrumTimerWindow","jiraTimerWindow","windowProps","popupWidth","hasOpener","window","opener","openerMessage","console","log","swp","screen","availHeight","open","jwp","availWidth","url","localStorage","getItem","openJira","openScrumTimer","participantService","init","name","jsonParticipants","participantList","getParticipants","settings","usesRemoteParticipantList","updateRemoteParticipants","length","addParticipant","Participant","participant","removeParticipant","exportParticipants","importParticipants","str","JSON","parse","useGlobalMaxTime","getUseGlobalMaxTime","globalMaxTime","getGlobalMaxTime","remoteParticipantListURL","getRemoteParticipantListURL","jiraLinkURL","getJiraURL","useRemoteParticipantList","useJiraLinkURL","setGlobalMaxTime","setUseGlobelMaxTime","setRemoteParticipantList","setJiraURL","saveSettings","settingsService","absentParticipants","Array","doneParticipants","totalMaxTime","recommendedIndividualTime","totalPercent","totalTimePercent","totalElapsed","currentTotalElapsed","individualMaxTime","individualTime","currentPercent","currentElapsed","timerActive","sortParticipants","Math","round","currentParticipant","time","push","splice","timerSubscription","unsubscribe","source","timer","future","Date","setSeconds","getSeconds","subscribe","val","currentDiff","floor","getTime","startTimer","stopTimer","i","array","currentIndex","temporaryValue","randomIndex","random","shuffle","sort","a","b","localeCompare","idx","indexOf","ParticipantAdapter","item","totalseconds","prefix","abs","minutes","seconds","slice","http","adapter","lastSync","getLastSync","localSync","d","setItem","toISOString","participants","unshift","stringify","removed","durationSinceLastSync","now","valueOf","get","pipe","map","data","adapt","getRemoteParticipants","resp","setLastSync","remoteParticipantList","jiraURL","newTime","newUrl","removeItem","useGMTime","exportSettings","jsonSettings","environment","production","enableProdMode","platformBrowser","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ScrumTimer';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HashLocationStrategy, Location, LocationStrategy } from '@angular/common';\n// import { Timer } from 'angular-timer'; // AngularJS - not 4??\n\n\n// Services\nimport { ParticipantService } from './services/participant/participant.service';\nimport { SettingsService } from './services/settings/settings.service';\n\n// Components\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { TimerComponent } from './components/timer/timer.component';\nimport { ParticipantListComponent } from './components/participant-list/participant-list.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { HelpComponent } from './components/help/help.component';\n\n// Pipes\nimport { SecsPipe } from './pipes/secs.pipe';\n\n\n\n\nconst appRoutes: Routes = [\n  { path: '', component: TimerComponent },\n  { path: 'timer', component: TimerComponent },\n  { path: 'participants', component: ParticipantListComponent },\n  { path: 'settings', component: SettingsComponent },\n  { path: 'help', component: HelpComponent }\n  // { path: '', component: Component }\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    TimerComponent,\n    ParticipantListComponent,\n    SettingsComponent,\n    HelpComponent,\n    SecsPipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes, { relativeLinkResolution: 'legacy' })\n  ],\n  providers: [\n    ParticipantService,\n    SettingsService,\n    Location,\n    { provide: LocationStrategy, useClass: HashLocationStrategy }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport packageInfo from '../../../../package.json';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.css']\n})\nexport class HelpComponent implements OnInit {\n  public version: string = packageInfo.version;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <h3>What is it?</h3>\n  <p>\n    A Timer to keep <a href=\"https://en.wikipedia.org/wiki/Scrum_(software_development)#Daily_scrum\"\n      target=\"_blank\">Daily Scrum</a>\n    meetings short. </p>\n  <p>\n    A lot of developers do not like to spend too much time on Scrum \"ceremonies\". This tool is meant to help you get a\n    viual indication of time spent to avoid it drawing out for online daily Scrum meetings.\n  </p>\n  <h3>How to use</h3>\n\n  <ol>\n    <li>Go to\n      <strong>\n        <i class=\"fa fa-users\"></i> Participants</strong> and make sure that everyone you want in the Scrum Timer\n    </li>\n    <li>\n      Go to the\n      <strong>\n        <i class=\"fa fa-clock-o\"></i> Timer</strong> and mark anyone who is not present as absent.\n    </li>\n    <li>click the\n      <span class=\"btn btn-outline-success\">\n        <i class=\"fa fa-hourglass-start\"></i>\n      </span> start button to start the timer\n    </li>\n    <li>Click the next button for each subsequent participant, and finally the stop button</li>\n  </ol>\n\n  <h3>Notes</h3>\n\n  <ul>\n    <li>If Max time is selected, the time left is distrubuted among the rest of the people in the meeting.</li>\n    <li>If the version badge below this list is older than the version of the newest <a href=\"https://github.com/JoSSte/ScrumTimer/releases\" target=\"_blank\">release</a> press <kbd>CTRL</kbd> + <kbd>F5</kbd> to refresh the page.</li>\n    \n  </ul>\n  <div class=\"badge badge-secondary\">Version {{version}}</div>\n\n  <h3>Bugs / requests for features</h3>\n  <p>If you find a bug/want a new feature, please report it on the <a href=\"https://github.com/JoSSte/ScrumTimer/issues\" target=\"_blank\">issues</a> page</p>\n  \n\n</div>\n","<nav class=\"navbar navbar-dark bg-dark navbar-expand-md\">\n  <a class=\"navbar-brand\" href=\"#\">SCRUM Timer</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#ScrumNavBar\" aria-controls=\"ScrumNavBar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"ScrumNavBar\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['timer']\"><i class=\"fa fa-clock-o\"></i> Timer</a>\n      </li>\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['participants']\"><i class=\"fa fa-users\"></i> Participants</a>\n      </li>\n      <li class=\"nav-item\" [routerLinkActive]=\"['settings']\">\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['settings']\"><i class=\"fa fa-cog\"></i> Settings</a>\n      </li>\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" href=\"#\" routerLink=\"/help\"><i class=\"fa fa-question-circle\"></i> Help</a>\n      </li>\n      <li *ngIf=\"noOpener\" class=\"nav-item\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"openWindows()\"><i class=\"fa fa-external-link-alt\"></i>PopOut</a>\n      </li>\n    </ul>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  noOpener = true;\n  scrumTimerWindow = null;\n  jiraTimerWindow = null;\n  private windowProps = 'resizable=no,scrollbars,status,top=0,right=0,width=';\n  private popupWidth = 360;\n  constructor() {\n    const hasOpener = window.opener;\n    let openerMessage = '';\n    try {\n      if (hasOpener) {\n        this.noOpener = false;\n        openerMessage = 'Not Displaying popout link. already popped out';\n      } else {\n        this.noOpener = true;\n        openerMessage = 'Displaying pop out link';\n      }\n    } catch (e) {\n      console.log(e);\n      openerMessage = 'Not Displaying popout link. Already popped out (exception)';\n      this.noOpener = false;\n    }\n    console.log(openerMessage);\n  }\n  openScrumTimer() {\n    const swp = this.windowProps+ this.popupWidth + ',height=' + window.screen.availHeight;\n    this.scrumTimerWindow = window.open('/#/timer', 'TimerWindowName', swp );\n  }\n  openJira() {\n    const jwp = this.windowProps + (window.screen.availWidth - this.popupWidth - 10) + ',height=' + window.screen.availHeight;\n    const url = localStorage.getItem('JiraURL');\n    if (url) {\n      this.jiraTimerWindow = window.open(url, 'StoryWindowName', jwp);\n    }else{\n      console.log('no JiraURL in localStorage');\n    }\n    \n  }\n  openWindows() {\n    console.log('Opening windows');\n    this.openJira();\n    this.openScrumTimer();\n  }\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-10 offset-md-3\">\n    <form (submit)=\"addParticipant()\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Initials</th>\n            <th>Name</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let participant of participantList\">\n            <td>\n              {{ participant.init }}\n            </td>\n            <td>\n              {{ participant.name }}\n            </td>\n            <td>\n              <button class=\"btn btn-outline-danger btn-sm\" (click)=\"removeParticipant(participant)\"><i class=\"fa fa-trash-o fa-lg\"></i></button>\n            </td>\n          </tr>\n        </tbody>\n        <tfoot>\n          <tr>\n            <td>\n              <input class=\"form-control\" type=\"text\" id=\"init\" name=\"init\" [(ngModel)]=\"init\">\n            </td>\n            <td>\n              <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"name\">\n            </td>\n            <td>\n              <button type=\"submit\" class=\"btn btn-sm btn-outline-primary\" [disabled]=\"name =='' || init == ''\"><i class=\"fa fa-plus\"></i> Add</button>\n            </td>\n          </tr>\n        </tfoot>\n      </table>\n    </form>\n  </div>\n</div>\n<div class=\"row\">\n  <textarea class=\"form-control\" cols=\"50\" rows=\"5\" id=\"jsonParticipants\" name=\"jsonParticipants\" [(ngModel)]=\"jsonParticipants\"></textarea>\n</div>\n<div class=\"container\">\n\n  <button class=\"btn btn-sm btn-outline-dark\" (click)=\"exportParticipants()\" [disabled]=\"participantList.length == 0\"><i class=\"fa fa-upload\" ></i> Export list ({{ participantList.length }})</button>\n  <button class=\"btn btn-sm btn-outline-success\" [disabled]=\"! isJsonString(jsonParticipants)\" (click)=\"importParticipants()\"><i class=\"fa fa-download\"></i> Import List</button>\n  <button class=\"btn btn-sm btn-outline-danger\" (click)=\"jsonParticipants ='' \" [disabled]=\"jsonParticipants.length == 0\"><i class=\"fa fa-eraser\"></i> Clear</button>\n \n</div>","import { Component, OnInit } from '@angular/core';\nimport { Participant } from '../../models/Participant';\nimport { ParticipantService } from '../../services/participant/participant.service';\n\n\n@Component({\n  selector: 'app-participant-list',\n  templateUrl: './participant-list.component.html',\n  styleUrls: ['./participant-list.component.css']\n})\nexport class ParticipantListComponent implements OnInit {\n  init = '';\n  name = '';\n  participantList: Participant[];\n  jsonParticipants = '';\n\n  constructor(public participantService: ParticipantService) {\n\n  }\n\n  ngOnInit() {\n    this.participantList = this.participantService.getParticipants();\n    // check for updated remote participants\n    if(this.participantService.settings.usesRemoteParticipantList()){\n      this.participantService.updateRemoteParticipants();\n    }\n  }\n\n  addParticipant() {\n    if (this.init.length > 1 && this.name.length > 2){\n      this.participantService.addParticipant(new Participant(this.init, this.name));\n    }\n    this.init = '';\n    this.name = '';\n  }\n\n  removeParticipant(participant: Participant): boolean {\n    return this.participantService.removeParticipant(participant);\n  }\n\n  exportParticipants() {\n    this.jsonParticipants = this.participantService.exportParticipants();\n  }\n\n  importParticipants() {\n    this.participantService.importParticipants(this.jsonParticipants);\n    this.participantList = this.participantService.getParticipants();\n    this.jsonParticipants = '';\n  }\n\n  sortParticipants() {\n    console.log('[sortParticipants()] This function has not yet been implemented');\n  }\n\n\n  isJsonString(str) {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '../../services/settings/settings.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n  useGlobalMaxTime: boolean;\n  globalMaxTime: number;\n  useRemoteParticipantList: boolean;\n  remoteParticipantListURL: string;\n  jiraLinkURL: string;\n  useJiraLinkURL: boolean;\n\n  constructor(public settings: SettingsService) {\n\n  }\n\n  ngOnInit() {\n    this.useGlobalMaxTime = this.settings.getUseGlobalMaxTime();\n    this.globalMaxTime = this.settings.getGlobalMaxTime();\n    this.remoteParticipantListURL = this.settings.getRemoteParticipantListURL();\n    this.jiraLinkURL = this.settings.getJiraURL();\n    if(this.remoteParticipantListURL !== ''){\n      this.useRemoteParticipantList = true;\n    }\n    if(this.jiraLinkURL !== ''){\n      this.useJiraLinkURL = true;\n    }\n  }\n\n  saveSettings() {\n    this.settings.setGlobalMaxTime(this.globalMaxTime);\n    this.settings.setUseGlobelMaxTime(this.useGlobalMaxTime);\n    if(this.useRemoteParticipantList){\n      this.settings.setRemoteParticipantList(this.remoteParticipantListURL);\n    }else {\n      this.settings.setRemoteParticipantList('');\n    }\n    if(this.useJiraLinkURL){\n      this.settings.setJiraURL(this.jiraLinkURL);\n    }else {\n      console.log('deleting jira url');\n      this.settings.setJiraURL('');\n    }\n    this.settings.saveSettings();\n  }\n\n  useRemoteParticipantListChecked(): boolean{\n    return !this.useRemoteParticipantList;\n  }\n\n  usejiraLinkChecked(): boolean {\n    return !this.useJiraLinkURL;\n  }\n\n}\n","<h3>Settings</h3>\n<p>\n  From here, you will be able to choose whether you want an overall time goal (e.g. 15 minutes), or a static\n  time-per-person.\n  <!-- You will also be able to choose when you want to have the progress bar to change colour (standard = 80% and 95%) -->\n</p>\n<form action=\"\">\n  <div class=\"input-group mb-3\">\n\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">Total Max Time</span>\n      <div class=\"input-group-text\">\n        <input type=\"checkbox\" name=\"useGlobalMaxTime\" aria-label=\"Use Global max Time\" [(ngModel)]=\"useGlobalMaxTime\" size=\"3\">\n      </div>\n    </div>\n    <input name=\"globalMaxTime\" id=\"globalMaxTime\" type=\"number\" class=\"form-control\" [(ngModel)]=\"globalMaxTime\">\n  </div>\n  <small id=\"globalMaxTimeHelp\" class=\"form-text text-muted\">If the Total Max Time checkbox is selected, the time (in seconds) is used\n    to define the max length of the Scrum meeting. The time for each participant is scaled to fit. If it is left unchecked, each participant is given the time shown in seconds.</small>\n  <br>\n  <div class=\"input-group mb3\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">Remote Participant list</span>\n      <div class=\"input-group-text\">\n        <input type=\"checkbox\" name=\"useRemoteParticipantList\" aria-label=\"Use Remote Participant List\"\n          [(ngModel)]=\"useRemoteParticipantList\">\n      </div>\n    </div>\n    <input name=\"remoteParticipantListURL\" id=\"remoteParticipantListURL\" type=\"url\" class=\"form-control\"\n      [(ngModel)]=\"remoteParticipantListURL\" [disabled]=\"useRemoteParticipantListChecked()\">\n  </div>\n  <small id=\"remoteParticipantListURLHelp\" class=\"form-text text-muted\">If the Remote Participant List URL checkbox is selected, the tool will try\n    to download a .json file from the URL and import the participants from that</small>\n    <br>\n    <div class=\"input-group mb3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\">Jira URL</span>\n        <div class=\"input-group-text\">\n          <input type=\"checkbox\" name=\"useJiraLink\" aria-label=\"Use Jira Link\"\n            [(ngModel)]=\"useJiraLinkURL\">\n        </div>\n      </div>\n      <input name=\"jiraLinkURL\" id=\"jiraLinkURL\" type=\"url\" class=\"form-control\"\n        [(ngModel)]=\"jiraLinkURL\" [disabled]=\"usejiraLinkChecked()\">\n    </div>\n    <small id=\"jiraURLHelp\" class=\"form-text text-muted\">If the checkbox is checked, and you have a url entered, this URL will be opened in a window when using the popout function</small>\n      <br>\n  <input type=\"submit\" value=\"Save Settings\" class=\"btn btn-primary form-control\" (click)=\"saveSettings()\">\n</form>","<div class=\"container\" *ngIf=\"participantList.length > 0 || doneParticipants.length > 0\">\n\n  <br>\n  <h4>Overall Progress</h4>\n  <div class=\"progress\">\n    <div class=\"progress-bar progress-bar-striped bg-success\" role=\"progressbar\" aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\"\n      [style.width]=\"totalPercent + '%'\">\n      <span>{{totalPercent}}%</span>\n    </div>\n  </div>\n  <br>\n  <h4>Overall Time</h4>\n  <div class=\"progress\">\n    <div class=\"progress-bar progress-bar-striped bg-info\" role=\"progressbar\" aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\"\n      [ngClass]=\"{ 'progress-bar-animated': totalTimePercent < 100, 'bg-warning': totalTimePercent > 75 && totalTimePercent <= 95,'bg-danger': totalTimePercent > 95 }\"\n      [style.width]=\"totalTimePercent + '%'\">\n      <span>\n        <i class=\"fa fa-exclamation-triangle\" [ngClass]=\"{'invisible' : totalTimePercent <= 95}\"></i>{{totalMaxTime - currentTotalElapsed | secs}}</span>\n    </div>\n  </div>\n  <br>\n  <h4>{{ currentParticipant.name }} [{{ currentParticipant.init }}] Progress</h4>\n  <div class=\"progress\">\n    <div class=\"progress-bar progress-bar-striped \" [ngClass]=\"{ 'progress-bar-animated': currentPercent < 100, 'bg-warning': currentPercent > 75 && currentPercent <= 95,'bg-danger': currentPercent > 95 }\"\n      role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" [style.width]=\"currentPercent + '%'\">\n      <span>\n        <i class=\"fa fa-exclamation-triangle\" [ngClass]=\"{'invisible' : currentPercent <= 95}\"></i>\n        {{individualTime - currentElapsed | secs}}\n      </span>\n    </div>\n  </div>\n  <br>\n  <div class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar\">\n    <div class=\"btn-group mr-2\" role=\"group\">\n      <!-- <button class=\"btn btn-outline-success\" (click)=\"startTimer()\" title=\"Start Timer\" [disabled]=\"participantList.length == 0 || timerActive\">\n        <i class=\"fa fa-hourglass-start\"></i>\n      </button> -->\n      <button class=\"btn btn-outline-danger \" (click)=\"stopTimer()\" title=\"Stop Timer\" [disabled]=\"totalPercent == 0 && currentPercent == 0 || !timerActive\">\n        <i class=\"fa fa-hourglass-end\"></i>\n      </button>\n      <button class=\"btn btn-outline-secondary\" (click)=\"resetTimer()\" title=\"Reset\">\n        <i class=\"fa fa-undo\"></i>\n      </button>\n    </div>\n    <div *ngIf=\"!timerActive\" class=\"btn-group mr-2\" role=\"group\">\n      <button class=\"btn btn-outline-success\" (click)=\"startTimer()\" title=\"Start Timer\" [disabled]=\"participantList.length == 0 || timerActive\">\n        <i class=\"fa fa-hourglass-start\"></i> {{ currentParticipant.init }}\n      </button>\n    </div>\n    <div *ngIf=\"timerActive\" class=\"btn-group mr-2\" role=\"group\"> <!--  -->\n      <button class=\"btn btn-outline-primary\" (click)=\"nextParticipant()\" [disabled]=\"participantList.length <= 1 || !timerActive\"\n        title=\"Next participant\">\n        <i class=\"fa fa-step-forward\"></i> Next <!-- {{ (participantList.length > 1)?(\"(\" + participantList[1].init)+\")\":\"\" }} -->\n      </button>\n    </div>\n    <div class=\"btn-group mr-2\" role=\"group\">\n      <button id=\"btnGroupDrop1\" type=\"button\" class=\"btn btn-outline-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n        aria-expanded=\"false\">\n        <i class=\"fa fa-ellipsis-v\"></i>\n      </button>\n      <div class=\"dropdown-menu\">\n        <a href=\"#\" class=\"dropdown-item\" data-toggle=\"collapse\" data-target=\"#Questions\" aria-expanded=\"false\" aria-controls=\"Questions\">\n          <i class=\"fa fa-question\"></i> Daily Question Card</a>\n        <a href=\"#\" class=\"dropdown-item\" data-toggle=\"collapse\" data-target=\"#Debug\" aria-expanded=\"false\" aria-controls=\"Debug\">\n          <i class=\"fa fa-bug\"></i> Debug Information</a>\n      </div>\n    </div>\n  </div>\n  <div class=\"collapse\" id=\"Debug\">\n    <hr>\n    <div class=\"card card-body\">\n      <h4>Debug info</h4>\n      <ul>\n        <li>Total {{ totalPercent }}% Complete</li>\n        <li>Current {{ currentPercent }}% Complete</li>\n        <li>Total Elapsed: {{ currentTotalElapsed }}</li>\n        <li>Stats\n          <ul>\n            <li>Participants Left: {{ participantList.length }}</li>\n            <li>Participants Done: {{ doneParticipants.length }}</li>\n            <li>Participants Absent: {{ absentParticipants.length }}</li>\n          </ul>\n        </li>\n        <li>Diff: {{ diff }}</li>\n        <li>Elapsed: {{ currentElapsed }}</li>\n        <li>Elapsed: {{ totalElapsed }}</li>\n        <li>Partipicant Time: {{ individualTime }}</li>\n        <li>Current Participant: {{ currentParticipant.name }} [{{ currentParticipant.init }}]</li>\n      </ul>\n    </div>\n  </div>\n\n\n  <div class=\"collapse\" id=\"Questions\">\n    <hr>\n    <div class=\"card card-body\">\n      <h4>Questions</h4>\n      <ul>\n        <li>What did you do yesterday?</li>\n        <li>What will you do today?</li>\n        <li>Are you impeded in any way?</li>\n      </ul>\n    </div>\n  </div>\n\n  <hr>\n  <h4>Participants\n    <button class=\"btn btn-sm btn-info\" (click)=\"shuffleParticipants()\" title=\"Shuffle Participants\" [disabled]=\"participantList.length <= 2\">\n      <i class=\"fa fa-random\"></i>\n    </button>\n    <button class=\"btn btn-sm btn-info\" (click)=\"sortParticipants()\" title=\"Sort Participants\" [disabled]=\"participantList.length <= 2\">\n      <i class=\"fa fa-sort-amount-asc\"></i>\n    </button>\n  </h4>\n  <ul class=\"participant-list list-group\">\n    <li class=\"list-group-item\" *ngFor=\"let p of participantList; let i=index\" [ngClass]=\"{'text-success' : i == 0, 'text-primary': i == 1}\">\n      <button class=\"btn btn-outline-secondary btn-sm\" (click)=\"markAbsent(p)\" title=\"Mark as absent\" [disabled]=\"participantList.length <= 2 || (i == 0 && timerActive)\">\n        <i class=\"fa fa-minus-circle\"></i>\n      </button> {{ p.name }} [{{ p.init }}]</li>\n    <li class=\"list-group-item list-group-item-secondary\" *ngFor=\"let dp of doneParticipants\"> {{ dp.name }} [{{ dp.init }}] -\n      <span [ngClass]=\"{'text-danger' : dp.time >= individualTime}\">{{ dp.time | secs }}</span>\n    </li>\n    <li class=\"list-group-item list-group-item-danger\" *ngFor=\"let ap of absentParticipants\">\n      <button class=\"btn btn-outline-secondary btn-sm\" (click)=\"markPresent(ap)\" title=\"Mark as present\">\n        <i class=\"fa fa-plus-circle\"></i>\n      </button> {{ ap.name }} [{{ ap.init }}]</li>\n  </ul>\n\n</div>\n<div class=\"jumbotron\" *ngIf=\"participantList.length == 0 && doneParticipants.length == 0\">\n  <p>There are no participants in your list. </p>\n  <p>To start using the Scrum Timer, please go to the\n    <a href=\"#\" [routerLink]=\"['participants']\">participant list</a> and add some people to the list, either manually or by importing a list from a colleague.</p>\n  <p>Note that the Scrum Timer stores participants in local storage. Nothing is sent to the server. This is to provide anonymity\n    and be compliant with corporate policies.</p>\n</div>\n","import { SettingsService } from '../../services/settings/settings.service';\nimport { Component, ElementRef, OnInit, OnDestroy } from '@angular/core';\nimport { Participant } from '../../models/Participant';\nimport { ParticipantService } from '../../services/participant/participant.service';\nimport { Subscription, timer } from 'rxjs';\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.css']\n})\nexport class TimerComponent implements OnInit {\n  timerSubscription: Subscription;\n  participantList: Participant[];\n  absentParticipants: Participant[] = Array();\n  doneParticipants: Participant[] = Array();\n\n  // variables for session\n  totalMaxTime = this.settingsService.getGlobalMaxTime();\n  recommendedIndividualTime = 120;\n  totalPercent = 0;\n  totalTimePercent = 0;\n  totalElapsed = 0;\n  currentTotalElapsed = 0;\n\n  // variables for indiviual\n  individualMaxTime = 120;\n  individualTime: number = this.individualMaxTime;\n  currentPercent = 0;\n  currentParticipant: Participant;\n\n  future: Date;\n  futureString: string;\n  diff: number;\n  currentDiff: number;\n  currentElapsed = 0;\n  timerActive = false;\n\n  constructor(\n    public participantService: ParticipantService,\n    public settingsService: SettingsService\n    ) {\n  }\n\n  ngOnInit() {\n    this.participantList = this.participantService.getParticipants();\n    this.sortParticipants();\n    if (this.settingsService.getUseGlobalMaxTime()) {\n      this.individualTime = Math.round(\n        this.settingsService.getGlobalMaxTime() /\n        (this.participantList.length + this.doneParticipants.length)\n      );\n    } else {\n      this.individualTime = this.individualMaxTime;\n    }\n  }\n\n  stopTimer() {\n    // save time for participant\n    this.currentParticipant.time = this.currentElapsed;\n    // this.currentPercent = 0;\n    // move first Participant to done participants\n    if (this.participantList.length > 0) {\n      this.doneParticipants.push(this.currentParticipant);\n    }\n    // remove the top participant\n    this.participantList.splice(0, 1);\n    // set progressbar to 100%\n    this.totalPercent = 100;\n    this.timerActive = false;\n    // stop timer\n    this.timerSubscription.unsubscribe();\n  }\n\n  startTimer() {\n    const source = timer(1000, 2000);\n    this.currentParticipant = this.participantList[0];\n    this.future = new Date();\n    // set the timer to a time in the future, based on \"individualTime\" seconds\n    if (this.settingsService.getUseGlobalMaxTime()) {\n      if (this.totalElapsed >= this.settingsService.getGlobalMaxTime()) {\n        // 1 sec grace time :)\n        this.individualTime = 1;\n      } else {\n        this.individualTime = Math.round(\n          (this.settingsService.getGlobalMaxTime() - this.totalElapsed )/\n          (this.participantList.length)\n        );\n      }\n    } else {\n      this.individualTime = this.individualMaxTime;\n    }\n    this.future.setSeconds(this.future.getSeconds() + this.individualTime);\n\n    this.timerSubscription = source.subscribe(val => {\n      this.currentDiff = Math.floor((this.future.getTime() - new Date().getTime()) / 1000);\n      this.currentElapsed = this.individualTime - this.currentDiff;\n      this.currentPercent = Math.round((this.currentElapsed / this.individualTime) * 100);\n      this.currentTotalElapsed = this.totalElapsed + this.currentElapsed;\n      this.totalTimePercent = Math.round(((this.totalElapsed + this.currentElapsed) / this.totalMaxTime) * 100) ;\n    });\n\n    this.timerActive = true;\n  }\n\n\n  nextParticipant() {\n    // save time for participant\n    this.participantList[0].time = this.currentElapsed;\n    // add up total elapsed time\n    this.totalElapsed += this.currentElapsed;\n    this.currentElapsed = 0;\n    this.currentDiff = 0;\n    this.currentPercent = 0;\n    // move first Participant to done participants\n    this.doneParticipants.push(this.participantList[0]);\n    // remove the top participant\n    this.participantList.splice(0, 1);\n    if (this.participantList.length > 0) {\n      this.currentParticipant = this.participantList[0];\n    } else {\n      this.currentParticipant = new Participant('', '');\n\n    }\n    this.totalPercent = Math.round((this.doneParticipants.length / (this.participantList.length + this.doneParticipants.length)) * 100);\n    this.totalTimePercent = Math.round(((this.totalElapsed + this.currentElapsed) / this.totalMaxTime) * 100) ;\n    this.currentPercent = 0;\n    this.currentDiff = 0;\n    this.currentPercent = 0;\n    this.timerActive = false;\n    // stop timer\n    this.timerSubscription.unsubscribe();\n    this.startTimer();\n  }\n\n  resetTimer() {\n\n    this.stopTimer();\n\n    // move all participants from done to present\n    for (let i = this.doneParticipants.length - 1; i >= 0; i--) {\n      // reset time taken\n      this.doneParticipants[i].time = 0;\n      this.participantList.push(this.doneParticipants[i]);\n      this.doneParticipants.splice(i, 1);\n    }\n\n    // reset timers\n    this.totalElapsed = 0;\n    this.totalPercent = 0;\n    this.totalTimePercent = 0;\n    this.currentTotalElapsed = 0;\n    this.currentPercent = 0;\n    this.currentDiff = 0;\n    this.currentParticipant = this.participantList[0];\n    this.currentPercent = 0;\n    this.currentElapsed = 0;\n    this.individualTime = Math.round(\n      this.settingsService.getGlobalMaxTime() /\n      this.participantList.length\n    );\n\n    this.sortParticipants();\n  }\n\n  /**\n   * Shuffles an array pseudo-randomly\n   *\n   * @param array\n   */\n  shuffle(array: any[]) {\n    let currentIndex = array.length, temporaryValue: any, randomIndex: number;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  shuffleParticipants() {\n    this.participantList = this.shuffle(this.participantList);\n    this.currentParticipant = this.participantList[0];\n  }\n\n  sortParticipants() {\n    this.participantList.sort(function(a, b){\n      return a.name.localeCompare(b.name);\n    });\n    this.currentParticipant = this.participantList[0];\n  }\n\n\n  /**\n   * Mark participant as absent.\n   *\n   * note that the last two participants cannot be marked as absent.\n   *\n   * @param participant Participant to mark as absent\n   */\n  markAbsent(participant: Participant) {\n    if (this.participantList.length <= 2) {\n      console.log('Cannot mark the last two participants absent.');\n    } else {\n      const idx: number = this.participantList.indexOf(participant);\n      this.absentParticipants.push(participant);\n      this.participantList.splice(idx, 1);\n      this.currentParticipant = this.participantList[0];\n    }\n  }\n\n  /**\n   * Mark participant as present.\n   *\n   * @param participant Participant to mark as present\n   */\n  markPresent(participant: Participant) {\n    const idx: number = this.absentParticipants.indexOf(participant);\n    this.participantList.push(participant);\n    this.absentParticipants.splice(idx, 1);\n    // console.log(this.absentParticipants);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Adapter } from './adapter';\n\nexport class Participant {\n    constructor(\n        public init: string,\n        public name: string,\n        public time: number = 0\n    ) { }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ParticipantAdapter implements Adapter<Participant> {\n    adapt(item: any): Participant {\n        return new Participant(item.init, item.name, item.time);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'secs'\n})\nexport class SecsPipe implements PipeTransform {\n\n  transform(totalseconds: number): string {\n    let prefix = '';\n    if (totalseconds < 0) {\n      totalseconds = Math.abs(totalseconds);\n      prefix = '-';\n    }\n    const minutes: number = Math.floor(totalseconds / 60);\n    const seconds: number = totalseconds % 60;\n    return prefix + ('00'+minutes).slice(-2) + ':' + ('00'+seconds).slice(-2);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Participant, ParticipantAdapter } from '../../models/Participant';\nimport { SettingsService } from '../settings/settings.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class ParticipantService {\n  participants: Participant[];\n  lastSync: Date = new Date('2000-01-01T00:00:00.000Z');\n\n  constructor(public settings: SettingsService, private http: HttpClient, private adapter: ParticipantAdapter) {\n    this.getLastSync();\n  }\n\n  getLastSync() {\n    const localSync = localStorage.getItem('lastSync');\n    if (localSync == null) {\n      console.log('never synced');\n    } else {\n      console.log('Last sync: ' + localSync);\n    }\n  }\n\n  setLastSync(d: Date) {\n    localStorage.setItem('lastSync', d.toISOString());\n  }\n\n  getParticipants() {\n\n    if (localStorage.getItem('participants') === null) {\n      this.participants = [];\n    } else {\n      // TODO: check if the localstorage Entry is valid JSON before returning\n      this.participants = JSON.parse(localStorage.getItem('participants'));\n    }\n    return this.participants;\n  }\n\n  addParticipant(participant: Participant) {\n    this.participants.unshift(participant);\n    localStorage.setItem('participants', JSON.stringify(this.participants));\n  }\n\n  /**\n   * Remove specified participant from the\n   * @param participant Participant to be removed\n   */\n  removeParticipant(participant: Participant): boolean {\n    let removed = false;\n    for (let i = 0; i < this.participants.length; i++) {\n      if (participant.name === this.participants[i].name  && participant.init === this.participants[i].init  ) {\n        this.participants.splice(i, 1);\n        removed = true;\n      }\n    }\n    localStorage.setItem('participants', JSON.stringify(this.participants));\n    return removed;\n  }\n\n  /**\n   * Remove all participants in the list\n   */\n  purgeParticipants() {\n    this.participants.splice(0);\n    localStorage.setItem('participants', JSON.stringify(this.participants));\n  }\n\n  exportParticipants() {\n    return JSON.stringify(this.participants);\n  }\n\n  // overwrite localstorage, and refresh local list of participants from there...\n  importParticipants(jsonParticipants) {\n    localStorage.setItem('participants', jsonParticipants);\n    this.exportParticipants();\n  }\n\n  getRemoteParticipants(): Observable<Participant[]> {\n    if (this.settings.usesRemoteParticipantList()) {\n      console.log('remote participant list affirmative. Checking URL');\n      const durationSinceLastSync = (Date.now()).valueOf() - this.lastSync.valueOf();\n\n      // If more than 15 hours since sync, update\n      if (durationSinceLastSync > 54000) {\n        const url = this.settings.getRemoteParticipantListURL();\n        console.log('Seconds since last sync: ' + durationSinceLastSync + ' syncing from ' + url + ' . . .');\n        return this.http\n        .get(url)\n        .pipe(map((data: any[]) => data.map((item) => this.adapter.adapt(item))));\n\n      } else { // TODO: throw exception\n        console.log('not syncing');\n      }\n    } else { // TODO: throw exception ?\n      console.log('using local participant list');\n    }\n  }\n\n  updateRemoteParticipants(){\n    \n    this.getRemoteParticipants().subscribe(resp => {\n      // display its headers\n      this.participants =  resp;\n      localStorage.setItem('participants', JSON.stringify(this.participants));\n      this.setLastSync(new Date());\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n@Injectable()\nexport class SettingsService {\n  private useGlobalMaxTime = true;\n  private globalMaxTime: number = 60 * 15;\n  private remoteParticipantList = '';\n  private jiraURL = '';\n\n  constructor() { }\n\n  getGlobalMaxTime(): number {\n    if (localStorage.getItem('settings') === null) {\n      this.globalMaxTime = 60 * 15;\n    } else {\n      this.globalMaxTime = JSON.parse(localStorage.getItem('settings'))[1];\n    }\n    return this.globalMaxTime;\n  }\n\n  getUseGlobalMaxTime(): boolean {\n    if (localStorage.getItem('settings') === null) {\n      this.useGlobalMaxTime = true;\n    } else {\n      this.useGlobalMaxTime = JSON.parse(localStorage.getItem('settings'))[0];\n    }\n    return this.useGlobalMaxTime;\n  }\n\n  getRemoteParticipantListURL(): string {\n    if (localStorage.getItem('settings') === null) {\n      this.remoteParticipantList = '';\n    } else {\n      this.remoteParticipantList = JSON.parse(localStorage.getItem('settings'))[2];\n    }\n    return this.remoteParticipantList;\n  }\n\n  getJiraURL(): string {\n    if (localStorage.getItem('JiraURL') === null) {\n      this.jiraURL = '';\n    } else {\n      this.jiraURL = localStorage.getItem('JiraURL');\n    }\n    return this.jiraURL;\n  }\n\n  usesRemoteParticipantList(): boolean {\n    return this.getRemoteParticipantListURL() !== '';\n  }\n\n  setGlobalMaxTime(newTime: number) {\n    this.globalMaxTime = newTime;\n    this.saveSettings();\n  }\n\n  setRemoteParticipantList(newUrl: string) {\n    this.remoteParticipantList = newUrl;\n    this.saveSettings();\n  }\n\n  setJiraURL(newUrl: string) {\n    this.jiraURL = newUrl;\n    if(newUrl !== ''){\n      localStorage.setItem('JiraURL', this.jiraURL);\n    }else {\n      localStorage.removeItem('JiraURL');\n    }\n  }\n\n  setUseGlobelMaxTime(useGMTime: boolean) {\n    this.useGlobalMaxTime = useGMTime;\n    this.saveSettings();\n  }\n\n  exportSettings() {\n    return JSON.stringify([this.useGlobalMaxTime, this.globalMaxTime, this.remoteParticipantList]);\n  }\n\n  saveSettings() {\n    localStorage.setItem('settings', this.exportSettings());\n  }\n\n  // overwrite localstorage, and refresh local list of participants from there...\n  importSettings(jsonSettings) {\n    localStorage.setItem('participants', jsonSettings);\n    this.exportSettings();\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"]}