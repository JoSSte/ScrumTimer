{"version":3,"sources":["webpack:///src/app/components/settings/settings.component.ts","webpack:///src/app/pipes/hhmmss.pipe.ts","webpack:///src/app/services/participant/participant.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/components/help/help.component.ts","webpack:///src/app/services/settings/settings.service.ts","webpack:///src/app/components/help/help.component.html","webpack:///src/app/components/timer/timer.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/settings/settings.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/components/timer/timer.component.html","webpack:///src/app/components/participant-list/participant-list.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/participant-list/participant-list.component.ts","webpack:///src/app/app.component.html","webpack:///src/main.ts"],"names":["SettingsComponent","settings","useGlobalMaxTime","getUseGlobalMaxTime","globalMaxTime","getGlobalMaxTime","setGlobalMaxTime","setUseGlobelMaxTime","saveSettings","SecondsPipe","totalseconds","prefix","Math","abs","minutes","floor","seconds","slice","ParticipantService","localStorage","getItem","participants","JSON","parse","participant","unshift","setItem","stringify","i","length","splice","jsonParticipants","exportParticipants","a","b","last_nom","environment","production","HelpComponent","version","SettingsService","newTime","useGMTime","exportSettings","jsonSettings","TimerComponent","participantService","settingsService","absentParticipants","Array","doneParticipants","totalMaxTime","recommendedIndividualTime","totalPercent","totalTimePercent","totalElapsed","currentTotalElapsed","individualMaxTime","individualTime","currentPercent","currentElapsed","timerActive","participantList","getParticipants","sortParticipants","round","currentParticipant","time","push","timerSubscription","unsubscribe","source","future","Date","setSeconds","getSeconds","subscribe","val","currentDiff","getTime","startTimer","stopTimer","array","currentIndex","temporaryValue","randomIndex","random","shuffle","sort","name","localeCompare","console","log","idx","indexOf","AppComponent","title","appRoutes","path","component","AppModule","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","NavbarComponent","ParticipantListComponent","init","addParticipant","removeParticipant","importParticipants","str","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaA,iB;AAIX,mCAAmBC,QAAnB,EAA8C;AAAA;;AAA3B,eAAAA,QAAA,GAAAA,QAAA;AAElB;;;;iBAED,oBAAW;AACT,iBAAKC,gBAAL,GAAwB,KAAKD,QAAL,CAAcE,mBAAd,EAAxB;AACA,iBAAKC,aAAL,GAAqB,KAAKH,QAAL,CAAcI,gBAAd,EAArB;AACD;;;iBAED,wBAAe;AACb,iBAAKJ,QAAL,CAAcK,gBAAd,CAA+B,KAAKF,aAApC;AACA,iBAAKH,QAAL,CAAcM,mBAAd,CAAkC,KAAKL,gBAAvC;AACA,iBAAKD,QAAL,CAAcO,YAAd;AACD;;;;;;;;;;;;;;;;;;;;;ACrBH;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,W;;;;;;;iBACX,mBAAUC,YAAV,EAA8B;AAC5B,gBAAIC,MAAM,GAAW,EAArB;;AACA,gBAAID,YAAY,GAAG,CAAnB,EAAsB;AACpBA,0BAAY,GAAGE,IAAI,CAACC,GAAL,CAASH,YAAT,CAAf;AACAC,oBAAM,GAAG,GAAT;AACD;;AACD,gBAAMG,OAAO,GAAWF,IAAI,CAACG,KAAL,CAAWL,YAAY,GAAG,EAA1B,CAAxB;AACA,gBAAMM,OAAO,GAAWN,YAAY,GAAG,EAAvC;AACA,mBAAOC,MAAM,GAAG,CAAC,OAAKG,OAAN,EAAeG,KAAf,CAAqB,CAAC,CAAtB,CAAT,GAAoC,GAApC,GAA0C,CAAC,OAAKD,OAAN,EAAeC,KAAf,CAAqB,CAAC,CAAtB,CAAjD;AACD;;;;;;;;;;;;;;;;;;;;;ACVH;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,kB;AAGX,sCAAc;AAAA;AAAG;;;;iBAEjB,2BAAkB;AAChB,gBAAIC,YAAY,CAACC,OAAb,CAAqB,cAArB,MAAyC,IAA7C,EAAmD;AACjD,mBAAKC,YAAL,GAAoB,EAApB;AACD,aAFD,MAEO;AACL,mBAAKA,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAApB;AACD;;AACD,mBAAO,KAAKC,YAAZ;AACD;;;iBAED,wBAAeG,WAAf,EAAyC;AACvC,iBAAKH,YAAL,CAAkBI,OAAlB,CAA0BD,WAA1B;AACAL,wBAAY,CAACO,OAAb,CAAqB,cAArB,EAAqCJ,IAAI,CAACK,SAAL,CAAe,KAAKN,YAApB,CAArC;AACD;;;iBAED,2BAAkBG,WAAlB,EAA4C;AAC1C,iBAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKP,YAAL,CAAkBQ,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AACjD,kBAAIJ,WAAW,IAAI,KAAKH,YAAL,CAAkBO,CAAlB,CAAnB,EAAyC;AACvC,qBAAKP,YAAL,CAAkBS,MAAlB,CAAyBF,CAAzB,EAA4B,CAA5B;AACD;AACF;;AACDT,wBAAY,CAACO,OAAb,CAAqB,cAArB,EAAqCJ,IAAI,CAACK,SAAL,CAAe,KAAKN,YAApB,CAArC;AACD;;;iBAED,8BAAqB;AACnB,mBAAOC,IAAI,CAACK,SAAL,CAAe,KAAKN,YAApB,CAAP;AACD,W,CAED;;;;iBACA,4BAAmBU,gBAAnB,EAAqC;AACnCZ,wBAAY,CAACO,OAAb,CAAqB,cAArB,EAAqCK,gBAArC;AACA,iBAAKC,kBAAL;AACD;;;iBAED,iBAAQC,CAAR,EAAWC,CAAX,EAAc;AACZ,gBAAID,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAnB,EACE,OAAO,CAAC,CAAR;AACF,gBAAIF,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAnB,EACE,OAAO,CAAP;AACF,mBAAO,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;AChDH;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;AACA;;;AAEO,UAAMC,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;;;;;;;;;;;;;;;;ACJP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;UAOaC,a;AAGX,iCAAc;AAAA;;AAFP,eAAAC,OAAA,GAAkB,qDAAlB;AAEU;;;;iBAEjB,oBAAW,CACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZH;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,e;AAIX,mCAAc;AAAA;;AAHN,eAAAtC,gBAAA,GAA4B,IAA5B;AACA,eAAAE,aAAA,GAAwB,KAAK,EAA7B;AAES;;;;iBACjB,4BAAgB;AACd,gBAAIe,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,IAAzC,EAA+C;AAC7C,mBAAKhB,aAAL,GAAqB,KAAK,EAA1B;AACD,aAFD,MAEO;AACL,mBAAKA,aAAL,GAAqBkB,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6C,CAA7C,CAArB;AACD;;AACD,mBAAO,KAAKhB,aAAZ;AACD;;;iBAED,0BAAiBqC,OAAjB,EAAkC;AAChC,iBAAKrC,aAAL,GAAqBqC,OAArB;AACA,iBAAKjC,YAAL;AACD;;;iBAED,+BAAmB;AACjB,gBAAIW,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,IAAzC,EAA+C;AAC7C,mBAAKlB,gBAAL,GAAwB,IAAxB;AACD,aAFD,MAEO;AACL,mBAAKA,gBAAL,GAAwBoB,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6C,CAA7C,CAAxB;AACD;;AACD,mBAAO,KAAKlB,gBAAZ;AACD;;;iBAED,6BAAoBwC,SAApB,EAAwC;AACtC,iBAAKxC,gBAAL,GAAwBwC,SAAxB;AACA,iBAAKlC,YAAL;AACD;;;iBAED,0BAAiB;AACf,mBAAOc,IAAI,CAACK,SAAL,CAAe,CAAC,KAAKzB,gBAAN,EAAwB,KAAKE,aAA7B,CAAf,CAAP;AACD;;;iBAED,wBAAe;AACbe,wBAAY,CAACO,OAAb,CAAqB,UAArB,EAAiC,KAAKiB,cAAL,EAAjC;AACD,W,CAED;;;;iBACA,wBAAeC,YAAf,EAA6B;AAC3BzB,wBAAY,CAACO,OAAb,CAAqB,cAArB,EAAqCkB,YAArC;AACA,iBAAKD,cAAL;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uEC/CH,+I,IACE,uH,IAAI,qF,IACJ,sH,IAAG,2F,IACe,wM,IAAiF,qF,IAAe,2F,IAElH,uH,IAAI,oF,IAEJ,yH,IACE,wH,IAAI,gF,IACF,uH,IACE,+I,IAA2B,uF,IAAiB,mI,IAChD,wH,IAAI,qF,IAEF,uH,IACE,iJ,IAA6B,gF,IAAU,yH,IAC3C,wH,IAAI,oF,IACF,8J,IACE,yJ,IACK,2G,IAET,wH,IAAI,4J,IAER,2J,IAAmC,sF,IAAA,I,EAAA;AAAA;AAAA;;AAAA;AAAmB,S;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACtBtD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaE,c;AA2BX,gCACSC,kBADT,EAESC,eAFT,EAEyC;AAAA;;AADhC,eAAAD,kBAAA,GAAAA,kBAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AA1BT,eAAAC,kBAAA,GAAoCC,KAAK,EAAzC;AACA,eAAAC,gBAAA,GAAkCD,KAAK,EAAvC,CAyByC,CAvBzC;;AACA,eAAAE,YAAA,GAAe,KAAKJ,eAAL,CAAqB1C,gBAArB,EAAf;AACA,eAAA+C,yBAAA,GAA4B,GAA5B;AACA,eAAAC,YAAA,GAAe,CAAf;AACA,eAAAC,gBAAA,GAAmB,CAAnB;AACA,eAAAC,YAAA,GAAe,CAAf;AACA,eAAAC,mBAAA,GAAsB,CAAtB,CAiByC,CAfzC;;AACA,eAAAC,iBAAA,GAA4B,GAA5B;AACA,eAAAC,cAAA,GAAyB,KAAKD,iBAA9B;AACA,eAAAE,cAAA,GAAyB,CAAzB;AAOA,eAAAC,cAAA,GAAyB,CAAzB;AACA,eAAAC,WAAA,GAAuB,KAAvB;AAMC;;;;iBAED,oBAAW;AACT,iBAAKC,eAAL,GAAuB,KAAKhB,kBAAL,CAAwBiB,eAAxB,EAAvB;AACA,iBAAKC,gBAAL;;AACA,gBAAI,KAAKjB,eAAL,CAAqB5C,mBAArB,EAAJ,EAAgD;AAC9C,mBAAKuD,cAAL,GAAsB9C,IAAI,CAACqD,KAAL,CACpB,KAAKlB,eAAL,CAAqB1C,gBAArB,MACC,KAAKyD,eAAL,CAAqBjC,MAArB,GAA8B,KAAKqB,gBAAL,CAAsBrB,MADrD,CADoB,CAAtB;AAID,aALD,MAKO;AACL,mBAAK6B,cAAL,GAAsB,KAAKD,iBAA3B;AACD;AACF;;;iBAED,uBAAW,CACV;;;iBAED,qBAAY;AACV;AACA,iBAAKS,kBAAL,CAAwBC,IAAxB,GAA+B,KAAKP,cAApC,CAFU,CAGV;AACA;;AACA,gBAAI,KAAKE,eAAL,CAAqBjC,MAArB,GAA8B,CAAlC,EAAqC;AACnC,mBAAKqB,gBAAL,CAAsBkB,IAAtB,CAA2B,KAAKF,kBAAhC;AACD,aAPS,CAQV;;;AACA,iBAAKJ,eAAL,CAAqBhC,MAArB,CAA4B,CAA5B,EAA+B,CAA/B,EATU,CAUV;;AACA,iBAAKuB,YAAL,GAAoB,GAApB;AACA,iBAAKQ,WAAL,GAAmB,KAAnB,CAZU,CAaV;;AACA,iBAAKQ,iBAAL,CAAuBC,WAAvB;AACD;;;iBAED,sBAAa;AAAA;;AACX,gBAAMC,MAAM,GAAG,mDAAM,IAAN,EAAY,IAAZ,CAAf;AACA,iBAAKL,kBAAL,GAA0B,KAAKJ,eAAL,CAAqB,CAArB,CAA1B;AACA,iBAAKU,MAAL,GAAc,IAAIC,IAAJ,EAAd,CAHW,CAIX;;AACA,gBAAI,KAAK1B,eAAL,CAAqB5C,mBAArB,EAAJ,EAAgD;AAC9C,kBAAI,KAAKoD,YAAL,IAAqB,KAAKR,eAAL,CAAqB1C,gBAArB,EAAzB,EAAkE;AAChE;AACA,qBAAKqD,cAAL,GAAsB,CAAtB;AACD,eAHD,MAGO;AACL,qBAAKA,cAAL,GAAsB9C,IAAI,CAACqD,KAAL,CACpB,CAAC,KAAKlB,eAAL,CAAqB1C,gBAArB,KAA0C,KAAKkD,YAAhD,IACC,KAAKO,eAAL,CAAqBjC,MAFF,CAAtB;AAID;AACF,aAVD,MAUO;AACL,mBAAK6B,cAAL,GAAsB,KAAKD,iBAA3B;AACD;;AACD,iBAAKe,MAAL,CAAYE,UAAZ,CAAuB,KAAKF,MAAL,CAAYG,UAAZ,KAA2B,KAAKjB,cAAvD;AAEA,iBAAKW,iBAAL,GAAyBE,MAAM,CAACK,SAAP,CAAiB,UAAAC,GAAG,EAAI;AAC/C,mBAAI,CAACC,WAAL,GAAmBlE,IAAI,CAACG,KAAL,CAAW,CAAC,KAAI,CAACyD,MAAL,CAAYO,OAAZ,KAAwB,IAAIN,IAAJ,GAAWM,OAAX,EAAzB,IAAiD,IAA5D,CAAnB;AACA,mBAAI,CAACnB,cAAL,GAAsB,KAAI,CAACF,cAAL,GAAsB,KAAI,CAACoB,WAAjD;AACA,mBAAI,CAACnB,cAAL,GAAsB/C,IAAI,CAACqD,KAAL,CAAY,KAAI,CAACL,cAAL,GAAsB,KAAI,CAACF,cAA5B,GAA8C,GAAzD,CAAtB;AACA,mBAAI,CAACF,mBAAL,GAA2B,KAAI,CAACD,YAAL,GAAoB,KAAI,CAACK,cAApD;AACA,mBAAI,CAACN,gBAAL,GAAwB1C,IAAI,CAACqD,KAAL,CAAY,CAAC,KAAI,CAACV,YAAL,GAAoB,KAAI,CAACK,cAA1B,IAA4C,KAAI,CAACT,YAAlD,GAAkE,GAA7E,CAAxB;AACD,aANwB,CAAzB;AAQA,iBAAKU,WAAL,GAAmB,IAAnB;AACD;;;iBAGD,2BAAkB;AAChB;AACA,iBAAKC,eAAL,CAAqB,CAArB,EAAwBK,IAAxB,GAA+B,KAAKP,cAApC,CAFgB,CAGhB;;AACA,iBAAKL,YAAL,IAAqB,KAAKK,cAA1B;AACA,iBAAKA,cAAL,GAAsB,CAAtB;AACA,iBAAKkB,WAAL,GAAmB,CAAnB;AACA,iBAAKnB,cAAL,GAAsB,CAAtB,CAPgB,CAQhB;;AACA,iBAAKT,gBAAL,CAAsBkB,IAAtB,CAA2B,KAAKN,eAAL,CAAqB,CAArB,CAA3B,EATgB,CAUhB;;AACA,iBAAKA,eAAL,CAAqBhC,MAArB,CAA4B,CAA5B,EAA+B,CAA/B;;AACA,gBAAI,KAAKgC,eAAL,CAAqBjC,MAArB,GAA8B,CAAlC,EAAqC;AACnC,mBAAKqC,kBAAL,GAA0B,KAAKJ,eAAL,CAAqB,CAArB,CAA1B;AACD,aAFD,MAEO;AACL,mBAAKI,kBAAL,GAA0B;AAAE,wBAAQ,EAAV;AAAc,wBAAQ;AAAtB,eAA1B;AAED;;AACD,iBAAKb,YAAL,GAAoBzC,IAAI,CAACqD,KAAL,CAAY,KAAKf,gBAAL,CAAsBrB,MAAtB,IAAgC,KAAKiC,eAAL,CAAqBjC,MAArB,GAA8B,KAAKqB,gBAAL,CAAsBrB,MAApF,CAAD,GAAgG,GAA3G,CAApB;AACA,iBAAKyB,gBAAL,GAAwB1C,IAAI,CAACqD,KAAL,CAAY,CAAC,KAAKV,YAAL,GAAoB,KAAKK,cAA1B,IAA4C,KAAKT,YAAlD,GAAkE,GAA7E,CAAxB;AACA,iBAAKQ,cAAL,GAAsB,CAAtB;AACA,iBAAKmB,WAAL,GAAmB,CAAnB;AACA,iBAAKnB,cAAL,GAAsB,CAAtB;AACA,iBAAKE,WAAL,GAAmB,KAAnB,CAvBgB,CAwBhB;;AACA,iBAAKQ,iBAAL,CAAuBC,WAAvB;AACA,iBAAKU,UAAL;AACD;;;iBAED,sBAAa;AAEX,iBAAKC,SAAL,GAFW,CAIX;;AACA,iBAAK,IAAIrD,CAAC,GAAG,KAAKsB,gBAAL,CAAsBrB,MAAtB,GAA+B,CAA5C,EAA+CD,CAAC,IAAI,CAApD,EAAuDA,CAAC,EAAxD,EAA4D;AAC1D;AACA,mBAAKsB,gBAAL,CAAsBtB,CAAtB,EAAyBuC,IAAzB,GAAgC,CAAhC;AACA,mBAAKL,eAAL,CAAqBM,IAArB,CAA0B,KAAKlB,gBAAL,CAAsBtB,CAAtB,CAA1B;AACA,mBAAKsB,gBAAL,CAAsBpB,MAAtB,CAA6BF,CAA7B,EAAgC,CAAhC;AACD,aAVU,CAYX;;;AACA,iBAAK2B,YAAL,GAAoB,CAApB;AACA,iBAAKF,YAAL,GAAoB,CAApB;AACA,iBAAKC,gBAAL,GAAwB,CAAxB;AACA,iBAAKE,mBAAL,GAA2B,CAA3B;AACA,iBAAKG,cAAL,GAAsB,CAAtB;AACA,iBAAKmB,WAAL,GAAmB,CAAnB;AACA,iBAAKZ,kBAAL,GAA0B,KAAKJ,eAAL,CAAqB,CAArB,CAA1B;AACA,iBAAKH,cAAL,GAAsB,CAAtB;AACA,iBAAKC,cAAL,GAAsB,CAAtB;AACA,iBAAKF,cAAL,GAAsB9C,IAAI,CAACqD,KAAL,CACpB,KAAKlB,eAAL,CAAqB1C,gBAArB,KACA,KAAKyD,eAAL,CAAqBjC,MAFD,CAAtB;AAKA,iBAAKmC,gBAAL;AACD;AAED;;;;;;;;iBAKA,iBAAQkB,KAAR,EAAsB;AACpB,gBAAIC,YAAY,GAAGD,KAAK,CAACrD,MAAzB;AAAA,gBAAiCuD,cAAjC;AAAA,gBAAsDC,WAAtD,CADoB,CAGpB;;AACA,mBAAO,MAAMF,YAAb,EAA2B;AAEzB;AACAE,yBAAW,GAAGzE,IAAI,CAACG,KAAL,CAAWH,IAAI,CAAC0E,MAAL,KAAgBH,YAA3B,CAAd;AACAA,0BAAY,IAAI,CAAhB,CAJyB,CAMzB;;AACAC,4BAAc,GAAGF,KAAK,CAACC,YAAD,CAAtB;AACAD,mBAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACG,WAAD,CAA3B;AACAH,mBAAK,CAACG,WAAD,CAAL,GAAqBD,cAArB;AACD;;AAED,mBAAOF,KAAP;AACD;;;iBAED,+BAAsB;AACpB,iBAAKpB,eAAL,GAAuB,KAAKyB,OAAL,CAAa,KAAKzB,eAAlB,CAAvB;AACA,iBAAKI,kBAAL,GAA0B,KAAKJ,eAAL,CAAqB,CAArB,CAA1B;AACD;;;iBAED,4BAAmB;AACjB,iBAAKA,eAAL,CAAqB0B,IAArB,CAA0B,UAASvD,CAAT,EAAYC,CAAZ,EAAa;AACrC,qBAAOD,CAAC,CAACwD,IAAF,CAAOC,aAAP,CAAqBxD,CAAC,CAACuD,IAAvB,CAAP;AACD,aAFD;AAGA,iBAAKvB,kBAAL,GAA0B,KAAKJ,eAAL,CAAqB,CAArB,CAA1B;AACD;AAGD;;;;;;;;;;iBAOA,oBAAWtC,WAAX,EAAqC;AACnC,gBAAI,KAAKsC,eAAL,CAAqBjC,MAArB,IAA+B,CAAnC,EAAsC;AACpC8D,qBAAO,CAACC,GAAR,CAAY,+CAAZ;AACD,aAFD,MAEO;AACL,kBAAIC,GAAG,GAAW,KAAK/B,eAAL,CAAqBgC,OAArB,CAA6BtE,WAA7B,CAAlB;AACA,mBAAKwB,kBAAL,CAAwBoB,IAAxB,CAA6B5C,WAA7B;AACA,mBAAKsC,eAAL,CAAqBhC,MAArB,CAA4B+D,GAA5B,EAAiC,CAAjC;AACA,mBAAK3B,kBAAL,GAA0B,KAAKJ,eAAL,CAAqB,CAArB,CAA1B;AACD;AACF;AAED;;;;;;;;iBAKA,qBAAYtC,WAAZ,EAAsC;AACpC,gBAAIqE,GAAG,GAAW,KAAK7C,kBAAL,CAAwB8C,OAAxB,CAAgCtE,WAAhC,CAAlB;AACA,iBAAKsC,eAAL,CAAqBM,IAArB,CAA0B5C,WAA1B;AACA,iBAAKwB,kBAAL,CAAwBlB,MAAxB,CAA+B+D,GAA/B,EAAoC,CAApC,EAHoC,CAIpC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uEC1OH,iL,IACE,8J,IAAiC,qF,IACjC,2U,IACE,yJ,IAGF,qL,IACE,uJ,IACE,4I,GAAA;AAAA;AAAA,gB,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAqB,yD,GACnB;AAAA;;AAAA;;;;;;SAAA,E,IAAA,E,IAAA,C;;kBAA6B,yD,GAAyB,iJ,IAA6B,gF,IAErF,6I,GAAA;AAAA;AAAA,gB,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAqB,yD,GACnB;AAAA;;AAAA;;;;;;SAAA,E,IAAA,E,IAAA,C;;kBAA6B,yD,GAAgC,+I,IAA2B,uF,IAK1F,6I,GAAA;AAAA;AAAA,gB,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAqB,yD,GACnB;AAAA;;AAAA;;;;;;SAAA,E,IAAA,E,IAAA,C;;kBAA6B,yD,GAA4B,6I,IAAyB,mF,IAEpF,6I,GAAA;AAAA;AAAA,gB,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAqB,yD,GACnB;AAAA;;AAAA;;;;;;SAAA,E,IAAA,E,IAAA,C;;mBAAgD,yJ,IAAqC,+E,IAAK;AAbvE;;AAArB,wBAAqB,SAArB;;AAC+B;;AAA7B,yBAA6B,SAA7B;;AAEmB;;AAArB,yBAAqB,SAArB;;AAC+B;;AAA7B,yBAA6B,SAA7B;;AAKmB;;AAArB,yBAAqB,SAArB;;AAC+B;;AAA7B,yBAA6B,UAA7B;;AAEmB;;AAArB,yBAAqB,UAArB;;AAC+B;;AAA7B,yBAA6B,UAA7B;AAA+C,S,EAAA;AAZ/C;;AAAA;;AAAA;;AAGA;;AAAA;;AAAA;;AAMA;;AAAA;;AAAA;;AAGA;;AAAA;;AAAA;AAA8F,S;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdtG;AAAA;;;AAAA;AAAA;AAAA;;UAAaE,Y,GALb;AAAA;;AAME,aAAAC,KAAA,GAAQ,YAAR;AACD,O;;;;;;;;;;;;;;;;;ACND;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAqBA,UAAMC,SAAS,GAAW,CACxB;AAAEC,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE;AAAvB,OADwB,EAExB;AAAED,YAAI,EAAE,OAAR;AAAiBC,iBAAS,EAAE;AAA5B,OAFwB,EAGxB;AAAED,YAAI,EAAE,cAAR;AAAwBC,iBAAS,EAAE;AAAnC,OAHwB,EAIxB;AAAED,YAAI,EAAE,UAAR;AAAoBC,iBAAS,EAAE;AAA/B,OAJwB,EAKxB;AAAED,YAAI,EAAE,MAAR;AAAgBC,iBAAS,EAAE;AAA3B,OALwB,CAMxB;AANwB,OAA1B;;UAiCaC,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uECzDb,uH,IAAI,kF,IACJ,sH,IAAG,uM,IAIH;AAAA;;AAAA;;;;;;;;;;;SAAA,E,IAAA,E,IAAA,C,+uBACE,iJ,IACE,wJ,IACM;AAAA;AAAA;;AAAA;;;;;;;;;;AAAgF;;;;;AAAhF;AAAA,sB,GAAA,oR,EAAA;AAAA;AAAA,yF,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,U,EAAA,wL,EAAA,mN,GAEN,mL,IAAqD,wF,IACrD;AAAA;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAkF;;;;;AAAlF;AAAA,sB,GAAA,yV,EAAA,2Q,EAAA;AAAA;AAAA,qJ,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,U,EAAA,wL,EAAA,mN,GAEF,wH,IACA;AAAA;AAAA,sBAAkG,UAAlG;;AAAyE;;;;;AAAzE;AAAA,sB,IAAkG;AAAA;AANnE;AAAyD,8BAA8B,iBAA9B;;AAAhF,yBAAuB,UAAvB,EAAgF,UAAhF;;AAGC;AAA2E,8BAA2B,cAA3B;;AAAlF,yBAAO,UAAP,EAAkF,UAAlF;AAA6G,S,EAAA;AANjH;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAGU;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAGN;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAA8G,S;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACXlH,eAASC,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,YAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,8BAAwB,CAACW,EAAzB,GAA8B,MAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uECkGI,mJ,IACE;AAAA;AAAA,sBAES,UAFT;;AAAiD;;;;;AAAjD;AAAA,sB,IACE,qJ,IACO,8E,IAAa,I,EAAA;AAAA;AAF0E;;AAAhG,wBAAgG,SAAhG;;AAES;;AAAA;AAAa,S;AAAA;;;uEACxB,6K,IAA0F,wF,IACxF,yH,GAAA;AAAA;AAAA,gB,EAAM;AAAA;AAAA,U,GAAwD,6E,GAAA,wD,GAAuB;AAAA;;AAA/E,wEAAuD,eAAvD;;AAAN,wBAAM,SAAN;AAA6D,S,EAAA;AAD2B;AAAA;;AAAA;;AAC1B;;AAAA;AAAuB,S;AAAA;;;uEAEvF,0K,IACE;AAAA;AAAA,sBAES,UAFT;;AAAiD;;;;;AAAjD;AAAA,sB,IACE,oJ,IACO,8E,IAAA,I,EAAA;AAAA;;AAAA;AAAc,S;AAAA;;;uEAxH7B,gJ,IAEE,uH,IACA,uH,IAAI,0F,IACJ,6I,IACE,qS,IAEE,yH,IAAM,8E,IAGV,uH,IACA,uH,IAAI,sF,IACJ,8I,IACE,mS,GAAA;AAAA;AAAA;AAAA,gB,EACE;AAAA;AAAA;AAAA;AAAA,U,GAEA,0H,IACE,8J,GAAA;AAAA;AAAA;AAAA,gB,EAAsC;AAAA;AAAA,U,GAAuD,8E,GAAA,yD,GAGnG,wH,IACA,wH,IAAI,uF,IACJ,8I,IACE,2R,GAAA;AAAA;AAAA;AAAA,gB,EAAgD;AAAA;AAAA;AAAA;AAAA,U,GAE9C,0H,IACE,8J,GAAA;AAAA;AAAA;AAAA,gB,EAAsC;AAAA;AAAA,U,GAAqD,gF,GAAA,yD,GAKjG,wH,IACA,kM,IACE,uK,IACE;AAAA;AAAA,sBAES,UAFT;;AAAwC;;;;;AAAxC;AAAA,sB,IACE,yJ,IAEF;AAAA;AAAA,sBAES,UAFT;;AAAwC;;;;;AAAxC;AAAA,sB,IACE,uJ,IAEF;AAAA;AAAA,sBAES,UAFT;;AAA0C;;;;;AAA1C;AAAA,sB,IACE,8I,IAGJ,uK,IACE;AAAA;AAAA,sBAGS,UAHT;;AAAwC;;;;;AAAxC;AAAA,sB,IAEE,sJ,IAAkC,gF,IAGtC,uK,IACE,mT,IAEE,oJ,IAEF,mJ,IACE,wR,IACE,kJ,IAA8B,8F,IAChC,gR,IACE,6I,IAAyB,4F,IAIjC,gK,IACE,wH,IACA,qJ,IACE,wH,IAAI,oF,IACJ,yH,IACE,wH,IAAI,8F,IACJ,wH,IAAI,gG,IACJ,wH,IAAI,6F,IACJ,wH,IAAI,gF,IACF,wH,IACE,wH,IAAI,iG,IACJ,wH,IAAI,iG,IACJ,wH,IAAI,mG,IAGR,wH,IAAI,oF,IACJ,wH,IAAI,uF,IACJ,wH,IAAI,uF,IACJ,wH,IAAI,gG,IACJ,wH,IAAI,0G,IAMV,oK,IACE,wH,IACA,oJ,IACE,wH,IAAI,mF,IACJ,wH,IACE,wH,IAAI,oG,IACJ,wH,IAAI,iG,IACJ,wH,IAAI,qG,IAKV,yH,IACA,yH,IAAI,uF,IACF;AAAA;AAAA,sBAES,UAFT;;AAAoC;;;;;AAApC;AAAA,sB,IACE,iJ,IAEF;AAAA;AAAA,sBAES,UAFT;;AAAoC;;;;;AAApC;AAAA,sB,IACE,0J,IAGJ,gJ,IACE,gH,GAAA;AAAA;AAAA,gB,GAIA,gH,GAAA;AAAA;AAAA,gB,GAGA,gH,GAAA;AAAA;AAAA,gB,GAG8B;AAAA;AA3GzB;;AACH;;AADF,yBAAK,SAAL,EACE,SADF;;AAIO;;AAAmC;;AAAtC,yBAAG,SAAH,EAAsC,SAAtC;;AAMC;;AAA2C;;AAAhD,yBAAK,UAAL,EAAgD,UAAhD;;AAGO;;AAAmC;;AAAtC,yBAAG,UAAH,EAAsC,UAAtC;;AAoFwB,8BAAiC,gBAAjC;;AAA5B,0BAA4B,UAA5B;;AAIsD,8BAAmC,iBAAnC;;AAAtD,0BAAsD,UAAtD;;AAGmD,8BAAqC,mBAArC;;AAAnD,0BAAmD,UAAnD;AAAwF,S,EAAA;AAAA;AA/GtF;;AADF,wBACE,SADF;;AAEQ;;AAAA;;AAQN;;AAFF,yBAEE,SAFF;;AAIiG;;AAAA;;AAI/F;;AAAA;;AAG2E;;AAD7E,yBAC6E,SAD7E;;AAG+F;;AAAA;;AAQV,iEAAuD,YAAvD;;AAAnF,yBAAmF,UAAnF;;AAGiF,mFAAqE,YAArE;;AAAjF,yBAAiF,UAAjF;;AAQoE,kEAAwD,YAAxD;;AAApE,yBAAoE,UAApE;;AAEoC;;AAAA;;AAqB9B;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAGI;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAGJ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;AAAA;;AAAA;;AAoByF;;AAAjG,0BAAiG,UAAjG;;AAG2F;;AAA3F,0BAA2F,UAA3F;AAAmI,S;AAAA;;;uEAmBvI,+I,IACE,sH,IAAG,kH,IACH,sH,IAAG,2H,IACD;AAAA;;AAAA;;;;;;SAAA,E,IAAA,E,IAAA,C;;kBAAY,wD,GAAgC,0F,IAAoB,oK,IAClE,uH,IAAG,+O,IACwC;AAF7B;;AAAZ,wBAAY,SAAZ;AAA2C,S,EAAA;AAA3C;;AAAA;;AAAA;AAAgE,S;AAAA;;;kMA/HpE,gH,GAAA;AAAA;AAAA,gB,GA4HA,gH,GAAA;AAAA;AAAA,gB,GAMM;AAAA;AAlIiB;;AAAvB,wBAAuB,SAAvB;;AA4HuB;;AAAvB,wBAAuB,SAAvB;AAA0F,S,EAAA,I;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uEChHhF,uH,IACE,uH,IAAI,+E,IAGJ,uH,IAAI,+E,IAGJ,uH,IACE;AAAA;AAAA,sBAAmI,UAAnI;;AAA8C;;;;;AAA9C;AAAA,sB,IAAuF,sJ,IAAmC,I,EAAA;AAPxH;;AAAA;;AAGA;;AAAA;AAEJ,S;AAAA;;;uEAlBZ,yI,IACE,2J,IACE;AAAA;AAAA;;AAAA;;;;;;;;;;AAAM;;;;;AAAN;AAAA,sB,GAAA,qK,EAAA,kK,EAAA,8L,EAAA,8N,GACE,2J,IACE,0H,IACE,uH,IACE,wH,IAAI,kF,IACJ,wH,IAAI,8E,IACJ,wH,IAGJ,2H,IACE,0H,GAAA;AAAA;AAAA,gB,GAYF,4H,IACE,yH,IACE,wH,IACE;AAAA;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;AAA8D;;;;;AAA9D;AAAA,sB,GAAA,yV,EAAA;AAAA;AAAA,iF,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,U,EAAA,wL,EAAA,mN,GAEF,wH,IACE;AAAA;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;AAA8D;;;;;AAA9D;AAAA,sB,GAAA,yV,EAAA;AAAA;AAAA,iF,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,U,EAAA,wL,EAAA,mN,GAEF,wH,IACE,2M,IAAkG,8I,IAA0B,8E,IAQ1I,yI,IACE;AAAA;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;AAAgG;;;;;AAAhG;AAAA,sB,GAAA,yV,EAAA;AAAA;AAAA,iF,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,U,EAAA,wL,EAAA,mN,GAEF,+I,IAEE;AAAA;AAAA,sBAAqM,UAArM;;AAA4C;;;;;AAA5C;AAAA,sB,IAAoH,gJ,IAA6B,6F,IACjJ;AAAA;AAAA,sBAA+K,UAA/K;;AAA6F;;;;;AAA7F;AAAA,sB,IAA4H,kJ,IAA8B,sF,IAC1J;AAAA;AAAA,sBAAmK,UAAnK;;AAA8C;;;;;AAA9C;AAAA,sB,IAAwH,gJ,IAA4B,gF,IAAM;AAAA;AApC9I,6BAA2C,gBAA3C;;AAAJ,yBAAI,SAAJ;;AAesD;AAAY,8BAAkB,KAAlB;;AAA9D,yBAAkD,UAAlD,EAA8D,UAA9D;;AAGkD;AAAY,8BAAkB,KAAlB;;AAA9D,yBAAkD,UAAlD,EAA8D,UAA9D;;AAY4D;AAAwB,8BAA8B,iBAA9B;;AAAhG,yBAAwE,UAAxE,EAAgG,UAAhG;AAA8H,S,EAAA;AAAA;;AAxC5H;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAyBU;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAGA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAG6D;;AAA7D,yBAA6D,UAA7D;;AASZ;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAI2E;;AAA3E,yBAA2E,UAA3E;;AAAiJ;;AAAA;;AAClG,gDAA6C,iBAA7C;;AAA/C,yBAA+C,UAA/C;;AAC8E;;AAA9E,yBAA8E,UAA9E;AAAuH,S;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACzCzH;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,e;AAEX,mCAAc;AAAA;AAAG;;;;iBAEjB,oBAAW,CACV;;;;;;;;;;;;;;;;;;;;;ACVH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaC,wB;AAMX,0CAAmBpE,kBAAnB,EAA2D;AAAA;;AAAxC,eAAAA,kBAAA,GAAAA,kBAAA;AALnB,eAAAqE,IAAA,GAAe,EAAf;AACA,eAAA1B,IAAA,GAAe,EAAf;AAEA,eAAA1D,gBAAA,GAA2B,EAA3B;AAIC;;;;iBAED,oBAAW;AACT,iBAAK+B,eAAL,GAAuB,KAAKhB,kBAAL,CAAwBiB,eAAxB,EAAvB;AACD;;;iBAED,0BAAiB;AACf,gBAAI,KAAKoD,IAAL,CAAUtF,MAAV,GAAmB,CAAnB,IAAwB,KAAK4D,IAAL,CAAU5D,MAAV,GAAmB,CAA/C,EACE,KAAKiB,kBAAL,CAAwBsE,cAAxB,CAAuC;AAAE,sBAAQ,KAAKD,IAAf;AAAqB,sBAAQ,KAAK1B;AAAlC,aAAvC;AACF,iBAAK0B,IAAL,GAAY,EAAZ;AACA,iBAAK1B,IAAL,GAAY,EAAZ;AACD;;;iBAED,2BAAkBjE,WAAlB,EAA4C;AAC1C,iBAAKsB,kBAAL,CAAwBuE,iBAAxB,CAA0C7F,WAA1C;AACD;;;iBAED,8BAAqB;AACnB,iBAAKO,gBAAL,GAAwB,KAAKe,kBAAL,CAAwBd,kBAAxB,EAAxB;AACD;;;iBAED,8BAAqB;AACnB,iBAAKc,kBAAL,CAAwBwE,kBAAxB,CAA2C,KAAKvF,gBAAhD;AACA,iBAAK+B,eAAL,GAAuB,KAAKhB,kBAAL,CAAwBiB,eAAxB,EAAvB;AACA,iBAAKhC,gBAAL,GAAwB,EAAxB;AACD;;;iBAED,4BAAmB;AACjB4D,mBAAO,CAACC,GAAR,CAAY,iEAAZ;AACD;;;iBAGD,sBAAa2B,GAAb,EAAkB;AAChB,gBAAI;AACFjG,kBAAI,CAACC,KAAL,CAAWgG,GAAX;AACD,aAFD,CAEE,OAAOb,CAAP,EAAU;AACV,qBAAO,KAAP;AACD;;AACD,mBAAO,IAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uECzDH,mU,GAAA,2K,GACA,8I,IACE,yI,GAAA,8a,GAA+B;AAFjC;;AAEE;AAA+B,S,EAAA,I;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACFjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAYrE,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyB,sBAAzB,CAAyC,4EAAzC,WACS,UAAAmF,GAAG;AAAA,eAAI7B,OAAO,CAACC,GAAR,CAAY4B,GAAZ,CAAJ;AAAA,OADZ","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { SettingsService } from \"../../services/settings/settings.service\";\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  useGlobalMaxTime: boolean;\r\n  globalMaxTime: number;\r\n\r\n  constructor(public settings: SettingsService) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.useGlobalMaxTime = this.settings.getUseGlobalMaxTime();\r\n    this.globalMaxTime = this.settings.getGlobalMaxTime();\r\n  }\r\n\r\n  saveSettings() {\r\n    this.settings.setGlobalMaxTime(this.globalMaxTime);\r\n    this.settings.setUseGlobelMaxTime(this.useGlobalMaxTime);\r\n    this.settings.saveSettings();\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n\r\n@Pipe({name: 'Seconds'})\r\nexport class SecondsPipe implements PipeTransform {\r\n  transform(totalseconds: number): string {\r\n    let prefix: string = '';\r\n    if (totalseconds < 0) {\r\n      totalseconds = Math.abs(totalseconds);\r\n      prefix = '-';\r\n    }\r\n    const minutes: number = Math.floor(totalseconds / 60);\r\n    const seconds: number = totalseconds % 60;\r\n    return prefix + (\"00\"+minutes).slice(-2) + \":\" + (\"00\"+seconds).slice(-2);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Participant } from '../../models/Participant';\r\n\r\n@Injectable()\r\nexport class ParticipantService {\r\n  participants: Participant[];\r\n\r\n  constructor() { }\r\n\r\n  getParticipants() {\r\n    if (localStorage.getItem('participants') === null) {\r\n      this.participants = [];\r\n    } else {\r\n      this.participants = JSON.parse(localStorage.getItem('participants'));\r\n    }\r\n    return this.participants;\r\n  }\r\n\r\n  addParticipant(participant: Participant) {\r\n    this.participants.unshift(participant);\r\n    localStorage.setItem('participants', JSON.stringify(this.participants));\r\n  }\r\n\r\n  removeParticipant(participant: Participant) {\r\n    for (let i = 0; i < this.participants.length; i++) {\r\n      if (participant == this.participants[i]) {\r\n        this.participants.splice(i, 1);\r\n      }\r\n    }\r\n    localStorage.setItem('participants', JSON.stringify(this.participants));\r\n  }\r\n\r\n  exportParticipants() {\r\n    return JSON.stringify(this.participants);\r\n  }\r\n\r\n  //overwrite localstorage, and refresh local list of participants from there...\r\n  importParticipants(jsonParticipants) {\r\n    localStorage.setItem('participants', jsonParticipants);\r\n    this.exportParticipants();\r\n  }\r\n\r\n  compare(a, b) {\r\n    if (a.last_nom < b.last_nom)\r\n      return -1;\r\n    if (a.last_nom > b.last_nom)\r\n      return 1;\r\n    return 0;\r\n  }\r\n\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { version } from '../../../../package.json';\r\n\r\n@Component({\r\n  selector: 'app-help',\r\n  templateUrl: './help.component.html',\r\n  styleUrls: ['./help.component.css']\r\n})\r\nexport class HelpComponent implements OnInit {\r\n  public version: string = version;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class SettingsService {\r\n  private useGlobalMaxTime: boolean = true;\r\n  private globalMaxTime: number = 60 * 15;\r\n\r\n  constructor() { }\r\n  getGlobalMaxTime(): number {\r\n    if (localStorage.getItem('settings') === null) {\r\n      this.globalMaxTime = 60 * 15;\r\n    } else {\r\n      this.globalMaxTime = JSON.parse(localStorage.getItem('settings'))[1];\r\n    }\r\n    return this.globalMaxTime;\r\n  }\r\n\r\n  setGlobalMaxTime(newTime: number) {\r\n    this.globalMaxTime = newTime;\r\n    this.saveSettings();\r\n  }\r\n\r\n  getUseGlobalMaxTime(): boolean {\r\n    if (localStorage.getItem('settings') === null) {\r\n      this.useGlobalMaxTime = true;\r\n    } else {\r\n      this.useGlobalMaxTime = JSON.parse(localStorage.getItem('settings'))[0];\r\n    }\r\n    return this.useGlobalMaxTime;\r\n  }\r\n\r\n  setUseGlobelMaxTime(useGMTime: boolean) {\r\n    this.useGlobalMaxTime = useGMTime;\r\n    this.saveSettings();\r\n  }\r\n\r\n  exportSettings() {\r\n    return JSON.stringify([this.useGlobalMaxTime, this.globalMaxTime]);\r\n  }\r\n\r\n  saveSettings() {\r\n    localStorage.setItem('settings', this.exportSettings());\r\n  }\r\n\r\n  //overwrite localstorage, and refresh local list of participants from there...\r\n  importSettings(jsonSettings) {\r\n    localStorage.setItem('participants', jsonSettings);\r\n    this.exportSettings();\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <h3>What is it?</h3>\r\n  <p>\r\n    A Timer to keep <a href=\"https://en.wikipedia.org/wiki/Scrum_(software_development)#Daily_scrum\">Daily Scrum</a> meetings short.\r\n  </p>\r\n  <h3>How to use</h3>\r\n\r\n  <ol>\r\n    <li>Go to\r\n      <b>\r\n        <i class=\"fa fa-users\"></i> Participants</b> and make sure that everyone you want in the Scrum Timer </li>\r\n    <li>\r\n      Go to the\r\n      <b>\r\n        <i class=\"fa fa-clock-o\"></i> Timer</b> and mark anyone who is not present as absent. </li>\r\n    <li>click the\r\n      <span class=\"btn btn-outline-success\">\r\n        <i class=\"fa fa-hourglass-start\"></i>\r\n      </span> start button to start the timer\r\n    </li>\r\n    <li>Click the next button for each subsequent participant, and finally the stop button</li>\r\n  </ol>\r\n<div class=\"badge badge-secondary\">Version {{version}}</div>\r\n</div>","import { SettingsService } from '../../services/settings/settings.service';\r\nimport { Component, ElementRef, OnInit, OnDestroy } from '@angular/core';\r\nimport { Participant } from '../../models/Participant';\r\nimport { ParticipantService } from '../../services/participant/participant.service';\r\nimport { Observable, Subscription, timer } from 'rxjs';\r\nimport { SecondsPipe } from '../../pipes/hhmmss.pipe';\r\n\r\n@Component({\r\n  selector: 'app-timer',\r\n  templateUrl: './timer.component.html',\r\n  styleUrls: ['./timer.component.css']\r\n})\r\nexport class TimerComponent implements OnInit {\r\n  timerSubscription: Subscription;\r\n  participantList: Participant[];\r\n  absentParticipants: Participant[] = Array();\r\n  doneParticipants: Participant[] = Array();\r\n\r\n  // variables for session\r\n  totalMaxTime = this.settingsService.getGlobalMaxTime();\r\n  recommendedIndividualTime = 120;\r\n  totalPercent = 0;\r\n  totalTimePercent = 0;\r\n  totalElapsed = 0;\r\n  currentTotalElapsed = 0;\r\n\r\n  // variables for indiviual\r\n  individualMaxTime: number = 120;\r\n  individualTime: number = this.individualMaxTime;\r\n  currentPercent: number = 0;\r\n  currentParticipant: Participant;\r\n\r\n  future: Date;\r\n  futureString: string;\r\n  diff: number;\r\n  currentDiff: number;\r\n  currentElapsed: number = 0;\r\n  timerActive: boolean = false;\r\n\r\n  constructor(\r\n    public participantService: ParticipantService, \r\n    public settingsService: SettingsService\r\n    ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.participantList = this.participantService.getParticipants();\r\n    this.sortParticipants();\r\n    if (this.settingsService.getUseGlobalMaxTime()) {\r\n      this.individualTime = Math.round(\r\n        this.settingsService.getGlobalMaxTime() / \r\n        (this.participantList.length + this.doneParticipants.length)\r\n      );\r\n    } else {\r\n      this.individualTime = this.individualMaxTime;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n\r\n  stopTimer() {\r\n    // save time for participant\r\n    this.currentParticipant.time = this.currentElapsed;\r\n    //this.currentPercent = 0;\r\n    // move first Participant to done participants\r\n    if (this.participantList.length > 0) {\r\n      this.doneParticipants.push(this.currentParticipant);\r\n    }\r\n    // remove the top participant\r\n    this.participantList.splice(0, 1);\r\n    // set progressbar to 100%\r\n    this.totalPercent = 100;\r\n    this.timerActive = false;\r\n    // stop timer\r\n    this.timerSubscription.unsubscribe();\r\n  }\r\n\r\n  startTimer() {\r\n    const source = timer(1000, 2000);\r\n    this.currentParticipant = this.participantList[0];\r\n    this.future = new Date();\r\n    // set the timer to a time in the future, based on \"individualTime\" seconds\r\n    if (this.settingsService.getUseGlobalMaxTime()) {\r\n      if (this.totalElapsed >= this.settingsService.getGlobalMaxTime()) {\r\n        // 1 sec grace time :)\r\n        this.individualTime = 1;\r\n      } else {\r\n        this.individualTime = Math.round(\r\n          (this.settingsService.getGlobalMaxTime() - this.totalElapsed )/ \r\n          (this.participantList.length)\r\n        );\r\n      }\r\n    } else {\r\n      this.individualTime = this.individualMaxTime;\r\n    }\r\n    this.future.setSeconds(this.future.getSeconds() + this.individualTime);\r\n\r\n    this.timerSubscription = source.subscribe(val => {\r\n      this.currentDiff = Math.floor((this.future.getTime() - new Date().getTime()) / 1000);\r\n      this.currentElapsed = this.individualTime - this.currentDiff;\r\n      this.currentPercent = Math.round((this.currentElapsed / this.individualTime) * 100);\r\n      this.currentTotalElapsed = this.totalElapsed + this.currentElapsed; \r\n      this.totalTimePercent = Math.round(((this.totalElapsed + this.currentElapsed) / this.totalMaxTime) * 100) ;\r\n    });\r\n\r\n    this.timerActive = true;\r\n  }\r\n\r\n\r\n  nextParticipant() {\r\n    // save time for participant\r\n    this.participantList[0].time = this.currentElapsed;\r\n    // add up total elapsed time\r\n    this.totalElapsed += this.currentElapsed;\r\n    this.currentElapsed = 0;\r\n    this.currentDiff = 0;\r\n    this.currentPercent = 0;\r\n    // move first Participant to done participants\r\n    this.doneParticipants.push(this.participantList[0]);\r\n    // remove the top participant\r\n    this.participantList.splice(0, 1);\r\n    if (this.participantList.length > 0) {\r\n      this.currentParticipant = this.participantList[0];\r\n    } else {\r\n      this.currentParticipant = { 'name': '', 'init': '' };\r\n\r\n    }\r\n    this.totalPercent = Math.round((this.doneParticipants.length / (this.participantList.length + this.doneParticipants.length)) * 100);\r\n    this.totalTimePercent = Math.round(((this.totalElapsed + this.currentElapsed) / this.totalMaxTime) * 100) ;\r\n    this.currentPercent = 0;\r\n    this.currentDiff = 0;\r\n    this.currentPercent = 0;\r\n    this.timerActive = false;\r\n    // stop timer\r\n    this.timerSubscription.unsubscribe();\r\n    this.startTimer();\r\n  }\r\n\r\n  resetTimer() {\r\n\r\n    this.stopTimer();\r\n\r\n    // move all participants from done to present\r\n    for (let i = this.doneParticipants.length - 1; i >= 0; i--) {\r\n      // reset time taken\r\n      this.doneParticipants[i].time = 0;\r\n      this.participantList.push(this.doneParticipants[i]);\r\n      this.doneParticipants.splice(i, 1);\r\n    }\r\n\r\n    // reset timers\r\n    this.totalElapsed = 0;\r\n    this.totalPercent = 0;\r\n    this.totalTimePercent = 0;\r\n    this.currentTotalElapsed = 0;\r\n    this.currentPercent = 0;\r\n    this.currentDiff = 0;\r\n    this.currentParticipant = this.participantList[0];\r\n    this.currentPercent = 0;\r\n    this.currentElapsed = 0;\r\n    this.individualTime = Math.round(\r\n      this.settingsService.getGlobalMaxTime() / \r\n      this.participantList.length\r\n    );\r\n\r\n    this.sortParticipants();\r\n  }\r\n\r\n  /**\r\n   * Shuffles an array pseudo-randomly\r\n   * \r\n   * @param array \r\n   */\r\n  shuffle(array: any[]) {\r\n    var currentIndex = array.length, temporaryValue: any, randomIndex: number;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  shuffleParticipants() {\r\n    this.participantList = this.shuffle(this.participantList);\r\n    this.currentParticipant = this.participantList[0];\r\n  }\r\n\r\n  sortParticipants() {\r\n    this.participantList.sort(function(a, b){\r\n      return a.name.localeCompare(b.name);\r\n    });\r\n    this.currentParticipant = this.participantList[0];\r\n  }\r\n\r\n\r\n  /**\r\n   * Mark participant as absent.\r\n   * \r\n   * note that the last two participants cannot be marked as absent.\r\n   * \r\n   * @param participant Participant to mark as absent\r\n   */\r\n  markAbsent(participant: Participant) {\r\n    if (this.participantList.length <= 2) {\r\n      console.log('Cannot mark the last two participants absent.');\r\n    } else {\r\n      var idx: number = this.participantList.indexOf(participant);\r\n      this.absentParticipants.push(participant);\r\n      this.participantList.splice(idx, 1);\r\n      this.currentParticipant = this.participantList[0];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mark participant as present.\r\n   * \r\n   * @param participant Participant to mark as present\r\n   */\r\n  markPresent(participant: Participant) {\r\n    var idx: number = this.absentParticipants.indexOf(participant);\r\n    this.participantList.push(participant);\r\n    this.absentParticipants.splice(idx, 1);\r\n    // console.log(this.absentParticipants);\r\n  }\r\n\r\n\r\n}\r\n","<nav class=\"navbar navbar-dark bg-dark navbar-expand-md\">\r\n  <a class=\"navbar-brand\" href=\"#\">SCRUM Timer</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#ScrumNavBar\" aria-controls=\"ScrumNavBar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"ScrumNavBar\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['timer']\"><i class=\"fa fa-clock-o\"></i> Timer</a>\r\n      </li>\r\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['participants']\"><i class=\"fa fa-users\"></i> Participants</a>\r\n      </li>\r\n      <!-- <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['settings']\"><i class=\"fa fa-cog\"></i> Settings</a>\r\n      </li> -->\r\n      <li class=\"nav-item\" [routerLinkActive]=\"['settings']\">\r\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['settings']\"><i class=\"fa fa-cog\"></i> Settings</a>\r\n      </li>\r\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n        <a class=\"nav-link\" href=\"#\" routerLink=\"/help\"><i class=\"fa fa-question-circle\"></i> Help</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'ScrumTimer';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HashLocationStrategy, Location, LocationStrategy } from '@angular/common';\r\n//import { Timer } from 'angular-timer'; // AngularJS - not 4??\r\n\r\nimport { SecondsPipe } from \"./pipes/hhmmss.pipe\";\r\n\r\n//Services\r\nimport { ParticipantService } from './services/participant/participant.service';\r\nimport { SettingsService } from './services/settings/settings.service';\r\n\r\n// Components\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { TimerComponent } from './components/timer/timer.component';\r\nimport { ParticipantListComponent } from './components/participant-list/participant-list.component';\r\nimport { SettingsComponent } from './components/settings/settings.component';\r\nimport { HelpComponent } from './components/help/help.component';\r\n\r\n\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: TimerComponent },\r\n  { path: 'timer', component: TimerComponent },\r\n  { path: 'participants', component: ParticipantListComponent },\r\n  { path: 'settings', component: SettingsComponent },\r\n  { path: 'help', component: HelpComponent }\r\n  //{ path: '', component: Component }\r\n];\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    TimerComponent,\r\n    ParticipantListComponent,\r\n    SettingsComponent,\r\n    SecondsPipe,\r\n    HelpComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(appRoutes, { relativeLinkResolution: 'legacy' })\r\n  ],\r\n  providers: [\r\n    ParticipantService,\r\n    SettingsService,\r\n    Location,\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<h3>Settings</h3>\r\n<p>\r\n  From here, you will be able to choose whether you want an overall time goal (e.g. 15 minutes), or a static time-per-person.\r\n  <!-- You will also be able to choose when you want to have the progress bar to change colour (standard = 80% and 95%) -->\r\n</p>\r\n<form action=\"\">\r\n  <div class=\"input-group\">\r\n    <span class=\"input-group-addon\">\r\n          <input type=\"checkbox\" name=\"useGlobalMaxTime\" aria-label=\"Use Global max Time\" [(ngModel)]=\"useGlobalMaxTime\">\r\n        </span>\r\n    <label for=\"globalMaxTime\" class=\"input-group-addon\">Total Max Time</label>\r\n    <input name=\"globalMaxTime\" id=\"globalMaxTime\" type=\"number\" class=\"form-control\" [(ngModel)]=\"globalMaxTime\">\r\n  </div>\r\n  <br>\r\n  <input type=\"submit\" value=\"submit\" class=\"btn btn-primary form-control\" (click)=\"saveSettings()\">\r\n</form>","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","<div class=\"container\" *ngIf=\"participantList.length > 0 || doneParticipants.length > 0\">\r\n\r\n  <br>\r\n  <h4>Overall Progress</h4>\r\n  <div class=\"progress\">\r\n    <div class=\"progress-bar progress-bar-striped bg-success\" role=\"progressbar\" aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n      [style.width]=\"totalPercent + '%'\">\r\n      <span>{{totalPercent}}%</span>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <h4>Overall Time</h4>\r\n  <div class=\"progress\">\r\n    <div class=\"progress-bar progress-bar-striped bg-info\" role=\"progressbar\" aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n      [ngClass]=\"{ 'progress-bar-animated': totalTimePercent < 100, 'bg-warning': totalTimePercent > 75 && totalTimePercent <= 95,'bg-danger': totalTimePercent > 95 }\"\r\n      [style.width]=\"totalTimePercent + '%'\">\r\n      <span>\r\n        <i class=\"fa fa-exclamation-triangle\" [ngClass]=\"{'invisible' : totalTimePercent <= 95}\"></i>{{totalMaxTime - currentTotalElapsed | Seconds}}</span>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <h4>{{ currentParticipant.name }} Progress</h4>\r\n  <div class=\"progress\">\r\n    <div class=\"progress-bar progress-bar-striped \" [ngClass]=\"{ 'progress-bar-animated': currentPercent < 100, 'bg-warning': currentPercent > 75 && currentPercent <= 95,'bg-danger': currentPercent > 95 }\"\r\n      role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" [style.width]=\"currentPercent + '%'\">\r\n      <span>\r\n        <i class=\"fa fa-exclamation-triangle\" [ngClass]=\"{'invisible' : currentPercent <= 95}\"></i>\r\n        {{individualTime - currentElapsed | Seconds}}\r\n      </span>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <div class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar\">\r\n    <div class=\"btn-group mr-2\" role=\"group\">\r\n      <button class=\"btn btn-outline-success\" (click)=\"startTimer()\" title=\"Start Timer\" [disabled]=\"participantList.length == 0 || timerActive\">\r\n        <i class=\"fa fa-hourglass-start\"></i>\r\n      </button>\r\n      <button class=\"btn btn-outline-danger \" (click)=\"stopTimer()\" title=\"Stop Timer\" [disabled]=\"totalPercent == 0 && currentPercent == 0 || !timerActive\">\r\n        <i class=\"fa fa-hourglass-end\"></i>\r\n      </button>\r\n      <button class=\"btn btn-outline-secondary\" (click)=\"resetTimer()\" title=\"Reset\">\r\n        <i class=\"fa fa-undo\"></i>\r\n      </button>\r\n    </div>\r\n    <div class=\"btn-group mr-2\" role=\"group\">\r\n      <button class=\"btn btn-outline-primary\" (click)=\"nextParticipant()\" [disabled]=\"participantList.length <= 1 || !timerActive\"\r\n        title=\"Next participant\">\r\n        <i class=\"fa fa-step-forward\"></i> {{ (participantList.length > 1)?(\"(\" + participantList[1].init)+\")\":\"\" }}\r\n      </button>\r\n    </div>\r\n    <div class=\"btn-group mr-2\" role=\"group\">\r\n      <button id=\"btnGroupDrop1\" type=\"button\" class=\"btn btn-outline-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n        aria-expanded=\"false\">\r\n        <i class=\"fa fa-ellipsis-v\"></i>\r\n      </button>\r\n      <div class=\"dropdown-menu\">\r\n        <a href=\"#\" class=\"dropdown-item\" data-toggle=\"collapse\" data-target=\"#Questions\" aria-expanded=\"false\" aria-controls=\"Questions\">\r\n          <i class=\"fa fa-question\"></i> Daily Question Card</a>\r\n        <a href=\"#\" class=\"dropdown-item\" data-toggle=\"collapse\" data-target=\"#Debug\" aria-expanded=\"false\" aria-controls=\"Debug\">\r\n          <i class=\"fa fa-bug\"></i> Debug Information</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"collapse\" id=\"Debug\">\r\n    <hr>\r\n    <div class=\"card card-body\">\r\n      <h4>Debug info</h4>\r\n      <ul>\r\n        <li>Total {{ totalPercent }}% Complete</li>\r\n        <li>Current {{ currentPercent }}% Complete</li>\r\n        <li>Total Elapsed: {{ currentTotalElapsed }}</li>\r\n        <li>Stats\r\n          <ul>\r\n            <li>Participants Left: {{ participantList.length }}</li>\r\n            <li>Participants Done: {{ doneParticipants.length }}</li>\r\n            <li>Participants Absent: {{ absentParticipants.length }}</li>\r\n          </ul>\r\n        </li>\r\n        <li>Diff: {{ diff }}</li>\r\n        <li>Elapsed: {{ currentElapsed }}</li>\r\n        <li>Elapsed: {{ totalElapsed }}</li>\r\n        <li>Partipicant Time: {{ individualTime }}</li>\r\n        <li>Current Participant: {{ currentParticipant.name }} [{{ currentParticipant.init }}]</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"collapse\" id=\"Questions\">\r\n    <hr>\r\n    <div class=\"card card-body\">\r\n      <h4>Questions</h4>\r\n      <ul>\r\n        <li>What did you do yesterday?</li>\r\n        <li>What will you do today?</li>\r\n        <li>Are you impeded in any way?</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <hr>\r\n  <h4>Participants\r\n    <button class=\"btn btn-sm btn-info\" (click)=\"shuffleParticipants()\" title=\"Shuffle Participants\" [disabled]=\"participantList.length <= 2\">\r\n      <i class=\"fa fa-random\"></i>\r\n    </button>\r\n    <button class=\"btn btn-sm btn-info\" (click)=\"sortParticipants()\" title=\"Sort Participants\" [disabled]=\"participantList.length <= 2\">\r\n      <i class=\"fa fa-sort-amount-asc\"></i>\r\n    </button>\r\n  </h4>\r\n  <ul class=\"list-group\">\r\n    <li class=\"list-group-item\" *ngFor=\"let p of participantList\">\r\n      <button class=\"btn btn-outline-secondary btn-sm\" (click)=\"markAbsent(p)\" title=\"Mark as absent\" [disabled]=\"participantList.length <= 2\">\r\n        <i class=\"fa fa-minus-circle\"></i>\r\n      </button> {{ p.name }}</li>\r\n    <li class=\"list-group-item list-group-item-secondary\" *ngFor=\"let dp of doneParticipants\"> {{ dp.name }} [{{ dp.init }}] -\r\n      <span [ngClass]=\"{'text-danger' : dp.time >= individualTime}\">{{ dp.time | Seconds }}</span>\r\n    </li>\r\n    <li class=\"list-group-item list-group-item-danger\" *ngFor=\"let ap of absentParticipants\">\r\n      <button class=\"btn btn-outline-secondary btn-sm\" (click)=\"markPresent(ap)\" title=\"Mark as present\">\r\n        <i class=\"fa fa-plus-circle\"></i>\r\n      </button> {{ ap.name }}</li>\r\n  </ul>\r\n\r\n</div>\r\n<div class=\"jumbotron\" *ngIf=\"participantList.length == 0 && doneParticipants.length == 0\">\r\n  <p>There are no participants in your list. </p>\r\n  <p>To start using the Scrum Timer, please go to the\r\n    <a href=\"#\" [routerLink]=\"['participants']\">participant list</a> and add some people to the list, either manually or by importing a list from a colleague.</p>\r\n  <p>Note that the Scrum Timer stores participants in local storage. Nothing is sent to the server. This is to provide anonymity\r\n    and be compliant with corporate policies.</p>\r\n</div>","<div class=\"row\">\r\n  <div class=\"col-md-10 offset-md-3\">\r\n    <form (submit)=\"addParticipant()\">\r\n      <table class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Initials</th>\r\n            <th>Name</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let participant of participantList\">\r\n            <td>\r\n              {{ participant.init }}\r\n            </td>\r\n            <td>\r\n              {{ participant.name }}\r\n            </td>\r\n            <td>\r\n              <button class=\"btn btn-outline-danger btn-sm\" (click)=\"removeParticipant(participant)\"><i class=\"fa fa-trash-o fa-lg\"></i></button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n            <td>\r\n              <input class=\"form-control\" type=\"text\" id=\"init\" name=\"init\" [(ngModel)]=\"init\">\r\n            </td>\r\n            <td>\r\n              <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"name\">\r\n            </td>\r\n            <td>\r\n              <button type=\"submit\" class=\"btn btn-sm btn-outline-primary\" [disabled]=\"name =='' || init == ''\"><i class=\"fa fa-plus\"></i> Add</button>\r\n            </td>\r\n          </tr>\r\n        </tfoot>\r\n      </table>\r\n    </form>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <textarea class=\"form-control\" cols=\"50\" rows=\"5\" id=\"jsonParticipants\" name=\"jsonParticipants\" [(ngModel)]=\"jsonParticipants\"></textarea>\r\n</div>\r\n<div class=\"container\">\r\n\r\n  <button class=\"btn btn-sm btn-outline-dark\" (click)=\"exportParticipants()\" [disabled]=\"participantList.length == 0\"><i class=\"fa fa-upload\" ></i> Export list ({{ participantList.length }})</button>\r\n  <button class=\"btn btn-sm btn-outline-success\" [disabled]=\"! isJsonString(jsonParticipants)\" (click)=\"importParticipants()\"><i class=\"fa fa-download\"></i> Import List</button>\r\n  <button class=\"btn btn-sm btn-outline-danger\" (click)=\"jsonParticipants ='' \" [disabled]=\"jsonParticipants.length == 0\"><i class=\"fa fa-eraser\"></i> Clear</button>\r\n \r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Participant } from \"../../models/Participant\";\r\nimport { ParticipantService } from \"../../services/participant/participant.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-participant-list',\r\n  templateUrl: './participant-list.component.html',\r\n  styleUrls: ['./participant-list.component.css']\r\n})\r\nexport class ParticipantListComponent implements OnInit {\r\n  init: string = \"\";\r\n  name: string = \"\";\r\n  participantList: Participant[];\r\n  jsonParticipants: string = \"\";\r\n\r\n  constructor(public participantService: ParticipantService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.participantList = this.participantService.getParticipants();\r\n  }\r\n\r\n  addParticipant() {\r\n    if (this.init.length > 1 && this.name.length > 2)\r\n      this.participantService.addParticipant({ \"init\": this.init, \"name\": this.name });\r\n    this.init = \"\";\r\n    this.name = \"\";\r\n  }\r\n\r\n  removeParticipant(participant: Participant) {\r\n    this.participantService.removeParticipant(participant);\r\n  }\r\n\r\n  exportParticipants() {\r\n    this.jsonParticipants = this.participantService.exportParticipants();\r\n  }\r\n\r\n  importParticipants() {\r\n    this.participantService.importParticipants(this.jsonParticipants);\r\n    this.participantList = this.participantService.getParticipants();\r\n    this.jsonParticipants = \"\";\r\n  }\r\n\r\n  sortParticipants() {\r\n    console.log(\"[sortParticipants()] This function has not yet been implemented\");\r\n  }\r\n\r\n\r\n  isJsonString(str) {\r\n    try {\r\n      JSON.parse(str);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"]}