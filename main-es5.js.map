{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/help/help.component.ts","webpack:///src/app/components/help/help.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/participant-list/participant-list.component.ts","webpack:///src/app/components/participant-list/participant-list.component.html","webpack:///src/app/components/settings/settings.component.ts","webpack:///src/app/components/settings/settings.component.html","webpack:///src/app/components/timer/timer.component.ts","webpack:///src/app/components/timer/timer.component.html","webpack:///src/app/pipes/hhmmss.pipe.ts","webpack:///src/app/services/participant/participant.service.ts","webpack:///src/app/services/settings/settings.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","AppModule","provide","useClass","forRoot","declarations","imports","providers","bootstrap","HelpComponent","NavbarComponent","ParticipantListComponent","participantService","init","name","jsonParticipants","participantList","getParticipants","length","addParticipant","participant","removeParticipant","exportParticipants","importParticipants","console","log","str","JSON","parse","SettingsComponent","settings","useGlobalMaxTime","getUseGlobalMaxTime","globalMaxTime","getGlobalMaxTime","setGlobalMaxTime","setUseGlobelMaxTime","saveSettings","TimerComponent","settingsService","elm","absentParticipants","Array","doneParticipants","totalMaxTime","recommendedIndividualTime","totalPercent","totalTimePercent","totalElapsed","currentTotalElapsed","individualMaxTime","individualTime","currentPercent","currentElapsed","timerActive","sortParticipants","Math","round","currentCounter","stopTimer","currentParticipant","time","push","splice","subscription","unsubscribe","future","Date","setSeconds","getSeconds","interval","map","x","currentDiff","floor","getTime","subscribe","startTimer","i","array","currentIndex","temporaryValue","randomIndex","random","shuffle","sort","a","b","localeCompare","idx","indexOf","SecondsPipe","totalseconds","prefix","abs","minutes","seconds","slice","ParticipantService","localStorage","getItem","participants","unshift","setItem","stringify","last_nom","SettingsService","newTime","useGMTime","exportSettings","jsonSettings","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HashLocationStrategy, Location, LocationStrategy } from '@angular/common';\r\n//import { Timer } from 'angular-timer'; // AngularJS - not 4??\r\n\r\nimport { SecondsPipe } from \"./pipes/hhmmss.pipe\";\r\n\r\n//Services\r\nimport { ParticipantService } from './services/participant/participant.service';\r\nimport { SettingsService } from './services/settings/settings.service';\r\n\r\n// Components\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { TimerComponent } from './components/timer/timer.component';\r\nimport { ParticipantListComponent } from './components/participant-list/participant-list.component';\r\nimport { SettingsComponent } from './components/settings/settings.component';\r\nimport { HelpComponent } from './components/help/help.component';\r\n\r\n\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: TimerComponent },\r\n  { path: 'timer', component: TimerComponent },\r\n  { path: 'participants', component: ParticipantListComponent },\r\n  { path: 'settings', component: SettingsComponent },\r\n  { path: 'help', component: HelpComponent }\r\n  //{ path: '', component: Component }\r\n];\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    TimerComponent,\r\n    ParticipantListComponent,\r\n    SettingsComponent,\r\n    SecondsPipe,\r\n    HelpComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  providers: [\r\n    ParticipantService,\r\n    SettingsService,\r\n    Location,\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.css']\n})\nexport class HelpComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <h3>What is it?</h3>\n  <p>\n    A Scrum Timer! - see [some link on the web] for more details f you don't know what that is...\n  </p>\n  <h3>How to use</h3>\n\n  <ol>\n    <li>Go to\n      <b>\n        <i class=\"fa fa-users\"></i> Participants</b> and make sure that everyone you want in the Scrum Timer </li>\n    <li>\n      Go to the\n      <b>\n        <i class=\"fa fa-clock-o\"></i> Timer</b> and mark anyone who is not present as absent. </li>\n    <li>click the\n      <span class=\"btn btn-outline-success\">\n        <i class=\"fa fa-hourglass-start\"></i>\n      </span> start button to start the timer\n    </li>\n    <li>Click the next button for each subsequent participant, and finally the stop button</li>\n  </ol>\n\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-dark bg-dark navbar-expand-md\">\r\n  <a class=\"navbar-brand\" href=\"#\">SCRUM Timer</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#ScrumNavBar\" aria-controls=\"ScrumNavBar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"ScrumNavBar\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['timer']\"><i class=\"fa fa-clock-o\"></i> Timer</a>\r\n      </li>\r\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['participants']\"><i class=\"fa fa-users\"></i> Participants</a>\r\n      </li>\r\n      <!-- <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['settings']\"><i class=\"fa fa-cog\"></i> Settings</a>\r\n      </li> -->\r\n      <li class=\"nav-item\" [routerLinkActive]=\"['settings']\">\r\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['settings']\"><i class=\"fa fa-cog\"></i> Settings</a>\r\n      </li>\r\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n        <a class=\"nav-link\" href=\"#\" routerLink=\"/help\"><i class=\"fa fa-question-circle\"></i> Help</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { Participant } from \"../../models/Participant\";\r\nimport { ParticipantService } from \"../../services/participant/participant.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-participant-list',\r\n  templateUrl: './participant-list.component.html',\r\n  styleUrls: ['./participant-list.component.css']\r\n})\r\nexport class ParticipantListComponent implements OnInit {\r\n  init: string = \"\";\r\n  name: string = \"\";\r\n  participantList: Participant[];\r\n  jsonParticipants: string = \"\";\r\n\r\n  constructor(public participantService: ParticipantService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.participantList = this.participantService.getParticipants();\r\n  }\r\n\r\n  addParticipant() {\r\n    if (this.init.length > 1 && this.name.length > 2)\r\n      this.participantService.addParticipant({ \"init\": this.init, \"name\": this.name });\r\n    this.init = \"\";\r\n    this.name = \"\";\r\n  }\r\n\r\n  removeParticipant(participant: Participant) {\r\n    this.participantService.removeParticipant(participant);\r\n  }\r\n\r\n  exportParticipants() {\r\n    this.jsonParticipants = this.participantService.exportParticipants();\r\n  }\r\n\r\n  importParticipants() {\r\n    this.participantService.importParticipants(this.jsonParticipants);\r\n    this.participantList = this.participantService.getParticipants();\r\n    this.jsonParticipants = \"\";\r\n  }\r\n\r\n  sortParticipants() {\r\n    console.log(\"[sortParticipants()] This function has not yet been implemented\");\r\n  }\r\n\r\n\r\n  isJsonString(str) {\r\n    try {\r\n      JSON.parse(str);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-10 offset-md-3\">\r\n    <form (submit)=\"addParticipant()\">\r\n      <table class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Initials</th>\r\n            <th>Name</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let participant of participantList\">\r\n            <td>\r\n              {{ participant.init }}\r\n            </td>\r\n            <td>\r\n              {{ participant.name }}\r\n            </td>\r\n            <td>\r\n              <button class=\"btn btn-outline-danger btn-sm\" (click)=\"removeParticipant(participant)\"><i class=\"fa fa-trash-o fa-lg\"></i></button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n            <td>\r\n              <input class=\"form-control\" type=\"text\" id=\"init\" name=\"init\" [(ngModel)]=\"init\">\r\n            </td>\r\n            <td>\r\n              <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"name\">\r\n            </td>\r\n            <td>\r\n              <button type=\"submit\" class=\"btn btn-sm btn-outline-primary\" [disabled]=\"name =='' || init == ''\"><i class=\"fa fa-plus\"></i> Add</button>\r\n            </td>\r\n          </tr>\r\n        </tfoot>\r\n      </table>\r\n    </form>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <textarea class=\"form-control\" cols=\"50\" rows=\"5\" id=\"jsonParticipants\" name=\"jsonParticipants\" [(ngModel)]=\"jsonParticipants\"></textarea>\r\n</div>\r\n<div class=\"container\">\r\n\r\n  <button class=\"btn btn-sm btn-outline-dark\" (click)=\"exportParticipants()\" [disabled]=\"participantList.length == 0\"><i class=\"fa fa-upload\" ></i> Export list ({{ participantList.length }})</button>\r\n  <button class=\"btn btn-sm btn-outline-success\" [disabled]=\"! isJsonString(jsonParticipants)\" (click)=\"importParticipants()\"><i class=\"fa fa-download\"></i> Import List</button>\r\n  <button class=\"btn btn-sm btn-outline-danger\" (click)=\"jsonParticipants ='' \" [disabled]=\"jsonParticipants.length == 0\"><i class=\"fa fa-eraser\"></i> Clear</button>\r\n \r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { SettingsService } from \"../../services/settings/settings.service\";\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  useGlobalMaxTime: boolean;\r\n  globalMaxTime: number;\r\n\r\n  constructor(public settings: SettingsService) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.useGlobalMaxTime = this.settings.getUseGlobalMaxTime();\r\n    this.globalMaxTime = this.settings.getGlobalMaxTime();\r\n  }\r\n\r\n  saveSettings() {\r\n    this.settings.setGlobalMaxTime(this.globalMaxTime);\r\n    this.settings.setUseGlobelMaxTime(this.useGlobalMaxTime);\r\n    this.settings.saveSettings();\r\n  }\r\n\r\n}\r\n","<h3>Settings</h3>\r\n<p>\r\n  From here, you will be able to choose whether you want an overall time goal (e.g. 15 minutes), or a static time-per-person.\r\n  <!-- You will also be able to choose when you want to have the progress bar to change colour (standard = 80% and 95%) -->\r\n</p>\r\n<form action=\"\">\r\n  <div class=\"input-group\">\r\n    <span class=\"input-group-addon\">\r\n          <input type=\"checkbox\" name=\"useGlobalMaxTime\" aria-label=\"Use Global max Time\" [(ngModel)]=\"useGlobalMaxTime\">\r\n        </span>\r\n    <label for=\"globalMaxTime\" class=\"input-group-addon\">Total Max Time</label>\r\n    <input name=\"globalMaxTime\" id=\"globalMaxTime\" type=\"number\" class=\"form-control\" [(ngModel)]=\"globalMaxTime\">\r\n  </div>\r\n  <br>\r\n  <input type=\"submit\" value=\"submit\" class=\"btn btn-primary form-control\" (click)=\"saveSettings()\">\r\n</form>","import { SettingsService } from '../../services/settings/settings.service';\r\nimport { Component, ElementRef, OnInit, OnDestroy } from '@angular/core';\r\nimport { Participant } from '../../models/Participant';\r\nimport { ParticipantService } from '../../services/participant/participant.service';\r\nimport { Observable, Subscription } from 'rxjs/Rx';\r\nimport { SecondsPipe } from '../../pipes/hhmmss.pipe';\r\n\r\n@Component({\r\n  selector: 'app-timer',\r\n  templateUrl: './timer.component.html',\r\n  styleUrls: ['./timer.component.css']\r\n})\r\nexport class TimerComponent implements OnInit {\r\n  currentCounter: Observable<number>;\r\n  subscription: Subscription;\r\n  participantList: Participant[];\r\n  absentParticipants: Participant[] = Array();\r\n  doneParticipants: Participant[] = Array();\r\n\r\n  // variables for session\r\n  totalMaxTime = this.settingsService.getGlobalMaxTime();\r\n  recommendedIndividualTime = 120;\r\n  totalPercent = 0;\r\n  totalTimePercent = 0;\r\n  totalElapsed = 0;\r\n  currentTotalElapsed = 0;\r\n\r\n  // variables for indiviual\r\n  individualMaxTime: number = 120;\r\n  individualTime: number = this.individualMaxTime;\r\n  currentPercent: number = 0;\r\n  currentParticipant: Participant;\r\n\r\n  future: Date;\r\n  futureString: string;\r\n  diff: number;\r\n  currentDiff: number;\r\n  currentElapsed: number = 0;\r\n  timerActive: boolean = false;\r\n\r\n  constructor(public participantService: ParticipantService, public settingsService: SettingsService, elm: ElementRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.participantList = this.participantService.getParticipants();\r\n    this.sortParticipants();\r\n    if (this.settingsService.getUseGlobalMaxTime()) {\r\n      this.individualTime = Math.round(\r\n        this.settingsService.getGlobalMaxTime() / \r\n        (this.participantList.length + this.doneParticipants.length)\r\n      );\r\n    } else {\r\n      this.individualTime = this.individualMaxTime;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.currentCounter != null) {\r\n      this.stopTimer();\r\n    }\r\n  }\r\n\r\n  stopTimer() {\r\n    // save time for participant\r\n    this.currentParticipant.time = this.currentElapsed;\r\n    this.currentPercent = 0;\r\n    // move first Participant to done participants\r\n    if (this.participantList.length > 0) {\r\n      this.doneParticipants.push(this.currentParticipant);\r\n    }\r\n    // remove the top participant\r\n    this.participantList.splice(0, 1);\r\n    // set progressbar to 100%\r\n    this.currentPercent = 100;\r\n    this.timerActive = false;\r\n    // stop timer\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  startTimer() {\r\n    this.currentParticipant = this.participantList[0];\r\n    this.future = new Date();\r\n    // set the timer to a time in the future, based on \"individualTime\" seconds\r\n    if (this.settingsService.getUseGlobalMaxTime()) {\r\n      if (this.totalElapsed >= this.settingsService.getGlobalMaxTime()) {\r\n        // 1 sec grace time :)\r\n        this.individualTime = 1;\r\n      } else {\r\n        this.individualTime = Math.round(\r\n          (this.settingsService.getGlobalMaxTime() - this.totalElapsed )/ \r\n          (this.participantList.length)\r\n        );\r\n      }\r\n    } else {\r\n      this.individualTime = this.individualMaxTime;\r\n    }\r\n    this.future.setSeconds(this.future.getSeconds() + this.individualTime);\r\n\r\n    // console.log(this.future);\r\n    this.currentCounter = Observable.interval(1000).map((x) => {\r\n      this.currentDiff = Math.floor((this.future.getTime() - new Date().getTime()) / 1000);\r\n      this.currentElapsed = this.individualTime - this.currentDiff;\r\n      this.currentPercent = Math.round((this.currentElapsed / this.individualTime) * 100);\r\n      this.currentTotalElapsed = this.totalElapsed + this.currentElapsed; \r\n      this.totalTimePercent = Math.round(((this.totalElapsed + this.currentElapsed) / this.totalMaxTime) * 100) ;\r\n      return x;\r\n    });\r\n\r\n    this.subscription = this.currentCounter.subscribe((x) => this.currentDiff);\r\n    this.timerActive = true;\r\n  }\r\n\r\n\r\n  nextParticipant() {\r\n    // save time for participant\r\n    this.participantList[0].time = this.currentElapsed;\r\n    // add up total elapsed time\r\n    this.totalElapsed += this.currentElapsed;\r\n    this.currentElapsed = 0;\r\n    this.currentDiff = 0;\r\n    this.currentPercent = 0;\r\n    // move first Participant to done participants\r\n    this.doneParticipants.push(this.participantList[0]);\r\n    // remove the top participant\r\n    this.participantList.splice(0, 1);\r\n    if (this.participantList.length > 0) {\r\n      this.currentParticipant = this.participantList[0];\r\n    } else {\r\n      this.currentParticipant = { 'name': '', 'init': '' };\r\n\r\n    }\r\n    this.totalPercent = Math.round((this.doneParticipants.length / (this.participantList.length + this.doneParticipants.length)) * 100);\r\n    this.totalTimePercent = Math.round(((this.totalElapsed + this.currentElapsed) / this.totalMaxTime) * 100) ;\r\n    this.currentPercent = 0;\r\n    this.currentDiff = 0;\r\n    this.currentPercent = 0;\r\n    this.timerActive = false;\r\n    // stop timer\r\n    this.subscription.unsubscribe();\r\n    this.startTimer();\r\n  }\r\n\r\n  resetTimer() {\r\n\r\n    this.stopTimer();\r\n\r\n    // move all participants from done to present\r\n    for (let i = this.doneParticipants.length - 1; i >= 0; i--) {\r\n      // reset time taken\r\n      this.doneParticipants[i].time = 0;\r\n      this.participantList.push(this.doneParticipants[i]);\r\n      this.doneParticipants.splice(i, 1);\r\n    }\r\n\r\n    // reset timers\r\n    this.totalElapsed = 0;\r\n    this.totalPercent = 0;\r\n    this.totalTimePercent = 0;\r\n    this.currentTotalElapsed = 0;\r\n    this.currentPercent = 0;\r\n    this.currentDiff = 0;\r\n    this.currentParticipant = this.participantList[0];\r\n    this.currentPercent = 0;\r\n    this.currentElapsed = 0;\r\n    this.individualTime = Math.round(\r\n      this.settingsService.getGlobalMaxTime() / \r\n      this.participantList.length\r\n    );\r\n\r\n    this.sortParticipants();\r\n  }\r\n\r\n  /**\r\n   * Shuffles an array pseudo-randomly\r\n   * \r\n   * @param array \r\n   */\r\n  shuffle(array) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  shuffleParticipants() {\r\n    this.participantList = this.shuffle(this.participantList);\r\n    this.currentParticipant = this.participantList[0];\r\n  }\r\n\r\n  sortParticipants() {\r\n    this.participantList.sort(function(a, b){\r\n      return a.name.localeCompare(b.name);\r\n    });\r\n    this.currentParticipant = this.participantList[0];\r\n  }\r\n\r\n\r\n  /**\r\n   * Mark participant as absent.\r\n   * \r\n   * note that the last two participants cannot be marked as absent.\r\n   * \r\n   * @param participant Participant to mark as absent\r\n   */\r\n  markAbsent(participant) {\r\n    if (this.participantList.length <= 2) {\r\n      console.log('Cannot mark the last two participants absent.');\r\n    } else {\r\n      var idx: number = this.participantList.indexOf(participant);\r\n      this.absentParticipants.push(participant);\r\n      this.participantList.splice(idx, 1);\r\n      this.currentParticipant = this.participantList[0];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mark participant as present.\r\n   * \r\n   * @param participant Participant to mark as present\r\n   */\r\n  markPresent(participant) {\r\n    var idx: number = this.absentParticipants.indexOf(participant);\r\n    this.participantList.push(participant);\r\n    this.absentParticipants.splice(idx, 1);\r\n    // console.log(this.absentParticipants);\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\" *ngIf=\"participantList.length > 0 || doneParticipants.length > 0\">\r\n\r\n  <br>\r\n  <h4>Overall Progress</h4>\r\n  <div class=\"progress\">\r\n    <div class=\"progress-bar progress-bar-striped bg-success\" role=\"progressbar\" aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n      [style.width]=\"totalPercent + '%'\">\r\n      <span>{{totalPercent}}%</span>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <h4>Overall Time</h4>\r\n  <div class=\"progress\">\r\n    <div class=\"progress-bar progress-bar-striped bg-info\" role=\"progressbar\" aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n      [ngClass]=\"{ 'progress-bar-animated': totalTimePercent < 100, 'bg-warning': totalTimePercent > 75 && totalTimePercent <= 95,'bg-danger': totalTimePercent > 95 }\"\r\n      [style.width]=\"totalTimePercent + '%'\">\r\n      <span>\r\n        <i class=\"fa fa-exclamation-triangle\" [ngClass]=\"{'invisible' : totalTimePercent <= 95}\"></i>{{totalMaxTime - currentTotalElapsed | Seconds}}</span>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <h4>{{ currentParticipant.name }} Progress</h4>\r\n  <div class=\"progress\">\r\n    <div class=\"progress-bar progress-bar-striped \" [ngClass]=\"{ 'progress-bar-animated': currentPercent < 100, 'bg-warning': currentPercent > 75 && currentPercent <= 95,'bg-danger': currentPercent > 95 }\"\r\n      role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" [style.width]=\"currentPercent + '%'\">\r\n      <span>\r\n        <i class=\"fa fa-exclamation-triangle\" [ngClass]=\"{'invisible' : currentPercent <= 95}\"></i>\r\n        {{individualTime - currentElapsed | Seconds}}\r\n      </span>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <div class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar\">\r\n    <div class=\"btn-group mr-2\" role=\"group\">\r\n      <button class=\"btn btn-outline-success\" (click)=\"startTimer()\" title=\"Start Timer\" [disabled]=\"participantList.length == 0 || timerActive\">\r\n        <i class=\"fa fa-hourglass-start\"></i>\r\n      </button>\r\n      <button class=\"btn btn-outline-danger \" (click)=\"stopTimer()\" title=\"Stop Timer\" [disabled]=\"totalPercent == 0 && currentPercent == 0 || !timerActive\">\r\n        <i class=\"fa fa-hourglass-end\"></i>\r\n      </button>\r\n      <button class=\"btn btn-outline-secondary\" (click)=\"resetTimer()\" title=\"Reset\">\r\n        <i class=\"fa fa-undo\"></i>\r\n      </button>\r\n    </div>\r\n    <div class=\"btn-group mr-2\" role=\"group\">\r\n      <button class=\"btn btn-outline-primary\" (click)=\"nextParticipant()\" [disabled]=\"participantList.length <= 1 || !timerActive\"\r\n        title=\"Next participant\">\r\n        <i class=\"fa fa-step-forward\"></i> {{ (participantList.length > 1)?(\"(\" + participantList[1].init)+\")\":\"\" }}\r\n      </button>\r\n    </div>\r\n    <div class=\"btn-group mr-2\" role=\"group\">\r\n      <button id=\"btnGroupDrop1\" type=\"button\" class=\"btn btn-outline-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n        aria-expanded=\"false\">\r\n        <i class=\"fa fa-ellipsis-v\"></i>\r\n      </button>\r\n      <div class=\"dropdown-menu\">\r\n        <a href=\"#\" class=\"dropdown-item\" data-toggle=\"collapse\" data-target=\"#Questions\" aria-expanded=\"false\" aria-controls=\"Questions\">\r\n          <i class=\"fa fa-question\"></i> Daily Question Card</a>\r\n        <a href=\"#\" class=\"dropdown-item\" data-toggle=\"collapse\" data-target=\"#Debug\" aria-expanded=\"false\" aria-controls=\"Debug\">\r\n          <i class=\"fa fa-bug\"></i> Debug Information</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"collapse\" id=\"Debug\">\r\n    <hr>\r\n    <div class=\"card card-body\">\r\n      <h4>Debug info</h4>\r\n      <ul>\r\n        <li>Total {{ totalPercent }}% Complete</li>\r\n        <li>Current {{ currentPercent }}% Complete</li>\r\n        <li>Total Elapsed: {{ currentTotalElapsed }}</li>\r\n        <li>Stats\r\n          <ul>\r\n            <li>Participants Left: {{ participantList.length }}</li>\r\n            <li>Participants Done: {{ doneParticipants.length }}</li>\r\n            <li>Participants Absent: {{ absentParticipants.length }}</li>\r\n          </ul>\r\n        </li>\r\n        <li>Diff: {{ diff }}</li>\r\n        <li>Elapsed: {{ currentElapsed }}</li>\r\n        <li>Elapsed: {{ totalElapsed }}</li>\r\n        <li>Partipicant Time: {{ individualTime }}</li>\r\n        <li>Current Participant: {{ currentParticipant.name }} [{{ currentParticipant.init }}]</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"collapse\" id=\"Questions\">\r\n    <hr>\r\n    <div class=\"card card-body\">\r\n      <h4>Questions</h4>\r\n      <ul>\r\n        <li>What did you do yesterday?</li>\r\n        <li>What will you do today?</li>\r\n        <li>Are you impeded in any way?</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <hr>\r\n  <h4>Participants\r\n    <button class=\"btn btn-sm btn-info\" (click)=\"shuffleParticipants()\" title=\"Shuffle Participants\" [disabled]=\"participantList.length <= 2\">\r\n      <i class=\"fa fa-random\"></i>\r\n    </button>\r\n    <button class=\"btn btn-sm btn-info\" (click)=\"sortParticipants()\" title=\"Sort Participants\" [disabled]=\"participantList.length <= 2\">\r\n      <i class=\"fa fa-sort-amount-asc\"></i>\r\n    </button>\r\n  </h4>\r\n  <ul class=\"list-group\">\r\n    <li class=\"list-group-item\" *ngFor=\"let p of participantList\">\r\n      <button class=\"btn btn-outline-secondary btn-sm\" (click)=\"markAbsent(p)\" title=\"Mark as absent\" [disabled]=\"participantList.length <= 2\">\r\n        <i class=\"fa fa-minus-circle\"></i>\r\n      </button> {{ p.name }}</li>\r\n    <li class=\"list-group-item list-group-item-secondary\" *ngFor=\"let dp of doneParticipants\"> {{ dp.name }} [{{ dp.init }}] -\r\n      <span [ngClass]=\"{'text-danger' : dp.time >= individualTime}\">{{ dp.time | Seconds }}</span>\r\n    </li>\r\n    <li class=\"list-group-item list-group-item-danger\" *ngFor=\"let ap of absentParticipants\">\r\n      <button class=\"btn btn-outline-secondary btn-sm\" (click)=\"markPresent(ap)\" title=\"Mark as present\">\r\n        <i class=\"fa fa-plus-circle\"></i>\r\n      </button> {{ ap.name }}</li>\r\n  </ul>\r\n\r\n</div>\r\n<div class=\"jumbotron\" *ngIf=\"participantList.length == 0 && doneParticipants.length == 0\">\r\n  <p>There are no participants in your list. </p>\r\n  <p>To start using the Scrum Timer, please go to the\r\n    <a href=\"#\" [routerLink]=\"['participants']\">participant list</a> and add some people to the list, either manually or by importing a list from a colleague.</p>\r\n  <p>Note that the Scrum Timer stores participants in local storage. Nothing is sent to the server. This is to provide anonymity\r\n    and be compliant with corporate policies.</p>\r\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n\r\n@Pipe({name: 'Seconds'})\r\nexport class SecondsPipe implements PipeTransform {\r\n  transform(totalseconds: number): string {\r\n    let prefix: string = '';\r\n    if (totalseconds < 0) {\r\n      totalseconds = Math.abs(totalseconds);\r\n      prefix = '-';\r\n    }\r\n    const minutes: number = Math.floor(totalseconds / 60);\r\n    const seconds: number = totalseconds % 60;\r\n    return prefix + (\"00\"+minutes).slice(-2) + \":\" + (\"00\"+seconds).slice(-2);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Participant } from '../../models/Participant';\r\n\r\n@Injectable()\r\nexport class ParticipantService {\r\n  participants: Participant[];\r\n\r\n  constructor() { }\r\n\r\n  getParticipants() {\r\n    if (localStorage.getItem('participants') === null) {\r\n      this.participants = [];\r\n    } else {\r\n      this.participants = JSON.parse(localStorage.getItem('participants'));\r\n    }\r\n    return this.participants;\r\n  }\r\n\r\n  addParticipant(participant: Participant) {\r\n    this.participants.unshift(participant);\r\n    localStorage.setItem('participants', JSON.stringify(this.participants));\r\n  }\r\n\r\n  removeParticipant(participant: Participant) {\r\n    for (let i = 0; i < this.participants.length; i++) {\r\n      if (participant == this.participants[i]) {\r\n        this.participants.splice(i, 1);\r\n      }\r\n    }\r\n    localStorage.setItem('participants', JSON.stringify(this.participants));\r\n  }\r\n\r\n  exportParticipants() {\r\n    return JSON.stringify(this.participants);\r\n  }\r\n\r\n  //overwrite localstorage, and refresh local list of participants from there...\r\n  importParticipants(jsonParticipants) {\r\n    localStorage.setItem('participants', jsonParticipants);\r\n    this.exportParticipants();\r\n  }\r\n\r\n  compare(a, b) {\r\n    if (a.last_nom < b.last_nom)\r\n      return -1;\r\n    if (a.last_nom > b.last_nom)\r\n      return 1;\r\n    return 0;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n//TODO: save settings in localStorage\r\n@Injectable()\r\nexport class SettingsService {\r\n  private useGlobalMaxTime: boolean = true;\r\n  private globalMaxTime: number = 60 * 15;\r\n\r\n  constructor() { }\r\n  getGlobalMaxTime(): number {\r\n    if (localStorage.getItem('settings') === null) {\r\n      this.globalMaxTime = 60 * 15;\r\n    } else {\r\n      this.globalMaxTime = JSON.parse(localStorage.getItem('settings'))[1];\r\n    }\r\n    return this.globalMaxTime;\r\n  }\r\n\r\n  setGlobalMaxTime(newTime: number) {\r\n    this.globalMaxTime = newTime;\r\n    this.saveSettings();\r\n  }\r\n\r\n  getUseGlobalMaxTime(): boolean {\r\n    if (localStorage.getItem('settings') === null) {\r\n      this.useGlobalMaxTime = true;\r\n    } else {\r\n      this.useGlobalMaxTime = JSON.parse(localStorage.getItem('settings'))[0];\r\n    }\r\n    return this.useGlobalMaxTime;\r\n  }\r\n\r\n  setUseGlobelMaxTime(useGMTime: boolean) {\r\n    this.useGlobalMaxTime = useGMTime;\r\n    this.saveSettings();\r\n  }\r\n\r\n  exportSettings() {\r\n    return JSON.stringify([this.useGlobalMaxTime, this.globalMaxTime]);\r\n  }\r\n\r\n  saveSettings() {\r\n    localStorage.setItem('settings', this.exportSettings());\r\n  }\r\n\r\n  //overwrite localstorage, and refresh local list of participants from there...\r\n  importSettings(jsonSettings) {\r\n    localStorage.setItem('participants', jsonSettings);\r\n    this.exportSettings();\r\n  }\r\n\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"]}