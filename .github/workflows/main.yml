on: push
name: Build Angular Application
permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write
jobs:
  build:
    if: github.ref != 'refs/heads/master'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x, 21.x]
    steps:
      - uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install and npm run build
        run: |
          npm i
          npm run build
          npm test
#          npm run lint
      - name: Push Build to Releases
        if: startsWith(github.ref, 'refs/tags/v')
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/angular-githubaction/*"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: test-results/*.xml
  coverage_report:
    name: Generate coverage report
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    # ... Generate LCOV files or download it from a different job
    - name: Setup LCOV
      uses: hrishikesh-kadam/setup-lcov@v1
    - name: Report code coverage
      uses: zgosalvez/github-actions-report-lcov@v3
      with:
        coverage-files: test-results/coverage/report-lcov/lcov.info
        minimum-coverage: 90
        artifact-name: code-coverage-report
        github-token: ${{ secrets.GITHUB_TOKEN }}
        # this location is based on running pwd in the preceding job. TODO: automate
        working-directory: /home/runner/work/ScrumTimer/ScrumTimer
        update-comment: true
  deploy-ghpages:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install and npm run build
        run: |
          npm i
          npm run deploy
      - name: Deploy to GH pages
        if: startsWith(github.ref, 'refs/tags/v')
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist # The folder the action should deploy.
