{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/help/help.component.ts","./src/app/components/help/help.component.html","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/participant-list/participant-list.component.ts","./src/app/components/participant-list/participant-list.component.html","./src/app/components/settings/settings.component.ts","./src/app/components/settings/settings.component.html","./src/app/components/timer/timer.component.ts","./src/app/components/timer/timer.component.html","./src/app/models/Participant.ts","./src/app/pipes/secs.pipe.ts","./src/app/services/navbar/navbar.service.ts","./src/app/services/participant/participant.service.ts","./src/app/services/settings/settings.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ScrumTimer';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes, ActivatedRoute } from '@angular/router';\nimport { HashLocationStrategy, Location, LocationStrategy } from '@angular/common';\n// import { Timer } from 'angular-timer'; // AngularJS - not 4??\n\n\n// Services\nimport { ParticipantService } from './services/participant/participant.service';\nimport { SettingsService } from './services/settings/settings.service';\nimport { NavbarService } from './services/navbar/navbar.service';\n\n// Components\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { TimerComponent } from './components/timer/timer.component';\nimport { ParticipantListComponent } from './components/participant-list/participant-list.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { HelpComponent } from './components/help/help.component';\n\n// Pipes\nimport { SecsPipe } from './pipes/secs.pipe';\n\n\n\n\nconst appRoutes: Routes = [\n  { path: '', component: TimerComponent },\n  { path: 'timer', component: TimerComponent },\n  { path: 'popin', component: TimerComponent },\n  { path: 'participants', component: ParticipantListComponent },\n  { path: 'settings', component: SettingsComponent },\n  { path: 'help', component: HelpComponent }\n  // { path: '', component: Component }\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    TimerComponent,\n    ParticipantListComponent,\n    SettingsComponent,\n    HelpComponent,\n    SecsPipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes, {})\n  ],\n  providers: [\n    ParticipantService,\n    SettingsService,\n    NavbarService,\n    Location,\n    { provide: LocationStrategy, useClass: HashLocationStrategy }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport packageInfo from '../../../../package.json';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.css']\n})\nexport class HelpComponent implements OnInit {\n  public version: string = packageInfo.version;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <h3>What is it?</h3>\n  <p>\n    A Timer to keep <a href=\"https://en.wikipedia.org/wiki/Scrum_(software_development)#Daily_scrum\"\n      target=\"_blank\">Daily Scrum</a>\n    meetings short. </p>\n  <p>\n    A lot of developers do not like to spend too much time on Scrum \"ceremonies\". This tool is meant to help you get a\n    viual indication of time spent to avoid it drawing out for online daily Scrum meetings.\n  </p>\n  <h3>How to use</h3>\n\n  <ol>\n    <li>Go to\n      <strong>\n        <i class=\"fa fa-users\"></i> Participants</strong> and make sure that everyone you want in the Scrum Timer\n    </li>\n    <li>\n      Go to the\n      <strong>\n        <i class=\"fa fa-clock-o\"></i> Timer</strong> and mark anyone who is not present as absent.\n    </li>\n    <li>click the\n      <span class=\"btn btn-outline-success\">\n        <i class=\"fa fa-hourglass-start\"></i>\n      </span> start button to start the timer\n    </li>\n    <li>Click the next button for each subsequent participant, and finally the stop button</li>\n  </ol>\n\n  <h3>Notes</h3>\n\n  <ul>\n    <li>If Max time is selected, the time left is distrubuted among the rest of the people in the meeting.</li>\n    <li>If the version badge below this list is older than the version of the newest <a href=\"https://github.com/JoSSte/ScrumTimer/releases\" target=\"_blank\">release</a> press <kbd>CTRL</kbd> + <kbd>F5</kbd> to refresh the page.</li>\n    \n  </ul>\n  <div class=\"badge badge-secondary\">Version {{version}}</div>\n\n  <h3>Bugs / requests for features</h3>\n  <p>If you find a bug/want a new feature, please report it on the <a href=\"https://github.com/JoSSte/ScrumTimer/issues\" target=\"_blank\">issues</a> page</p>\n  \n\n</div>\n","<nav *ngIf=\"nav.visible\" class=\"navbar navbar-dark bg-dark navbar-expand-md\">\n  <a class=\"navbar-brand\" href=\"#\">SCRUM Timer</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#ScrumNavBar\" aria-controls=\"ScrumNavBar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"ScrumNavBar\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['timer']\"><i class=\"fa fa-clock-o\"></i> Timer</a>\n      </li>\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['participants']\"><i class=\"fa fa-users\"></i> Participants</a>\n      </li>\n      <li class=\"nav-item\" [routerLinkActive]=\"['settings']\">\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['settings']\"><i class=\"fa fa-cog\"></i> Settings</a>\n      </li>\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" href=\"#\" routerLink=\"/help\"><i class=\"fa fa-question-circle\"></i> Help</a>\n      </li>\n      <li *ngIf=\"noOpener\" class=\"nav-item\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"openWindows()\"><i class=\"fa fa-external-link-alt\"></i>PopOut</a>\n      </li>\n    </ul>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { NavbarService } from '../../services/navbar/navbar.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  noOpener = true;\n  scrumTimerWindow = null;\n  jiraTimerWindow = null;\n  private windowProps = 'resizable=no,scrollbars,status,top=0,right=0,width=';\n  private popupWidth = 360;\n  constructor(\n    public nav: NavbarService\n    ) {\n    const hasOpener = window.opener;\n    let openerMessage = '';\n    try {\n      if (hasOpener) {\n        this.noOpener = false;\n        openerMessage = 'Not Displaying popout link. already popped out';\n        this.nav.hide();\n      } else {\n        this.noOpener = true;\n        openerMessage = 'Displaying pop out link';\n      }\n    } catch (e) {\n      console.log(e);\n      openerMessage = 'Not Displaying popout link. Already popped out (exception)';\n      this.noOpener = false;\n      this.nav.hide();\n    }\n    console.log(openerMessage);\n  }\n\n  openScrumTimer() {\n    const swp = this.windowProps+ this.popupWidth + ',height=' + window.screen.availHeight;\n    this.scrumTimerWindow = window.open(window.location.origin + window.location.pathname + '#/popin', 'TimerWindowName', swp );\n  }\n\n  openJira() {\n    const jwp = this.windowProps + (window.screen.availWidth - this.popupWidth - 10) + ',height=' + window.screen.availHeight;\n    const url = localStorage.getItem('JiraURL');\n    if (url) {\n      this.jiraTimerWindow = window.open(url, 'StoryWindowName', jwp);\n    }else{\n      console.log('no JiraURL in localStorage');\n    }\n    \n  }\n\n  openWindows() {\n    console.log('Opening windows');\n    this.openJira();\n    this.openScrumTimer();\n  }\n\n  ngOnInit() {\n    console.log('[Scrumtimer] Navbar init');\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Participant } from '../../models/Participant';\nimport { ParticipantService } from '../../services/participant/participant.service';\n\n\n@Component({\n  selector: 'app-participant-list',\n  templateUrl: './participant-list.component.html',\n  styleUrls: ['./participant-list.component.css']\n})\nexport class ParticipantListComponent implements OnInit {\n  init = '';\n  name = '';\n  participantList: Participant[];\n  jsonParticipants = '';\n\n  constructor(public participantService: ParticipantService) {\n\n  }\n\n  ngOnInit() {\n    this.participantList = this.participantService.getParticipants();\n    // check for updated remote participants\n    if(this.participantService.settings.usesRemoteParticipantList()){\n      this.participantService.updateRemoteParticipants();\n    }\n  }\n\n  addParticipant() {\n    if (this.init.length > 1 && this.name.length > 2){\n      this.participantService.addParticipant(new Participant(this.init, this.name));\n    }\n    this.init = '';\n    this.name = '';\n  }\n\n  removeParticipant(participant: Participant): boolean {\n    return this.participantService.removeParticipant(participant);\n  }\n\n  exportParticipants() {\n    this.jsonParticipants = this.participantService.exportParticipants();\n  }\n\n  importParticipants() {\n    this.participantService.importParticipants(this.jsonParticipants);\n    this.participantList = this.participantService.getParticipants();\n    this.jsonParticipants = '';\n  }\n\n  sortParticipants() {\n    console.log('[sortParticipants()] This function has not yet been implemented');\n  }\n\n\n  isJsonString(str) {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-10 offset-md-3\">\n    <form (submit)=\"addParticipant()\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Initials</th>\n            <th>Name</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let participant of participantList\">\n            <td>\n              {{ participant.init }}\n            </td>\n            <td>\n              {{ participant.name }}\n            </td>\n            <td>\n              <button class=\"btn btn-outline-danger btn-sm\" (click)=\"removeParticipant(participant)\"><i class=\"fa fa-trash-o fa-lg\"></i></button>\n            </td>\n          </tr>\n        </tbody>\n        <tfoot>\n          <tr>\n            <td>\n              <input class=\"form-control\" type=\"text\" id=\"init\" name=\"init\" [(ngModel)]=\"init\">\n            </td>\n            <td>\n              <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"name\">\n            </td>\n            <td>\n              <button type=\"submit\" class=\"btn btn-sm btn-outline-primary\" [disabled]=\"name =='' || init == ''\"><i class=\"fa fa-plus\"></i> Add</button>\n            </td>\n          </tr>\n        </tfoot>\n      </table>\n    </form>\n  </div>\n</div>\n<div class=\"row\">\n  <textarea class=\"form-control\" cols=\"50\" rows=\"5\" id=\"jsonParticipants\" name=\"jsonParticipants\" [(ngModel)]=\"jsonParticipants\"></textarea>\n</div>\n<div class=\"container\">\n\n  <button class=\"btn btn-sm btn-outline-dark\" (click)=\"exportParticipants()\" [disabled]=\"participantList.length == 0\"><i class=\"fa fa-upload\" ></i> Export list ({{ participantList.length }})</button>\n  <button class=\"btn btn-sm btn-outline-success\" [disabled]=\"! isJsonString(jsonParticipants)\" (click)=\"importParticipants()\"><i class=\"fa fa-download\"></i> Import List</button>\n  <button class=\"btn btn-sm btn-outline-danger\" (click)=\"jsonParticipants ='' \" [disabled]=\"jsonParticipants.length == 0\"><i class=\"fa fa-eraser\"></i> Clear</button>\n \n</div>","import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '../../services/settings/settings.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n  useGlobalMaxTime: boolean;\n  globalMaxTime: number;\n  useRemoteParticipantList: boolean;\n  remoteParticipantListURL: string;\n  jiraLinkURL: string;\n  useJiraLinkURL: boolean;\n\n  constructor(public settings: SettingsService) {\n\n  }\n\n  ngOnInit() {\n    this.useGlobalMaxTime = this.settings.getUseGlobalMaxTime();\n    this.globalMaxTime = this.settings.getGlobalMaxTime();\n    this.remoteParticipantListURL = this.settings.getRemoteParticipantListURL();\n    this.jiraLinkURL = this.settings.getJiraURL();\n    if(this.remoteParticipantListURL !== ''){\n      this.useRemoteParticipantList = true;\n    }\n    if(this.jiraLinkURL !== ''){\n      this.useJiraLinkURL = true;\n    }\n  }\n\n  saveSettings() {\n    this.settings.setGlobalMaxTime(this.globalMaxTime);\n    this.settings.setUseGlobelMaxTime(this.useGlobalMaxTime);\n    if(this.useRemoteParticipantList){\n      this.settings.setRemoteParticipantList(this.remoteParticipantListURL);\n    }else {\n      this.settings.setRemoteParticipantList('');\n    }\n    if(this.useJiraLinkURL){\n      this.settings.setJiraURL(this.jiraLinkURL);\n    }else {\n      console.log('deleting jira url');\n      this.settings.setJiraURL('');\n    }\n    this.settings.saveSettings();\n  }\n\n  useRemoteParticipantListChecked(): boolean{\n    return !this.useRemoteParticipantList;\n  }\n\n  usejiraLinkChecked(): boolean {\n    return !this.useJiraLinkURL;\n  }\n\n}\n","<h3>Settings</h3>\n<p>\n  From here, you will be able to choose whether you want an overall time goal (e.g. 15 minutes), or a static\n  time-per-person.\n  <!-- You will also be able to choose when you want to have the progress bar to change colour (standard = 80% and 95%) -->\n</p>\n<form action=\"\">\n  <div class=\"input-group mb-3\">\n\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">Total Max Time</span>\n      <div class=\"input-group-text\">\n        <input type=\"checkbox\" name=\"useGlobalMaxTime\" aria-label=\"Use Global max Time\" [(ngModel)]=\"useGlobalMaxTime\" size=\"3\">\n      </div>\n    </div>\n    <input name=\"globalMaxTime\" id=\"globalMaxTime\" type=\"number\" class=\"form-control\" [(ngModel)]=\"globalMaxTime\">\n  </div>\n  <small id=\"globalMaxTimeHelp\" class=\"form-text text-muted\">If the Total Max Time checkbox is selected, the time (in seconds) is used\n    to define the max length of the Scrum meeting. The time for each participant is scaled to fit. If it is left unchecked, each participant is given the time shown in seconds.</small>\n  <br>\n  <div class=\"input-group mb3\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">Remote Participant list</span>\n      <div class=\"input-group-text\">\n        <input type=\"checkbox\" name=\"useRemoteParticipantList\" aria-label=\"Use Remote Participant List\"\n          [(ngModel)]=\"useRemoteParticipantList\">\n      </div>\n    </div>\n    <input name=\"remoteParticipantListURL\" id=\"remoteParticipantListURL\" type=\"url\" class=\"form-control\"\n      [(ngModel)]=\"remoteParticipantListURL\" [disabled]=\"useRemoteParticipantListChecked()\">\n  </div>\n  <small id=\"remoteParticipantListURLHelp\" class=\"form-text text-muted\">If the Remote Participant List URL checkbox is selected, the tool will try\n    to download a .json file from the URL and import the participants from that</small>\n    <br>\n    <div class=\"input-group mb3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\">Jira URL</span>\n        <div class=\"input-group-text\">\n          <input type=\"checkbox\" name=\"useJiraLink\" aria-label=\"Use Jira Link\"\n            [(ngModel)]=\"useJiraLinkURL\">\n        </div>\n      </div>\n      <input name=\"jiraLinkURL\" id=\"jiraLinkURL\" type=\"url\" class=\"form-control\"\n        [(ngModel)]=\"jiraLinkURL\" [disabled]=\"usejiraLinkChecked()\">\n    </div>\n    <small id=\"jiraURLHelp\" class=\"form-text text-muted\">If the checkbox is checked, and you have a url entered, this URL will be opened in a window when using the popout function</small>\n      <br>\n  <input type=\"submit\" value=\"Save Settings\" class=\"btn btn-primary form-control\" (click)=\"saveSettings()\">\n</form>","import { SettingsService } from '../../services/settings/settings.service';\nimport { Component, ElementRef, OnInit, OnDestroy } from '@angular/core';\nimport { Participant } from '../../models/Participant';\nimport { ParticipantService } from '../../services/participant/participant.service';\nimport { NavbarService } from '../../services/navbar/navbar.service';\nimport { Subscription, timer } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.css']\n})\nexport class TimerComponent implements OnInit {\n  timerSubscription: Subscription;\n  participantList: Participant[];\n  absentParticipants: Participant[] = Array();\n  doneParticipants: Participant[] = Array();\n\n  // variables for session\n  totalMaxTime = this.settingsService.getGlobalMaxTime();\n  recommendedIndividualTime = 120;\n  totalPercent = 0;\n  totalTimePercent = 0;\n  totalElapsed = 0;\n  currentTotalElapsed = 0;\n\n  // variables for indiviual\n  individualMaxTime = 120;\n  individualTime: number = this.individualMaxTime;\n  currentPercent = 0;\n  currentParticipant: Participant;\n\n  future: Date;\n  futureString: string;\n  diff: number;\n  currentDiff: number;\n  currentElapsed = 0;\n  timerActive = false;\n\n  constructor(\n    private activatedRoute : ActivatedRoute,\n    private nav : NavbarService,\n    public participantService: ParticipantService,\n    public settingsService: SettingsService\n    ) {\n  }\n\n  ngOnInit() {\n    this.participantList = this.participantService.getParticipants();\n    this.sortParticipants();\n    if (this.settingsService.getUseGlobalMaxTime()) {\n      this.individualTime = Math.round(\n        this.settingsService.getGlobalMaxTime() /\n        (this.participantList.length + this.doneParticipants.length)\n      );\n    } else {\n      this.individualTime = this.individualMaxTime;\n    }\n    console.log('[Scrumtimer] Timer init');\n    if(this.activatedRoute['_routerState'].snapshot.url == '/popin'){\n      this.nav.hide();\n    }else{\n      this.nav.show();\n    }\n  }\n\n  stopTimer() {\n    // save time for participant\n    this.currentParticipant.time = this.currentElapsed;\n    // this.currentPercent = 0;\n    // move first Participant to done participants\n    if (this.participantList.length > 0) {\n      this.doneParticipants.push(this.currentParticipant);\n    }\n    // remove the top participant\n    this.participantList.splice(0, 1);\n    // set progressbar to 100%\n    this.totalPercent = 100;\n    this.timerActive = false;\n    // stop timer\n    this.timerSubscription.unsubscribe();\n  }\n\n  startTimer() {\n    const source = timer(1000, 2000);\n    this.currentParticipant = this.participantList[0];\n    this.future = new Date();\n    // set the timer to a time in the future, based on \"individualTime\" seconds\n    if (this.settingsService.getUseGlobalMaxTime()) {\n      if (this.totalElapsed >= this.settingsService.getGlobalMaxTime()) {\n        // 1 sec grace time :)\n        this.individualTime = 1;\n      } else {\n        this.individualTime = Math.round(\n          (this.settingsService.getGlobalMaxTime() - this.totalElapsed )/\n          (this.participantList.length)\n        );\n      }\n    } else {\n      this.individualTime = this.individualMaxTime;\n    }\n    this.future.setSeconds(this.future.getSeconds() + this.individualTime);\n\n    this.timerSubscription = source.subscribe(val => {\n      this.currentDiff = Math.floor((this.future.getTime() - new Date().getTime()) / 1000);\n      this.currentElapsed = this.individualTime - this.currentDiff;\n      this.currentPercent = Math.round((this.currentElapsed / this.individualTime) * 100);\n      this.currentTotalElapsed = this.totalElapsed + this.currentElapsed;\n      this.totalTimePercent = Math.round(((this.totalElapsed + this.currentElapsed) / this.totalMaxTime) * 100) ;\n    });\n\n    this.timerActive = true;\n  }\n\n\n  nextParticipant() {\n    // save time for participant\n    this.participantList[0].time = this.currentElapsed;\n    // add up total elapsed time\n    this.totalElapsed += this.currentElapsed;\n    this.currentElapsed = 0;\n    this.currentDiff = 0;\n    this.currentPercent = 0;\n    // move first Participant to done participants\n    this.doneParticipants.push(this.participantList[0]);\n    // remove the top participant\n    this.participantList.splice(0, 1);\n    if (this.participantList.length > 0) {\n      this.currentParticipant = this.participantList[0];\n    } else {\n      this.currentParticipant = new Participant('', '');\n\n    }\n    this.totalPercent = Math.round((this.doneParticipants.length / (this.participantList.length + this.doneParticipants.length)) * 100);\n    this.totalTimePercent = Math.round(((this.totalElapsed + this.currentElapsed) / this.totalMaxTime) * 100) ;\n    this.currentPercent = 0;\n    this.currentDiff = 0;\n    this.currentPercent = 0;\n    this.timerActive = false;\n    // stop timer\n    this.timerSubscription.unsubscribe();\n    this.startTimer();\n  }\n\n  resetTimer() {\n\n    this.stopTimer();\n\n    // move all participants from done to present\n    for (let i = this.doneParticipants.length - 1; i >= 0; i--) {\n      // reset time taken\n      this.doneParticipants[i].time = 0;\n      this.participantList.push(this.doneParticipants[i]);\n      this.doneParticipants.splice(i, 1);\n    }\n\n    // reset timers\n    this.totalElapsed = 0;\n    this.totalPercent = 0;\n    this.totalTimePercent = 0;\n    this.currentTotalElapsed = 0;\n    this.currentPercent = 0;\n    this.currentDiff = 0;\n    this.currentParticipant = this.participantList[0];\n    this.currentPercent = 0;\n    this.currentElapsed = 0;\n    this.individualTime = Math.round(\n      this.settingsService.getGlobalMaxTime() /\n      this.participantList.length\n    );\n\n    this.sortParticipants();\n  }\n\n  /**\n   * Shuffles an array pseudo-randomly\n   *\n   * @param array\n   */\n  shuffle(array: any[]) {\n    let currentIndex = array.length, temporaryValue: any, randomIndex: number;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  shuffleParticipants() {\n    this.participantList = this.shuffle(this.participantList);\n    this.currentParticipant = this.participantList[0];\n  }\n\n  sortParticipants() {\n    this.participantList.sort(function(a, b){\n      return a.name.localeCompare(b.name);\n    });\n    this.currentParticipant = this.participantList[0];\n  }\n\n\n  /**\n   * Mark participant as absent.\n   *\n   * note that the last two participants cannot be marked as absent.\n   *\n   * @param participant Participant to mark as absent\n   */\n  markAbsent(participant: Participant) {\n    if (this.participantList.length <= 2) {\n      console.log('Cannot mark the last two participants absent.');\n    } else {\n      const idx: number = this.participantList.indexOf(participant);\n      this.absentParticipants.push(participant);\n      this.participantList.splice(idx, 1);\n      this.currentParticipant = this.participantList[0];\n    }\n  }\n\n  /**\n   * Mark participant as present.\n   *\n   * @param participant Participant to mark as present\n   */\n  markPresent(participant: Participant) {\n    const idx: number = this.absentParticipants.indexOf(participant);\n    this.participantList.push(participant);\n    this.absentParticipants.splice(idx, 1);\n  }\n\n\n}\n","<div class=\"container\" *ngIf=\"participantList.length > 0 || doneParticipants.length > 0\">\n\n  <br>\n  <h4>Overall Progress</h4>\n  <div class=\"progress\">\n    <div class=\"progress-bar progress-bar-striped bg-success\" role=\"progressbar\" aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\"\n      [style.width]=\"totalPercent + '%'\">\n      <span>{{totalPercent}}%</span>\n    </div>\n  </div>\n  <br>\n  <h4>Overall Time</h4>\n  <div class=\"progress\">\n    <div class=\"progress-bar progress-bar-striped bg-info\" role=\"progressbar\" aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\"\n      [ngClass]=\"{ 'progress-bar-animated': totalTimePercent < 100, 'bg-warning': totalTimePercent > 75 && totalTimePercent <= 95,'bg-danger': totalTimePercent > 95 }\"\n      [style.width]=\"totalTimePercent + '%'\">\n      <span>\n        <i class=\"fa fa-exclamation-triangle\" [ngClass]=\"{'invisible' : totalTimePercent <= 95}\"></i>{{totalMaxTime - currentTotalElapsed | secs}}</span>\n    </div>\n  </div>\n  <br>\n  <h4>{{ currentParticipant.name }} [{{ currentParticipant.init }}] Progress</h4>\n  <div class=\"progress\">\n    <div class=\"progress-bar progress-bar-striped \" [ngClass]=\"{ 'progress-bar-animated': currentPercent < 100, 'bg-warning': currentPercent > 75 && currentPercent <= 95,'bg-danger': currentPercent > 95 }\"\n      role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" [style.width]=\"currentPercent + '%'\">\n      <span>\n        <i class=\"fa fa-exclamation-triangle\" [ngClass]=\"{'invisible' : currentPercent <= 95}\"></i>\n        {{individualTime - currentElapsed | secs}}\n      </span>\n    </div>\n  </div>\n  <br>\n  <div class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar\">\n    <div class=\"btn-group mr-2\" role=\"group\">\n      <!-- <button class=\"btn btn-outline-success\" (click)=\"startTimer()\" title=\"Start Timer\" [disabled]=\"participantList.length == 0 || timerActive\">\n        <i class=\"fa fa-hourglass-start\"></i>\n      </button> -->\n      <button class=\"btn btn-outline-danger \" (click)=\"stopTimer()\" title=\"Stop Timer\" [disabled]=\"totalPercent == 0 && currentPercent == 0 || !timerActive\">\n        <i class=\"fa fa-hourglass-end\"></i>\n      </button>\n      <button class=\"btn btn-outline-secondary\" (click)=\"resetTimer()\" title=\"Reset\">\n        <i class=\"fa fa-undo\"></i>\n      </button>\n    </div>\n    <div *ngIf=\"!timerActive\" class=\"btn-group mr-2\" role=\"group\">\n      <button class=\"btn btn-outline-success\" (click)=\"startTimer()\" title=\"Start Timer\" [disabled]=\"participantList.length == 0 || timerActive\">\n        <i class=\"fa fa-hourglass-start\"></i> {{ currentParticipant.init }}\n      </button>\n    </div>\n    <div *ngIf=\"timerActive\" class=\"btn-group mr-2\" role=\"group\"> <!--  -->\n      <button class=\"btn btn-outline-primary\" (click)=\"nextParticipant()\" [disabled]=\"participantList.length <= 1 || !timerActive\"\n        title=\"Next participant\">\n        <i class=\"fa fa-step-forward\"></i> Next <!-- {{ (participantList.length > 1)?(\"(\" + participantList[1].init)+\")\":\"\" }} -->\n      </button>\n    </div>\n    <div class=\"btn-group mr-2\" role=\"group\">\n      <button id=\"btnGroupDrop1\" type=\"button\" class=\"btn btn-outline-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n        aria-expanded=\"false\">\n        <i class=\"fa fa-ellipsis-v\"></i>\n      </button>\n      <div class=\"dropdown-menu\">\n        <a href=\"#\" class=\"dropdown-item\" data-toggle=\"collapse\" data-target=\"#Questions\" aria-expanded=\"false\" aria-controls=\"Questions\">\n          <i class=\"fa fa-question\"></i> Daily Question Card</a>\n        <a href=\"#\" class=\"dropdown-item\" data-toggle=\"collapse\" data-target=\"#Debug\" aria-expanded=\"false\" aria-controls=\"Debug\">\n          <i class=\"fa fa-bug\"></i> Debug Information</a>\n      </div>\n    </div>\n  </div>\n  <div class=\"collapse\" id=\"Debug\">\n    <hr>\n    <div class=\"card card-body\">\n      <h4>Debug info</h4>\n      <ul>\n        <li>Total {{ totalPercent }}% Complete</li>\n        <li>Current {{ currentPercent }}% Complete</li>\n        <li>Total Elapsed: {{ currentTotalElapsed }}</li>\n        <li>Stats\n          <ul>\n            <li>Participants Left: {{ participantList.length }}</li>\n            <li>Participants Done: {{ doneParticipants.length }}</li>\n            <li>Participants Absent: {{ absentParticipants.length }}</li>\n          </ul>\n        </li>\n        <li>Diff: {{ diff }}</li>\n        <li>Elapsed: {{ currentElapsed }}</li>\n        <li>Elapsed: {{ totalElapsed }}</li>\n        <li>Partipicant Time: {{ individualTime }}</li>\n        <li>Current Participant: {{ currentParticipant.name }} [{{ currentParticipant.init }}]</li>\n      </ul>\n    </div>\n  </div>\n\n\n  <div class=\"collapse\" id=\"Questions\">\n    <hr>\n    <div class=\"card card-body\">\n      <h4>Questions</h4>\n      <ul>\n        <li>What did you do yesterday?</li>\n        <li>What will you do today?</li>\n        <li>Are you impeded in any way?</li>\n      </ul>\n    </div>\n  </div>\n\n  <hr>\n  <h4>Participants\n    <button class=\"btn btn-sm btn-info\" (click)=\"shuffleParticipants()\" title=\"Shuffle Participants\" [disabled]=\"participantList.length <= 2\">\n      <i class=\"fa fa-random\"></i>\n    </button>\n    <button class=\"btn btn-sm btn-info\" (click)=\"sortParticipants()\" title=\"Sort Participants\" [disabled]=\"participantList.length <= 2\">\n      <i class=\"fa fa-sort-amount-asc\"></i>\n    </button>\n  </h4>\n  <ul class=\"participant-list list-group\">\n    <li class=\"list-group-item\" *ngFor=\"let p of participantList; let i=index\" [ngClass]=\"{'text-success' : i == 0, 'text-primary': i == 1}\">\n      <button class=\"btn btn-outline-secondary btn-sm\" (click)=\"markAbsent(p)\" title=\"Mark as absent\" [disabled]=\"participantList.length <= 2 || (i == 0 && timerActive)\">\n        <i class=\"fa fa-minus-circle\"></i>\n      </button> {{ p.name }} [{{ p.init }}]</li>\n    <li class=\"list-group-item list-group-item-secondary\" *ngFor=\"let dp of doneParticipants\"> {{ dp.name }} [{{ dp.init }}] -\n      <span [ngClass]=\"{'text-danger' : dp.time >= individualTime}\">{{ dp.time | secs }}</span>\n    </li>\n    <li class=\"list-group-item list-group-item-danger\" *ngFor=\"let ap of absentParticipants\">\n      <button class=\"btn btn-outline-secondary btn-sm\" (click)=\"markPresent(ap)\" title=\"Mark as present\">\n        <i class=\"fa fa-plus-circle\"></i>\n      </button> {{ ap.name }} [{{ ap.init }}]</li>\n  </ul>\n\n</div>\n<div class=\"jumbotron\" *ngIf=\"participantList.length == 0 && doneParticipants.length == 0\">\n  <p>There are no participants in your list. </p>\n  <p>To start using the Scrum Timer, please go to the\n    <a href=\"#\" [routerLink]=\"['participants']\">participant list</a> and add some people to the list, either manually or by importing a list from a colleague.</p>\n  <p>Note that the Scrum Timer stores participants in local storage. Nothing is sent to the server. This is to provide anonymity\n    and be compliant with corporate policies.</p>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Adapter } from './adapter';\n\nexport class Participant {\n    constructor(\n        public init: string,\n        public name: string,\n        public time: number = 0\n    ) { }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ParticipantAdapter implements Adapter<Participant> {\n    adapt(item: any): Participant {\n        return new Participant(item.init, item.name, item.time);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'secs'\n})\nexport class SecsPipe implements PipeTransform {\n\n  transform(totalseconds: number): string {\n    let prefix = '';\n    if (totalseconds < 0) {\n      totalseconds = Math.abs(totalseconds);\n      prefix = '-';\n    }\n    const minutes: number = Math.floor(totalseconds / 60);\n    const seconds: number = totalseconds % 60;\n    return prefix + ('00'+minutes).slice(-2) + ':' + ('00'+seconds).slice(-2);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavbarService {\n  public visible: boolean;\n  constructor() {\n    this.visible = true;\n  }\n\n  hide() {\n    this.visible = false;\n  }\n\n  show() {\n    this.visible = true;\n  }\n\n  toggle() {\n    this.visible = !this.visible;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Participant, ParticipantAdapter } from '../../models/Participant';\nimport { SettingsService } from '../settings/settings.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class ParticipantService {\n  participants: Participant[];\n  lastSync: Date = new Date('2000-01-01T00:00:00.000Z');\n\n  constructor(public settings: SettingsService, private http: HttpClient, private adapter: ParticipantAdapter) {\n    this.getLastSync();\n  }\n\n  getLastSync() {\n    const localSync = localStorage.getItem('lastSync');\n    if (localSync == null) {\n      console.log('never synced');\n    } else {\n      console.log('Last sync: ' + localSync);\n    }\n  }\n\n  setLastSync(d: Date) {\n    localStorage.setItem('lastSync', d.toISOString());\n  }\n\n  getParticipants() {\n\n    if (localStorage.getItem('participants') === null) {\n      this.participants = [];\n    } else {\n      // TODO: check if the localstorage Entry is valid JSON before returning\n      this.participants = JSON.parse(localStorage.getItem('participants'));\n    }\n    return this.participants;\n  }\n\n  addParticipant(participant: Participant) {\n    this.participants.unshift(participant);\n    localStorage.setItem('participants', JSON.stringify(this.participants));\n  }\n\n  /**\n   * Remove specified participant from the\n   * @param participant Participant to be removed\n   */\n  removeParticipant(participant: Participant): boolean {\n    let removed = false;\n    for (let i = 0; i < this.participants.length; i++) {\n      if (participant.name === this.participants[i].name  && participant.init === this.participants[i].init  ) {\n        this.participants.splice(i, 1);\n        removed = true;\n      }\n    }\n    localStorage.setItem('participants', JSON.stringify(this.participants));\n    return removed;\n  }\n\n  /**\n   * Remove all participants in the list\n   */\n  purgeParticipants() {\n    this.participants.splice(0);\n    localStorage.setItem('participants', JSON.stringify(this.participants));\n  }\n\n  exportParticipants() {\n    return JSON.stringify(this.participants);\n  }\n\n  // overwrite localstorage, and refresh local list of participants from there...\n  importParticipants(jsonParticipants) {\n    localStorage.setItem('participants', jsonParticipants);\n    this.exportParticipants();\n  }\n\n  getRemoteParticipants(): Observable<Participant[]> {\n    if (this.settings.usesRemoteParticipantList()) {\n      console.log('remote participant list affirmative. Checking URL');\n      const durationSinceLastSync = (Date.now()).valueOf() - this.lastSync.valueOf();\n\n      // If more than 15 hours since sync, update\n      if (durationSinceLastSync > 54000) {\n        const url = this.settings.getRemoteParticipantListURL();\n        console.log('Seconds since last sync: ' + durationSinceLastSync + ' syncing from ' + url + ' . . .');\n        return this.http\n        .get(url)\n        .pipe(map((data: any[]) => data.map((item) => this.adapter.adapt(item))));\n\n      } else { // TODO: throw exception\n        console.log('not syncing');\n      }\n    } else { // TODO: throw exception ?\n      console.log('using local participant list');\n    }\n  }\n\n  updateRemoteParticipants(){\n    \n    this.getRemoteParticipants().subscribe(resp => {\n      // display its headers\n      this.participants =  resp;\n      localStorage.setItem('participants', JSON.stringify(this.participants));\n      this.setLastSync(new Date());\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n@Injectable()\nexport class SettingsService {\n  private useGlobalMaxTime = true;\n  private globalMaxTime: number = 60 * 15;\n  private remoteParticipantList = '';\n  private jiraURL = '';\n\n  constructor() { }\n\n  getGlobalMaxTime(): number {\n    if (localStorage.getItem('settings') === null) {\n      this.globalMaxTime = 60 * 15;\n    } else {\n      this.globalMaxTime = JSON.parse(localStorage.getItem('settings'))[1];\n    }\n    return this.globalMaxTime;\n  }\n\n  getUseGlobalMaxTime(): boolean {\n    if (localStorage.getItem('settings') === null) {\n      this.useGlobalMaxTime = true;\n    } else {\n      this.useGlobalMaxTime = JSON.parse(localStorage.getItem('settings'))[0];\n    }\n    return this.useGlobalMaxTime;\n  }\n\n  getRemoteParticipantListURL(): string {\n    if (localStorage.getItem('settings') === null) {\n      this.remoteParticipantList = '';\n    } else {\n      this.remoteParticipantList = JSON.parse(localStorage.getItem('settings'))[2];\n    }\n    return this.remoteParticipantList;\n  }\n\n  getJiraURL(): string {\n    if (localStorage.getItem('JiraURL') === null) {\n      this.jiraURL = '';\n    } else {\n      this.jiraURL = localStorage.getItem('JiraURL');\n    }\n    return this.jiraURL;\n  }\n\n  usesRemoteParticipantList(): boolean {\n    return this.getRemoteParticipantListURL() !== '';\n  }\n\n  setGlobalMaxTime(newTime: number) {\n    this.globalMaxTime = newTime;\n    this.saveSettings();\n  }\n\n  setRemoteParticipantList(newUrl: string) {\n    this.remoteParticipantList = newUrl;\n    this.saveSettings();\n  }\n\n  setJiraURL(newUrl: string) {\n    this.jiraURL = newUrl;\n    if(newUrl !== ''){\n      localStorage.setItem('JiraURL', this.jiraURL);\n    }else {\n      localStorage.removeItem('JiraURL');\n    }\n  }\n\n  setUseGlobelMaxTime(useGMTime: boolean) {\n    this.useGlobalMaxTime = useGMTime;\n    this.saveSettings();\n  }\n\n  exportSettings() {\n    return JSON.stringify([this.useGlobalMaxTime, this.globalMaxTime, this.remoteParticipantList]);\n  }\n\n  saveSettings() {\n    localStorage.setItem('settings', this.exportSettings());\n  }\n\n  // overwrite localstorage, and refresh local list of participants from there...\n  importSettings(jsonSettings) {\n    localStorage.setItem('participants', jsonSettings);\n    this.exportSettings();\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"names":["AppComponent","constructor","selectors","decls","vars","consts","template","i0","BrowserModule","HttpClientModule","FormsModule","RouterModule","HashLocationStrategy","Location","LocationStrategy","ParticipantService","SettingsService","NavbarService","NavbarComponent","TimerComponent","ParticipantListComponent","SettingsComponent","HelpComponent","SecsPipe","appRoutes","path","component","AppModule","bootstrap","provide","useClass","imports","forRoot","declarations","packageInfo","version","ngOnInit","nav","hasOpener","window","opener","openerMessage","noOpener","hide","e","console","log","openScrumTimer","swp","windowProps","popupWidth","screen","availHeight","scrumTimerWindow","open","location","origin","pathname","openJira","jwp","availWidth","url","localStorage","getItem","jiraTimerWindow","openWindows","Participant","participantService","participantList","getParticipants","settings","usesRemoteParticipantList","updateRemoteParticipants","addParticipant","init","length","name","removeParticipant","participant","exportParticipants","jsonParticipants","importParticipants","sortParticipants","isJsonString","str","JSON","parse","ctx","useGlobalMaxTime","getUseGlobalMaxTime","globalMaxTime","getGlobalMaxTime","remoteParticipantListURL","getRemoteParticipantListURL","jiraLinkURL","getJiraURL","useRemoteParticipantList","useJiraLinkURL","saveSettings","setGlobalMaxTime","setUseGlobelMaxTime","setRemoteParticipantList","setJiraURL","useRemoteParticipantListChecked","usejiraLinkChecked","timer","activatedRoute","settingsService","Array","individualMaxTime","individualTime","Math","round","doneParticipants","snapshot","show","stopTimer","currentParticipant","time","currentElapsed","push","splice","totalPercent","timerActive","timerSubscription","unsubscribe","startTimer","source","future","Date","totalElapsed","setSeconds","getSeconds","subscribe","val","currentDiff","floor","getTime","currentPercent","currentTotalElapsed","totalTimePercent","totalMaxTime","nextParticipant","resetTimer","i","shuffle","array","currentIndex","temporaryValue","randomIndex","random","shuffleParticipants","sort","a","b","localeCompare","markAbsent","idx","indexOf","absentParticipants","markPresent","ParticipantAdapter","adapt","item","factory","providedIn","transform","totalseconds","prefix","abs","minutes","seconds","slice","pure","visible","toggle","map","http","adapter","getLastSync","localSync","setLastSync","d","setItem","toISOString","participants","unshift","stringify","removed","purgeParticipants","getRemoteParticipants","durationSinceLastSync","now","valueOf","lastSync","get","pipe","data","resp","remoteParticipantList","jiraURL","newTime","newUrl","removeItem","useGMTime","exportSettings","importSettings","jsonSettings","environment","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}