{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/help/help.component.ts","./src/app/components/help/help.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/participant-list/participant-list.component.ts","./src/app/components/participant-list/participant-list.component.html","./src/app/components/settings/settings.component.ts","./src/app/components/settings/settings.component.html","./src/app/components/timer/timer.component.ts","./src/app/components/timer/timer.component.html","./src/app/models/Participant.ts","./src/app/pipes/secs.pipe.ts","./src/app/services/navbar/navbar.service.ts","./src/app/services/participant/participant.service.ts","./src/app/services/settings/settings.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ScrumTimer';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes, ActivatedRoute } from '@angular/router';\nimport { HashLocationStrategy, Location, LocationStrategy } from '@angular/common';\n// import { Timer } from 'angular-timer'; // AngularJS - not 4??\n\n\n// Services\nimport { ParticipantService } from './services/participant/participant.service';\nimport { SettingsService } from './services/settings/settings.service';\nimport { NavbarService } from './services/navbar/navbar.service';\n\n// Components\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { TimerComponent } from './components/timer/timer.component';\nimport { ParticipantListComponent } from './components/participant-list/participant-list.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { HelpComponent } from './components/help/help.component';\n\n// Pipes\nimport { SecsPipe } from './pipes/secs.pipe';\n\n\n\n\nconst appRoutes: Routes = [\n  { path: '', component: TimerComponent },\n  { path: 'timer', component: TimerComponent },\n  { path: 'popin', component: TimerComponent },\n  { path: 'participants', component: ParticipantListComponent },\n  { path: 'settings', component: SettingsComponent },\n  { path: 'help', component: HelpComponent }\n  // { path: '', component: Component }\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    TimerComponent,\n    ParticipantListComponent,\n    SettingsComponent,\n    HelpComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes, {}),\n    SecsPipe\n  ],\n  providers: [\n    ParticipantService,\n    SettingsService,\n    NavbarService,\n    Location,\n    { provide: LocationStrategy, useClass: HashLocationStrategy }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport packageInfo from '../../../../package.json';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.css']\n})\nexport class HelpComponent implements OnInit {\n  public version: string = packageInfo.version;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <h3>What is it?</h3>\n  <p>\n    A Timer to keep <a href=\"https://en.wikipedia.org/wiki/Scrum_(software_development)#Daily_scrum\"\n      target=\"_blank\">Daily Scrum</a>\n    meetings short. </p>\n  <p>\n    A lot of developers do not like to spend too much time on Scrum \"ceremonies\". This tool is meant to help you get a\n    viual indication of time spent to avoid it drawing out for online daily Scrum meetings.\n  </p>\n  <h3>How to use</h3>\n\n  <ol>\n    <li>Go to\n      <strong>\n        <i class=\"fa fa-users\"></i> Participants</strong> and make sure that everyone you want in the Scrum Timer\n    </li>\n    <li>\n      Go to the\n      <strong>\n        <i class=\"fa fa-clock-o\"></i> Timer</strong> and mark anyone who is not present as absent.\n    </li>\n    <li>click the\n      <span class=\"btn btn-outline-success\">\n        <i class=\"fa fa-hourglass-start\"></i>\n      </span> start button to start the timer\n    </li>\n    <li>Click the next button for each subsequent participant, and finally the stop button</li>\n  </ol>\n\n  <h3>Notes</h3>\n\n  <ul>\n    <li>If Max time is selected, the time left is distrubuted among the rest of the people in the meeting.</li>\n    <li>If the version badge below this list is older than the version of the newest <a href=\"https://github.com/JoSSte/ScrumTimer/releases\" target=\"_blank\">release</a> press <kbd>CTRL</kbd> + <kbd>F5</kbd> to refresh the page.</li>\n    \n  </ul>\n  <div class=\"badge badge-secondary\">Version {{version}}</div>\n\n  <h3>Bugs / requests for features</h3>\n  <p>If you find a bug/want a new feature, please report it on the <a href=\"https://github.com/JoSSte/ScrumTimer/issues\" target=\"_blank\">issues</a> page</p>\n  \n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NavbarService } from '../../services/navbar/navbar.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  noOpener = true;\n  scrumTimerWindow = null;\n  jiraTimerWindow = null;\n  private windowProps = 'resizable=no,scrollbars,status,top=0,right=0,width=';\n  private popupWidth = 360;\n  constructor(\n    public nav: NavbarService\n  ) {\n    const hasOpener = window.opener;\n    let openerMessage = '';\n\n    if (hasOpener) {\n      this.noOpener = false;\n      openerMessage = 'Not Displaying popout link. already popped out';\n      this.nav.hide();\n    } else {\n      this.noOpener = true;\n      openerMessage = 'Displaying pop out link';\n    }\n    console.info(openerMessage);\n  }\n\n  openScrumTimer() {\n    const swp = this.windowProps + this.popupWidth + ',height=' + window.screen.availHeight;\n    this.scrumTimerWindow = window.open(window.location.origin + window.location.pathname + '#/popin', 'TimerWindowName', swp);\n  }\n\n  openJira(): boolean {\n    const jwp = this.windowProps + (window.screen.availWidth - this.popupWidth - 10) + ',height=' + window.screen.availHeight;\n    const url = localStorage.getItem('JiraURL');\n    if (url) {\n      this.jiraTimerWindow = window.open(url, 'StoryWindowName', jwp);\n      return true;\n    } else {\n      console.warn('no JiraURL in localStorage');\n      return false;\n    }\n  }\n\n  openWindows() {\n    console.debug('Opening windows');\n    this.openJira();\n    this.openScrumTimer();\n  }\n\n  ngOnInit() {\n    console.log('[Scrumtimer] Navbar init');\n  }\n\n}\n","<nav *ngIf=\"nav.visible\" class=\"navbar navbar-dark bg-dark navbar-expand-md\">\n  <a class=\"navbar-brand\" href=\"#\">SCRUM Timer</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#ScrumNavBar\" aria-controls=\"ScrumNavBar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"ScrumNavBar\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['timer']\"><i class=\"fa fa-clock-o\"></i> Timer</a>\n      </li>\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['participants']\"><i class=\"fa fa-users\"></i> Participants</a>\n      </li>\n      <li class=\"nav-item\" [routerLinkActive]=\"['settings']\">\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['settings']\"><i class=\"fa fa-cog\"></i> Settings</a>\n      </li>\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" href=\"#\" routerLink=\"/help\"><i class=\"fa fa-question-circle\"></i> Help</a>\n      </li>\n      <li *ngIf=\"noOpener\" class=\"nav-item\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"openWindows()\"><i class=\"fa fa-external-link-alt\"></i>PopOut</a>\n      </li>\n    </ul>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Participant } from '../../models/Participant';\nimport { ParticipantService } from '../../services/participant/participant.service';\n\n\n@Component({\n  selector: 'app-participant-list',\n  templateUrl: './participant-list.component.html',\n  styleUrls: ['./participant-list.component.css']\n})\nexport class ParticipantListComponent implements OnInit {\n  init = '';\n  name = '';\n  participantList: Participant[];\n  jsonParticipants = '';\n\n  constructor(public participantService: ParticipantService) {\n\n  }\n\n  ngOnInit() {\n    this.participantList = this.participantService.getParticipants();\n    // check for updated remote participants\n    if(this.participantService.settings.usesRemoteParticipantList()){\n      this.participantService.updateRemoteParticipants();\n    }\n  }\n\n  addParticipant() {\n    if (this.init.length > 1 && this.name.length > 2){\n      this.participantService.addParticipant(new Participant(this.init, this.name));\n    }\n    this.init = '';\n    this.name = '';\n  }\n\n  removeParticipant(participant: Participant): boolean {\n    return this.participantService.removeParticipant(participant);\n  }\n\n  exportParticipants() {\n    this.jsonParticipants = this.participantService.exportParticipants();\n  }\n\n  importParticipants() {\n    this.participantService.importParticipants(this.jsonParticipants);\n    this.participantList = this.participantService.getParticipants();\n    this.jsonParticipants = '';\n  }\n\n  sortParticipants() {\n    console.log('[sortParticipants()] This function has not yet been implemented');\n  }\n\n\n  isJsonString(str) {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-10 offset-md-3\">\n    <form (submit)=\"addParticipant()\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Initials</th>\n            <th>Name</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let participant of participantList\">\n            <td>\n              {{ participant.init }}\n            </td>\n            <td>\n              {{ participant.name }}\n            </td>\n            <td>\n              <button class=\"btn btn-outline-danger btn-sm\" (click)=\"removeParticipant(participant)\"><i class=\"fa fa-trash-o fa-lg\"></i></button>\n            </td>\n          </tr>\n        </tbody>\n        <tfoot>\n          <tr>\n            <td>\n              <input class=\"form-control\" type=\"text\" id=\"init\" name=\"init\" [(ngModel)]=\"init\">\n            </td>\n            <td>\n              <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"name\">\n            </td>\n            <td>\n              <button type=\"submit\" class=\"btn btn-sm btn-outline-primary\" [disabled]=\"name =='' || init == ''\"><i class=\"fa fa-plus\"></i> Add</button>\n            </td>\n          </tr>\n        </tfoot>\n      </table>\n    </form>\n  </div>\n</div>\n<div class=\"row\">\n  <textarea class=\"form-control\" cols=\"50\" rows=\"5\" id=\"jsonParticipants\" name=\"jsonParticipants\" [(ngModel)]=\"jsonParticipants\"></textarea>\n</div>\n<div class=\"container\">\n\n  <button class=\"btn btn-sm btn-outline-dark\" (click)=\"exportParticipants()\" [disabled]=\"participantList.length == 0\"><i class=\"fa fa-upload\" ></i> Export list ({{ participantList.length }})</button>\n  <button class=\"btn btn-sm btn-outline-success\" [disabled]=\"! isJsonString(jsonParticipants)\" (click)=\"importParticipants()\"><i class=\"fa fa-download\"></i> Import List</button>\n  <button class=\"btn btn-sm btn-outline-danger\" (click)=\"jsonParticipants ='' \" [disabled]=\"jsonParticipants.length == 0\"><i class=\"fa fa-eraser\"></i> Clear</button>\n \n</div>","import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '../../services/settings/settings.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n  useGlobalMaxTime: boolean;\n  globalMaxTime: number;\n  useRemoteParticipantList: boolean;\n  remoteParticipantListURL: string;\n  jiraLinkURL: string;\n  useJiraLinkURL: boolean;\n\n  constructor(public settings: SettingsService) {\n\n  }\n\n  ngOnInit() {\n    this.useGlobalMaxTime = this.settings.getUseGlobalMaxTime();\n    this.globalMaxTime = this.settings.getGlobalMaxTime();\n    this.remoteParticipantListURL = this.settings.getRemoteParticipantListURL();\n    this.jiraLinkURL = this.settings.getJiraURL();\n    if(this.remoteParticipantListURL !== ''){\n      this.useRemoteParticipantList = true;\n    }\n    if(this.jiraLinkURL !== ''){\n      this.useJiraLinkURL = true;\n    }\n  }\n\n  saveSettings() {\n    this.settings.setGlobalMaxTime(this.globalMaxTime);\n    this.settings.setUseGlobalMaxTime(this.useGlobalMaxTime);\n    if(this.useRemoteParticipantList){\n      this.settings.setRemoteParticipantList(this.remoteParticipantListURL);\n    }else {\n      this.settings.setRemoteParticipantList('');\n    }\n    if(this.useJiraLinkURL){\n      this.settings.setJiraURL(this.jiraLinkURL);\n    }else {\n      this.settings.setJiraURL('');\n    }\n    this.settings.saveSettings();\n  }\n\n  useRemoteParticipantListChecked(): boolean{\n    return !this.useRemoteParticipantList;\n  }\n\n  usejiraLinkChecked(): boolean {\n    return !this.useJiraLinkURL;\n  }\n\n}\n","<h3>Settings</h3>\n<p>\n  From here, you will be able to choose whether you want an overall time goal (e.g. 15 minutes), or a static\n  time-per-person.\n  <!-- You will also be able to choose when you want to have the progress bar to change colour (standard = 80% and 95%) -->\n</p>\n<form action=\"\">\n  <div class=\"input-group mb-3\">\n\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">Total Max Time</span>\n      <div class=\"input-group-text\">\n        <input type=\"checkbox\" name=\"useGlobalMaxTime\" aria-label=\"Use Global max Time\" [(ngModel)]=\"useGlobalMaxTime\" size=\"3\">\n      </div>\n    </div>\n    <input name=\"globalMaxTime\" id=\"globalMaxTime\" type=\"number\" class=\"form-control\" [(ngModel)]=\"globalMaxTime\">\n  </div>\n  <small id=\"globalMaxTimeHelp\" class=\"form-text text-muted\">If the Total Max Time checkbox is selected, the time (in seconds) is used\n    to define the max length of the Scrum meeting. The time for each participant is scaled to fit. If it is left unchecked, each participant is given the time shown in seconds.</small>\n  <br>\n  <div class=\"input-group mb3\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">Remote Participant list</span>\n      <div class=\"input-group-text\">\n        <input type=\"checkbox\" name=\"useRemoteParticipantList\" aria-label=\"Use Remote Participant List\"\n          [(ngModel)]=\"useRemoteParticipantList\">\n      </div>\n    </div>\n    <input name=\"remoteParticipantListURL\" id=\"remoteParticipantListURL\" type=\"url\" class=\"form-control\"\n      [(ngModel)]=\"remoteParticipantListURL\" [disabled]=\"useRemoteParticipantListChecked()\">\n  </div>\n  <small id=\"remoteParticipantListURLHelp\" class=\"form-text text-muted\">If the Remote Participant List URL checkbox is selected, the tool will try\n    to download a .json file from the URL and import the participants from that</small>\n    <br>\n    <div class=\"input-group mb3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\">Jira URL</span>\n        <div class=\"input-group-text\">\n          <input type=\"checkbox\" name=\"useJiraLink\" aria-label=\"Use Jira Link\"\n            [(ngModel)]=\"useJiraLinkURL\">\n        </div>\n      </div>\n      <input name=\"jiraLinkURL\" id=\"jiraLinkURL\" type=\"url\" class=\"form-control\"\n        [(ngModel)]=\"jiraLinkURL\" [disabled]=\"usejiraLinkChecked()\">\n    </div>\n    <small id=\"jiraURLHelp\" class=\"form-text text-muted\">If the checkbox is checked, and you have a url entered, this URL will be opened in a window when using the popout function</small>\n      <br>\n  <input type=\"submit\" value=\"Save Settings\" class=\"btn btn-primary form-control\" (click)=\"saveSettings()\">\n</form>","import { SettingsService } from '../../services/settings/settings.service';\nimport { Component, ElementRef, OnInit, OnDestroy } from '@angular/core';\nimport { Participant } from '../../models/Participant';\nimport { ParticipantService } from '../../services/participant/participant.service';\nimport { NavbarService } from '../../services/navbar/navbar.service';\nimport { Subscription, timer } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.css']\n})\nexport class TimerComponent implements OnInit {\n  timerSubscription: Subscription;\n  participantList: Participant[];\n  absentParticipants: Participant[] = Array();\n  doneParticipants: Participant[] = Array();\n\n  // variables for session\n  totalMaxTime = this.settingsService.getGlobalMaxTime();\n  recommendedIndividualTime = 120;\n  totalPercent = 0;\n  totalTimePercent = 0;\n  totalElapsed = 0;\n  currentTotalElapsed = 0;\n\n  // variables for indiviual\n  individualMaxTime = 120;\n  individualTime: number = this.individualMaxTime;\n  currentPercent = 0;\n  currentParticipant: Participant;\n\n  future: Date;\n  futureString: string;\n  diff: number;\n  currentDiff: number;\n  currentElapsed = 0;\n  timerActive = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private nav: NavbarService,\n    public participantService: ParticipantService,\n    public settingsService: SettingsService\n    ) {\n  }\n\n  ngOnInit() {\n    this.participantList = this.participantService.getParticipants();\n    this.sortParticipants();\n    if (this.settingsService.getUseGlobalMaxTime()) {\n      this.individualTime = Math.round(\n        this.settingsService.getGlobalMaxTime() /\n        (this.participantList.length + this.doneParticipants.length)\n      );\n    } else {\n      this.individualTime = this.individualMaxTime;\n    }\n    console.info('[Scrumtimer] Timer init');\n    if(this.activatedRoute['_routerState'].snapshot.url === '/popin'){\n      this.nav.hide();\n    }else{\n      this.nav.show();\n    }\n  }\n\n  stopTimer() {\n    // save time for participant\n    this.currentParticipant.time = this.currentElapsed;\n    // this.currentPercent = 0;\n    // move first Participant to done participants\n    if (this.participantList.length > 0) {\n      this.doneParticipants.push(this.currentParticipant);\n    }\n    // remove the top participant\n    this.participantList.splice(0, 1);\n    // set progressbar to 100%\n    this.totalPercent = 100;\n    this.timerActive = false;\n    // stop timer\n    this.timerSubscription.unsubscribe();\n  }\n\n  startTimer() {\n    const source = timer(1000, 2000);\n    this.currentParticipant = this.participantList[0];\n    this.future = new Date();\n    // set the timer to a time in the future, based on \"individualTime\" seconds\n    if (this.settingsService.getUseGlobalMaxTime()) {\n      if (this.totalElapsed >= this.settingsService.getGlobalMaxTime()) {\n        // 1 sec grace time :)\n        this.individualTime = 1;\n      } else {\n        this.individualTime = Math.round(\n          (this.settingsService.getGlobalMaxTime() - this.totalElapsed )/\n          (this.participantList.length)\n        );\n      }\n    } else {\n      this.individualTime = this.individualMaxTime;\n    }\n    this.future.setSeconds(this.future.getSeconds() + this.individualTime);\n\n    this.timerSubscription = source.subscribe(val => {\n      this.currentDiff = Math.floor((this.future.getTime() - new Date().getTime()) / 1000);\n      this.currentElapsed = this.individualTime - this.currentDiff;\n      this.currentPercent = Math.round((this.currentElapsed / this.individualTime) * 100);\n      this.currentTotalElapsed = this.totalElapsed + this.currentElapsed;\n      this.totalTimePercent = Math.round(((this.totalElapsed + this.currentElapsed) / this.totalMaxTime) * 100) ;\n    });\n\n    this.timerActive = true;\n  }\n\n\n  nextParticipant() {\n    // save time for participant\n    this.participantList[0].time = this.currentElapsed;\n    // add up total elapsed time\n    this.totalElapsed += this.currentElapsed;\n    this.currentElapsed = 0;\n    this.currentDiff = 0;\n    this.currentPercent = 0;\n    // move first Participant to done participants\n    this.doneParticipants.push(this.participantList[0]);\n    // remove the top participant\n    this.participantList.splice(0, 1);\n    if (this.participantList.length > 0) {\n      this.currentParticipant = this.participantList[0];\n    } else {\n      this.currentParticipant = new Participant('', '');\n\n    }\n    this.totalPercent = Math.round((this.doneParticipants.length / (this.participantList.length + this.doneParticipants.length)) * 100);\n    this.totalTimePercent = Math.round(((this.totalElapsed + this.currentElapsed) / this.totalMaxTime) * 100) ;\n    this.currentPercent = 0;\n    this.currentDiff = 0;\n    this.currentPercent = 0;\n    this.timerActive = false;\n    // stop timer\n    this.timerSubscription.unsubscribe();\n    this.startTimer();\n  }\n\n  resetTimer() {\n\n    this.stopTimer();\n\n    // move all participants from done to present\n    for (let i = this.doneParticipants.length - 1; i >= 0; i--) {\n      // reset time taken\n      this.doneParticipants[i].time = 0;\n      this.participantList.push(this.doneParticipants[i]);\n      this.doneParticipants.splice(i, 1);\n    }\n\n    // reset timers\n    this.totalElapsed = 0;\n    this.totalPercent = 0;\n    this.totalTimePercent = 0;\n    this.currentTotalElapsed = 0;\n    this.currentPercent = 0;\n    this.currentDiff = 0;\n    this.currentParticipant = this.participantList[0];\n    this.currentPercent = 0;\n    this.currentElapsed = 0;\n    this.individualTime = Math.round(\n      this.settingsService.getGlobalMaxTime() /\n      this.participantList.length\n    );\n\n    this.sortParticipants();\n  }\n\n  /**\n   * Shuffles an array pseudo-randomly\n   *\n   * @param array\n   */\n  shuffle(array: any[]) {\n    let currentIndex = array.length, temporaryValue: any, randomIndex: number;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  shuffleParticipants() {\n    this.participantList = this.shuffle(this.participantList);\n    this.currentParticipant = this.participantList[0];\n  }\n\n  sortParticipants() {\n    this.participantList.sort(function(a, b){\n      return a.name.localeCompare(b.name);\n    });\n    this.currentParticipant = this.participantList[0];\n  }\n\n\n  /**\n   * Mark participant as absent.\n   *\n   * note that the last two participants cannot be marked as absent.\n   *\n   * @param participant Participant to mark as absent\n   */\n  markAbsent(participant: Participant): boolean {\n    if (this.participantList.length <= 2) {\n      console.warn('Cannot mark the last two participants absent.');\n      return false;\n    } else {\n      const idx: number = this.participantList.indexOf(participant);\n      this.absentParticipants.push(participant);\n      this.participantList.splice(idx, 1);\n      this.currentParticipant = this.participantList[0];\n      return true;\n    }\n  }\n\n  /**\n   * Mark participant as present.\n   *\n   * @param participant Participant to mark as present\n   */\n  markPresent(participant: Participant) {\n    const idx: number = this.absentParticipants.indexOf(participant);\n    this.participantList.push(participant);\n    this.absentParticipants.splice(idx, 1);\n  }\n\n\n}\n","<div class=\"container\" *ngIf=\"participantList.length > 0 || doneParticipants.length > 0\">\n\n  <br>\n  <h4>Overall Progress</h4>\n  <div class=\"progress\">\n    <div class=\"progress-bar progress-bar-striped bg-success\" role=\"progressbar\" aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\"\n      [style.width]=\"totalPercent + '%'\">\n      <span>{{totalPercent}}%</span>\n    </div>\n  </div>\n  <br>\n  <h4>Overall Time</h4>\n  <div class=\"progress\">\n    <div class=\"progress-bar progress-bar-striped bg-info\" role=\"progressbar\" aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\"\n      [ngClass]=\"{ 'progress-bar-animated': totalTimePercent < 100, 'bg-warning': totalTimePercent > 75 && totalTimePercent <= 95,'bg-danger': totalTimePercent > 95 }\"\n      [style.width]=\"totalTimePercent + '%'\">\n      <span>\n        <i class=\"fa fa-exclamation-triangle\" [ngClass]=\"{'invisible' : totalTimePercent <= 95}\"></i>{{totalMaxTime - currentTotalElapsed | secs}}</span>\n    </div>\n  </div>\n  <br>\n  <h4>{{ currentParticipant.name }} [{{ currentParticipant.init }}] Progress</h4>\n  <div class=\"progress\">\n    <div class=\"progress-bar progress-bar-striped \" [ngClass]=\"{ 'progress-bar-animated': currentPercent < 100, 'bg-warning': currentPercent > 75 && currentPercent <= 95,'bg-danger': currentPercent > 95 }\"\n      role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" [style.width]=\"currentPercent + '%'\">\n      <span>\n        <i class=\"fa fa-exclamation-triangle\" [ngClass]=\"{'invisible' : currentPercent <= 95}\"></i>\n        {{individualTime - currentElapsed | secs}}\n      </span>\n    </div>\n  </div>\n  <br>\n  <div class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar\">\n    <div class=\"btn-group mr-2\" role=\"group\">\n      <button class=\"btn btn-outline-danger \" (click)=\"stopTimer()\" title=\"Stop Timer\" [disabled]=\"totalPercent == 0 && currentPercent == 0 || !timerActive\">\n        <i class=\"fa fa-hourglass-end\"></i>\n      </button>\n      <button class=\"btn btn-outline-secondary\" (click)=\"resetTimer()\" title=\"Reset\">\n        <i class=\"fa fa-undo\"></i>\n      </button>\n    </div>\n    <div *ngIf=\"!timerActive\" class=\"btn-group mr-2\" role=\"group\">\n      <button class=\"btn btn-outline-success\" (click)=\"startTimer()\" title=\"Start Timer\" [disabled]=\"participantList.length == 0 || timerActive\">\n        <i class=\"fa fa-hourglass-start\"></i> {{ currentParticipant.init }}\n      </button>\n    </div>\n    <div *ngIf=\"timerActive\" class=\"btn-group mr-2\" role=\"group\"> <!--  -->\n      <button class=\"btn btn-outline-primary\" (click)=\"nextParticipant()\" [disabled]=\"participantList.length <= 1 || !timerActive\"\n        title=\"Next participant\">\n        <i class=\"fa fa-step-forward\"></i> Next <!-- {{ (participantList.length > 1)?(\"(\" + participantList[1].init)+\")\":\"\" }} -->\n      </button>\n    </div>\n    <div class=\"btn-group mr-2\" role=\"group\">\n      <button id=\"btnGroupDrop1\" type=\"button\" class=\"btn btn-outline-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n        aria-expanded=\"false\">\n        <i class=\"fa fa-ellipsis-v\"></i>\n      </button>\n      <div class=\"dropdown-menu\">\n        <a href=\"#\" class=\"dropdown-item\" data-toggle=\"collapse\" data-target=\"#Questions\" aria-expanded=\"false\" aria-controls=\"Questions\">\n          <i class=\"fa fa-question\"></i> Daily Question Card</a>\n        <a href=\"#\" class=\"dropdown-item\" data-toggle=\"collapse\" data-target=\"#Debug\" aria-expanded=\"false\" aria-controls=\"Debug\">\n          <i class=\"fa fa-bug\"></i> Debug Information</a>\n      </div>\n    </div>\n  </div>\n  <div class=\"collapse\" id=\"Debug\">\n    <hr>\n    <div class=\"card card-body\">\n      <h4>Debug info</h4>\n      <ul>\n        <li>Total {{ totalPercent }}% Complete</li>\n        <li>Current {{ currentPercent }}% Complete</li>\n        <li>Total Elapsed: {{ currentTotalElapsed }}</li>\n        <li>Stats\n          <ul>\n            <li>Participants Left: {{ participantList.length }}</li>\n            <li>Participants Done: {{ doneParticipants.length }}</li>\n            <li>Participants Absent: {{ absentParticipants.length }}</li>\n          </ul>\n        </li>\n        <li>Diff: {{ diff }}</li>\n        <li>Elapsed: {{ currentElapsed }}</li>\n        <li>Elapsed: {{ totalElapsed }}</li>\n        <li>Partipicant Time: {{ individualTime }}</li>\n        <li>Current Participant: {{ currentParticipant.name }} [{{ currentParticipant.init }}]</li>\n      </ul>\n    </div>\n  </div>\n\n\n  <div class=\"collapse\" id=\"Questions\">\n    <hr>\n    <div class=\"card card-body\">\n      <h4>Questions</h4>\n      <ul>\n        <li>What did you do yesterday?</li>\n        <li>What will you do today?</li>\n        <li>Are you impeded in any way?</li>\n      </ul>\n    </div>\n  </div>\n\n  <hr>\n  <h4>Participants\n    <button class=\"btn btn-sm btn-info\" (click)=\"shuffleParticipants()\" title=\"Shuffle Participants\" [disabled]=\"participantList.length <= 2\">\n      <i class=\"fa fa-random\"></i>\n    </button>\n    <button class=\"btn btn-sm btn-info\" (click)=\"sortParticipants()\" title=\"Sort Participants\" [disabled]=\"participantList.length <= 2\">\n      <i class=\"fa fa-sort-amount-asc\"></i>\n    </button>\n  </h4>\n  <ul class=\"participant-list list-group\">\n    <li class=\"list-group-item\" *ngFor=\"let p of participantList; let i=index\" [ngClass]=\"{'text-success' : i == 0, 'text-primary': i == 1}\">\n      <button class=\"btn btn-outline-secondary btn-sm\" (click)=\"markAbsent(p)\" title=\"Mark as absent\" [disabled]=\"participantList.length <= 2 || (i == 0 && timerActive)\">\n        <i class=\"fa fa-minus-circle\"></i>\n      </button> {{ p.name }} [{{ p.init }}]</li>\n    <li class=\"list-group-item list-group-item-secondary\" *ngFor=\"let dp of doneParticipants\"> {{ dp.name }} [{{ dp.init }}] -\n      <span [ngClass]=\"{'text-danger' : dp.time >= individualTime}\">{{ dp.time | secs }}</span>\n    </li>\n    <li class=\"list-group-item list-group-item-danger\" *ngFor=\"let ap of absentParticipants\">\n      <button class=\"btn btn-outline-secondary btn-sm\" (click)=\"markPresent(ap)\" title=\"Mark as present\">\n        <i class=\"fa fa-plus-circle\"></i>\n      </button> {{ ap.name }} [{{ ap.init }}]</li>\n  </ul>\n\n</div>\n<div class=\"jumbotron\" *ngIf=\"participantList.length == 0 && doneParticipants.length == 0\">\n  <p>There are no participants in your list. </p>\n  <p>To start using the Scrum Timer, please go to the\n    <a href=\"#\" [routerLink]=\"['participants']\">participant list</a> and add some people to the list, either manually or by importing a list from a colleague.</p>\n  <p>Note that the Scrum Timer stores participants in local storage. Nothing is sent to the server. This is to provide anonymity\n    and be compliant with corporate policies.</p>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Adapter } from './adapter';\n\nexport class Participant {\n    constructor(\n        public init: string,\n        public name: string,\n        public time: number = 0\n    ) { }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ParticipantAdapter implements Adapter<Participant> {\n    adapt(item: any): Participant {\n        return new Participant(item.init, item.name, item.time);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'secs',\n  standalone: true,\n  pure: true\n})\nexport class SecsPipe implements PipeTransform {\n\n  transform(totalseconds: number): string {\n    let prefix = '';\n    if (totalseconds < 0) {\n      totalseconds = Math.abs(totalseconds);\n      prefix = '-';\n    }\n    const minutes: number = Math.floor(totalseconds / 60);\n    const seconds: number = totalseconds % 60;\n    return prefix + ('00' + minutes).slice(-2) + ':' + ('00' + seconds).slice(-2);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavbarService {\n  public visible: boolean;\n  constructor() {\n    this.visible = true;\n  }\n\n  hide() {\n    this.visible = false;\n  }\n\n  show() {\n    this.visible = true;\n  }\n\n  toggle() {\n    this.visible = !this.visible;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Participant, ParticipantAdapter } from '../../models/Participant';\nimport { SettingsService } from '../settings/settings.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class ParticipantService {\n  participants!: Participant[];\n  lastSync: Date = new Date('2000-01-01T00:00:00.000Z');\n\n  constructor(public settings: SettingsService, private http: HttpClient, private adapter: ParticipantAdapter) {\n    this.getLastSync();\n  }\n\n  getLastSync() {\n    const localSync = localStorage.getItem('lastSync');\n    if (localSync == null) {\n      console.debug('never synced');\n    } else {\n      console.info('Last sync: ' + localSync);\n    }\n  }\n\n  setLastSync(d: Date) {\n    localStorage.setItem('lastSync', d.toISOString());\n  }\n\n  getParticipants() {\n\n    if (localStorage.getItem('participants') === null) {\n      this.participants = [];\n    } else {\n      // TODO: check if the localstorage Entry is valid JSON before returning\n      this.participants = JSON.parse(localStorage.getItem('participants'));\n    }\n    return this.participants;\n  }\n\n  addParticipant(participant: Participant) {\n    this.participants.unshift(participant);\n    localStorage.setItem('participants', JSON.stringify(this.participants));\n  }\n\n  /**\n   * Remove specified participant from the\n   * @param participant Participant to be removed\n   */\n  removeParticipant(participant: Participant): boolean {\n    let removed = false;\n    for (let i = 0; i < this.participants.length; i++) {\n      if (participant.name === this.participants[i].name  && participant.init === this.participants[i].init  ) {\n        this.participants.splice(i, 1);\n        removed = true;\n      }\n    }\n    localStorage.setItem('participants', JSON.stringify(this.participants));\n    return removed;\n  }\n\n  /**\n   * Remove all participants in the list\n   */\n  purgeParticipants() {\n    this.participants.splice(0);\n    localStorage.setItem('participants', JSON.stringify(this.participants));\n  }\n\n  exportParticipants() {\n    return JSON.stringify(this.participants);\n  }\n\n  // overwrite localstorage, and refresh local list of participants from there...\n  importParticipants(jsonParticipants: string) {\n    localStorage.setItem('participants', jsonParticipants);\n    this.exportParticipants();\n  }\n\n  getRemoteParticipants(): Observable<Participant[]> {\n    if (this.settings.usesRemoteParticipantList()) {\n      // console.debug('remote participant list affirmative. Checking URL');\n      const durationSinceLastSync = (Date.now()).valueOf() - this.lastSync.valueOf();\n\n      // If more than 15 hours since sync, update\n      if (durationSinceLastSync > 54000) {\n        const url = this.settings.getRemoteParticipantListURL();\n        // console.debug('Seconds since last sync: ' + durationSinceLastSync + ' syncing from ' + url + ' . . .');\n        return this.http\n        .get(url)\n        .pipe(map((data: any[]) => data.map((item) => this.adapter.adapt(item))));\n\n      } else {\n        console.error(new Error('not syncing'));\n      }\n    }\n    /* else { // TODO: throw exception ?\n      // console.info('using local participant list');\n      throw new Error('not syncing');\n    } */\n  }\n\n  updateRemoteParticipants(){\n    this.getRemoteParticipants().subscribe(resp => {\n      // display its headers\n      this.participants =  resp;\n      localStorage.setItem('participants', JSON.stringify(this.participants));\n      this.setLastSync(new Date());\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n@Injectable()\nexport class SettingsService {\n  private useGlobalMaxTime = true;\n  private globalMaxTime: number = 60 * 15;\n  private remoteParticipantList = '';\n  private jiraURL = '';\n\n  constructor() { }\n\n  getGlobalMaxTime(): number {\n    if (localStorage.getItem('settings') === null) {\n      this.globalMaxTime = 60 * 15;\n    } else {\n      this.globalMaxTime = JSON.parse(localStorage.getItem('settings') ?? '\"\"')[1];\n    }\n    return this.globalMaxTime;\n  }\n\n  getUseGlobalMaxTime(): boolean {\n    if (localStorage.getItem('settings') !== null) {\n      this.useGlobalMaxTime = JSON.parse(localStorage.getItem('settings') ?? '\"\"')[0];\n    } else {\n      this.useGlobalMaxTime = true;\n    }\n    return this.useGlobalMaxTime;\n  }\n\n  getRemoteParticipantListURL(): string {\n    if (localStorage.getItem('settings') === null) {\n      this.remoteParticipantList = '';\n    } else {\n      this.remoteParticipantList = JSON.parse(localStorage.getItem('settings') ?? '\"\"')[2];\n    }\n    return this.remoteParticipantList;\n  }\n\n  getJiraURL(): string {\n    if (localStorage.getItem('JiraURL') === null) {\n      this.jiraURL = '';\n    } else {\n      this.jiraURL = localStorage.getItem('JiraURL') ?? '\"\"';\n    }\n    return this.jiraURL;\n  }\n\n  usesRemoteParticipantList(): boolean {\n    return this.getRemoteParticipantListURL() !== '';\n  }\n\n  setGlobalMaxTime(newTime: number) {\n    this.globalMaxTime = newTime;\n    this.saveSettings();\n  }\n\n  setRemoteParticipantList(newUrl: string) {\n    this.remoteParticipantList = newUrl;\n    this.saveSettings();\n  }\n\n  setJiraURL(newUrl: string) {\n    this.jiraURL = newUrl;\n    if(newUrl !== ''){\n      localStorage.setItem('JiraURL', this.jiraURL);\n    }else {\n      localStorage.removeItem('JiraURL');\n    }\n  }\n\n  setUseGlobalMaxTime(useGMTime: boolean) {\n    this.useGlobalMaxTime = useGMTime;\n    this.saveSettings();\n  }\n\n  exportSettings() {\n    return JSON.stringify([this.useGlobalMaxTime, this.globalMaxTime, this.remoteParticipantList]);\n  }\n\n  saveSettings() {\n    localStorage.setItem('settings', this.exportSettings());\n  }\n\n  // overwrite localstorage, and refresh local list of participants from there...\n  importSettings(jsonSettings: string) {\n    localStorage.setItem('participants', jsonSettings);\n    this.exportSettings();\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["AppComponent","constructor","title","_","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","BrowserModule","HttpClientModule","FormsModule","RouterModule","HashLocationStrategy","Location","LocationStrategy","ParticipantService","SettingsService","NavbarService","NavbarComponent","TimerComponent","ParticipantListComponent","SettingsComponent","HelpComponent","SecsPipe","appRoutes","path","component","AppModule","bootstrap","_3","provide","useClass","imports","forRoot","declarations","i1","packageInfo","version","ngOnInit","HelpComponent_Template","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","ɵɵlistener","NavbarComponent_nav_0_li_23_Template_a_click_1_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","openWindows","ɵɵproperty","ɵɵpureFunction0","_c0","ɵɵtemplate","NavbarComponent_nav_0_li_23_Template","_c1","_c2","_c3","noOpener","nav","scrumTimerWindow","jiraTimerWindow","windowProps","popupWidth","hasOpener","window","opener","openerMessage","hide","console","info","openScrumTimer","swp","screen","availHeight","open","location","origin","pathname","openJira","jwp","availWidth","url","localStorage","getItem","warn","debug","log","ɵɵdirectiveInject","NavbarComponent_Template","NavbarComponent_nav_0_Template","visible","Participant","ParticipantListComponent_tr_12_Template_button_click_6_listener","participant_r2","$implicit","ctx_r2","removeParticipant","init","name","participantService","jsonParticipants","participantList","getParticipants","settings","usesRemoteParticipantList","updateRemoteParticipants","addParticipant","length","participant","exportParticipants","importParticipants","sortParticipants","isJsonString","str","JSON","parse","e","ParticipantListComponent_Template","ParticipantListComponent_Template_form_submit_2_listener","ParticipantListComponent_tr_12_Template","ɵɵtwoWayListener","ParticipantListComponent_Template_input_ngModelChange_16_listener","$event","ɵɵtwoWayBindingSet","ParticipantListComponent_Template_input_ngModelChange_18_listener","ParticipantListComponent_Template_textarea_ngModelChange_24_listener","ParticipantListComponent_Template_button_click_26_listener","ParticipantListComponent_Template_button_click_29_listener","ParticipantListComponent_Template_button_click_32_listener","ɵɵtwoWayProperty","useGlobalMaxTime","getUseGlobalMaxTime","globalMaxTime","getGlobalMaxTime","remoteParticipantListURL","getRemoteParticipantListURL","jiraLinkURL","getJiraURL","useRemoteParticipantList","useJiraLinkURL","saveSettings","setGlobalMaxTime","setUseGlobalMaxTime","setRemoteParticipantList","setJiraURL","useRemoteParticipantListChecked","usejiraLinkChecked","SettingsComponent_Template","SettingsComponent_Template_input_ngModelChange_10_listener","SettingsComponent_Template_input_ngModelChange_11_listener","SettingsComponent_Template_input_ngModelChange_20_listener","SettingsComponent_Template_input_ngModelChange_21_listener","SettingsComponent_Template_input_ngModelChange_30_listener","SettingsComponent_Template_input_ngModelChange_31_listener","SettingsComponent_Template_input_click_35_listener","timer","TimerComponent_div_0_div_33_Template_button_click_1_listener","_r3","startTimer","timerActive","currentParticipant","TimerComponent_div_0_div_34_Template_button_click_1_listener","_r4","nextParticipant","TimerComponent_div_0_li_96_Template_button_click_1_listener","p_r6","_r5","markAbsent","ɵɵpureFunction2","i_r7","ɵɵtextInterpolate2","dp_r8","ɵɵpureFunction1","time","individualTime","ɵɵtextInterpolate","ɵɵpipeBind1","TimerComponent_div_0_li_98_Template_button_click_1_listener","ap_r10","_r9","markPresent","TimerComponent_div_0_Template_button_click_29_listener","stopTimer","TimerComponent_div_0_Template_button_click_31_listener","resetTimer","TimerComponent_div_0_div_33_Template","TimerComponent_div_0_div_34_Template","TimerComponent_div_0_Template_button_click_91_listener","shuffleParticipants","TimerComponent_div_0_Template_button_click_93_listener","TimerComponent_div_0_li_96_Template","TimerComponent_div_0_li_97_Template","TimerComponent_div_0_li_98_Template","ɵɵstyleProp","totalPercent","totalTimePercent","ɵɵpureFunction3","totalMaxTime","currentTotalElapsed","currentPercent","currentElapsed","doneParticipants","absentParticipants","diff","totalElapsed","_c4","activatedRoute","settingsService","Array","recommendedIndividualTime","individualMaxTime","Math","round","snapshot","show","push","splice","timerSubscription","unsubscribe","source","future","Date","setSeconds","getSeconds","subscribe","val","currentDiff","floor","getTime","i","shuffle","array","currentIndex","temporaryValue","randomIndex","random","sort","a","b","localeCompare","idx","indexOf","ActivatedRoute","i2","i3","i4","TimerComponent_Template","TimerComponent_div_0_Template","TimerComponent_div_1_Template","ParticipantAdapter","adapt","item","factory","ɵfac","providedIn","transform","totalseconds","prefix","abs","minutes","seconds","slice","pure","standalone","toggle","map","http","adapter","lastSync","getLastSync","localSync","setLastSync","d","setItem","toISOString","participants","unshift","stringify","removed","purgeParticipants","getRemoteParticipants","durationSinceLastSync","now","valueOf","get","pipe","data","error","Error","resp","ɵɵinject","HttpClient","remoteParticipantList","jiraURL","newTime","newUrl","removeItem","useGMTime","exportSettings","importSettings","jsonSettings","environment","production","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}