{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/help/help.component.ts","./src/app/components/help/help.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/participant-list/participant-list.component.ts","./src/app/components/participant-list/participant-list.component.html","./src/app/components/settings/settings.component.ts","./src/app/components/settings/settings.component.html","./src/app/components/timer/timer.component.ts","./src/app/components/timer/timer.component.html","./src/app/pipes/hhmmss.pipe.ts","./src/app/services/participant/participant.service.ts","./src/app/services/settings/settings.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HashLocationStrategy, Location, LocationStrategy } from '@angular/common';\r\n//import { Timer } from 'angular-timer'; // AngularJS - not 4??\r\n\r\nimport { SecondsPipe } from \"./pipes/hhmmss.pipe\";\r\n\r\n//Services\r\nimport { ParticipantService } from './services/participant/participant.service';\r\nimport { SettingsService } from './services/settings/settings.service';\r\n\r\n// Components\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { TimerComponent } from './components/timer/timer.component';\r\nimport { ParticipantListComponent } from './components/participant-list/participant-list.component';\r\nimport { SettingsComponent } from './components/settings/settings.component';\r\nimport { HelpComponent } from './components/help/help.component';\r\n\r\n\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: TimerComponent },\r\n  { path: 'timer', component: TimerComponent },\r\n  { path: 'participants', component: ParticipantListComponent },\r\n  { path: 'settings', component: SettingsComponent },\r\n  { path: 'help', component: HelpComponent }\r\n  //{ path: '', component: Component }\r\n];\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    TimerComponent,\r\n    ParticipantListComponent,\r\n    SettingsComponent,\r\n    SecondsPipe,\r\n    HelpComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  providers: [\r\n    ParticipantService,\r\n    SettingsService,\r\n    Location,\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.css']\n})\nexport class HelpComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <h3>What is it?</h3>\n  <p>\n    A Scrum Timer! - see [some link on the web] for more details f you don't know what that is...\n  </p>\n  <h3>How to use</h3>\n\n  <ol>\n    <li>Go to\n      <b>\n        <i class=\"fa fa-users\"></i> Participants</b> and make sure that everyone you want in the Scrum Timer </li>\n    <li>\n      Go to the\n      <b>\n        <i class=\"fa fa-clock-o\"></i> Timer</b> and mark anyone who is not present as absent. </li>\n    <li>click the\n      <span class=\"btn btn-outline-success\">\n        <i class=\"fa fa-hourglass-start\"></i>\n      </span> start button to start the timer\n    </li>\n    <li>Click the next button for each subsequent participant, and finally the stop button</li>\n  </ol>\n\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-dark bg-dark navbar-expand-md\">\r\n  <a class=\"navbar-brand\" href=\"#\">SCRUM Timer</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#ScrumNavBar\" aria-controls=\"ScrumNavBar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"ScrumNavBar\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['timer']\"><i class=\"fa fa-clock-o\"></i> Timer</a>\r\n      </li>\r\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['participants']\"><i class=\"fa fa-users\"></i> Participants</a>\r\n      </li>\r\n      <!-- <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['settings']\"><i class=\"fa fa-cog\"></i> Settings</a>\r\n      </li> -->\r\n      <li class=\"nav-item\" [routerLinkActive]=\"['settings']\">\r\n        <a class=\"nav-link\" href=\"#\" [routerLink]=\"['settings']\"><i class=\"fa fa-cog\"></i> Settings</a>\r\n      </li>\r\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n        <a class=\"nav-link\" href=\"#\" routerLink=\"/help\"><i class=\"fa fa-question-circle\"></i> Help</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { Participant } from \"../../models/Participant\";\r\nimport { ParticipantService } from \"../../services/participant/participant.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-participant-list',\r\n  templateUrl: './participant-list.component.html',\r\n  styleUrls: ['./participant-list.component.css']\r\n})\r\nexport class ParticipantListComponent implements OnInit {\r\n  init: string = \"\";\r\n  name: string = \"\";\r\n  participantList: Participant[];\r\n  jsonParticipants: string = \"\";\r\n\r\n  constructor(public participantService: ParticipantService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.participantList = this.participantService.getParticipants();\r\n  }\r\n\r\n  addParticipant() {\r\n    if (this.init.length > 1 && this.name.length > 2)\r\n      this.participantService.addParticipant({ \"init\": this.init, \"name\": this.name });\r\n    this.init = \"\";\r\n    this.name = \"\";\r\n  }\r\n\r\n  removeParticipant(participant: Participant) {\r\n    this.participantService.removeParticipant(participant);\r\n  }\r\n\r\n  exportParticipants() {\r\n    this.jsonParticipants = this.participantService.exportParticipants();\r\n  }\r\n\r\n  importParticipants() {\r\n    this.participantService.importParticipants(this.jsonParticipants);\r\n    this.participantList = this.participantService.getParticipants();\r\n    this.jsonParticipants = \"\";\r\n  }\r\n\r\n  sortParticipants() {\r\n    console.log(\"[sortParticipants()] This function has not yet been implemented\");\r\n  }\r\n\r\n\r\n  isJsonString(str) {\r\n    try {\r\n      JSON.parse(str);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-10 offset-md-3\">\r\n    <form (submit)=\"addParticipant()\">\r\n      <table class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Initials</th>\r\n            <th>Name</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let participant of participantList\">\r\n            <td>\r\n              {{ participant.init }}\r\n            </td>\r\n            <td>\r\n              {{ participant.name }}\r\n            </td>\r\n            <td>\r\n              <button class=\"btn btn-outline-danger btn-sm\" (click)=\"removeParticipant(participant)\"><i class=\"fa fa-trash-o fa-lg\"></i></button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n            <td>\r\n              <input class=\"form-control\" type=\"text\" id=\"init\" name=\"init\" [(ngModel)]=\"init\">\r\n            </td>\r\n            <td>\r\n              <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"name\">\r\n            </td>\r\n            <td>\r\n              <button type=\"submit\" class=\"btn btn-sm btn-outline-primary\" [disabled]=\"name =='' || init == ''\"><i class=\"fa fa-plus\"></i> Add</button>\r\n            </td>\r\n          </tr>\r\n        </tfoot>\r\n      </table>\r\n    </form>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <textarea class=\"form-control\" cols=\"50\" rows=\"5\" id=\"jsonParticipants\" name=\"jsonParticipants\" [(ngModel)]=\"jsonParticipants\"></textarea>\r\n</div>\r\n<div class=\"container\">\r\n\r\n  <button class=\"btn btn-sm btn-outline-dark\" (click)=\"exportParticipants()\" [disabled]=\"participantList.length == 0\"><i class=\"fa fa-upload\" ></i> Export list ({{ participantList.length }})</button>\r\n  <button class=\"btn btn-sm btn-outline-success\" [disabled]=\"! isJsonString(jsonParticipants)\" (click)=\"importParticipants()\"><i class=\"fa fa-download\"></i> Import List</button>\r\n  <button class=\"btn btn-sm btn-outline-danger\" (click)=\"jsonParticipants ='' \" [disabled]=\"jsonParticipants.length == 0\"><i class=\"fa fa-eraser\"></i> Clear</button>\r\n \r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { SettingsService } from \"../../services/settings/settings.service\";\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  useGlobalMaxTime: boolean;\r\n  globalMaxTime: number;\r\n\r\n  constructor(public settings: SettingsService) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.useGlobalMaxTime = this.settings.getUseGlobalMaxTime();\r\n    this.globalMaxTime = this.settings.getGlobalMaxTime();\r\n  }\r\n\r\n  saveSettings() {\r\n    this.settings.setGlobalMaxTime(this.globalMaxTime);\r\n    this.settings.setUseGlobelMaxTime(this.useGlobalMaxTime);\r\n    this.settings.saveSettings();\r\n  }\r\n\r\n}\r\n","<h3>Settings</h3>\r\n<p>\r\n  From here, you will be able to choose whether you want an overall time goal (e.g. 15 minutes), or a static time-per-person.\r\n  <!-- You will also be able to choose when you want to have the progress bar to change colour (standard = 80% and 95%) -->\r\n</p>\r\n<form action=\"\">\r\n  <div class=\"input-group\">\r\n    <span class=\"input-group-addon\">\r\n          <input type=\"checkbox\" name=\"useGlobalMaxTime\" aria-label=\"Use Global max Time\" [(ngModel)]=\"useGlobalMaxTime\">\r\n        </span>\r\n    <label for=\"globalMaxTime\" class=\"input-group-addon\">Total Max Time</label>\r\n    <input name=\"globalMaxTime\" id=\"globalMaxTime\" type=\"number\" class=\"form-control\" [(ngModel)]=\"globalMaxTime\">\r\n  </div>\r\n  <br>\r\n  <input type=\"submit\" value=\"submit\" class=\"btn btn-primary form-control\" (click)=\"saveSettings()\">\r\n</form>","import { SettingsService } from '../../services/settings/settings.service';\r\nimport { Component, ElementRef, OnInit, OnDestroy } from '@angular/core';\r\nimport { Participant } from '../../models/Participant';\r\nimport { ParticipantService } from '../../services/participant/participant.service';\r\nimport { Observable, Subscription } from 'rxjs/Rx';\r\nimport { SecondsPipe } from '../../pipes/hhmmss.pipe';\r\n\r\n@Component({\r\n  selector: 'app-timer',\r\n  templateUrl: './timer.component.html',\r\n  styleUrls: ['./timer.component.css']\r\n})\r\nexport class TimerComponent implements OnInit {\r\n  currentCounter: Observable<number>;\r\n  subscription: Subscription;\r\n  participantList: Participant[];\r\n  absentParticipants: Participant[] = Array();\r\n  doneParticipants: Participant[] = Array();\r\n\r\n  // variables for session\r\n  totalMaxTime = this.settingsService.getGlobalMaxTime();\r\n  recommendedIndividualTime = 120;\r\n  totalPercent = 0;\r\n  totalTimePercent = 0;\r\n  totalElapsed = 0;\r\n  currentTotalElapsed = 0;\r\n\r\n  // variables for indiviual\r\n  individualMaxTime: number = 120;\r\n  individualTime: number = this.individualMaxTime;\r\n  currentPercent: number = 0;\r\n  currentParticipant: Participant;\r\n\r\n  future: Date;\r\n  futureString: string;\r\n  diff: number;\r\n  currentDiff: number;\r\n  currentElapsed: number = 0;\r\n  timerActive: boolean = false;\r\n\r\n  constructor(public participantService: ParticipantService, public settingsService: SettingsService, elm: ElementRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.participantList = this.participantService.getParticipants();\r\n    this.sortParticipants();\r\n    if (this.settingsService.getUseGlobalMaxTime()) {\r\n      this.individualTime = Math.round(\r\n        this.settingsService.getGlobalMaxTime() / \r\n        (this.participantList.length + this.doneParticipants.length)\r\n      );\r\n    } else {\r\n      this.individualTime = this.individualMaxTime;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.currentCounter != null) {\r\n      this.stopTimer();\r\n    }\r\n  }\r\n\r\n  stopTimer() {\r\n    // save time for participant\r\n    this.currentParticipant.time = this.currentElapsed;\r\n    this.currentPercent = 0;\r\n    // move first Participant to done participants\r\n    if (this.participantList.length > 0) {\r\n      this.doneParticipants.push(this.currentParticipant);\r\n    }\r\n    // remove the top participant\r\n    this.participantList.splice(0, 1);\r\n    // set progressbar to 100%\r\n    this.currentPercent = 100;\r\n    this.timerActive = false;\r\n    // stop timer\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  startTimer() {\r\n    this.currentParticipant = this.participantList[0];\r\n    this.future = new Date();\r\n    // set the timer to a time in the future, based on \"individualTime\" seconds\r\n    if (this.settingsService.getUseGlobalMaxTime()) {\r\n      if (this.totalElapsed >= this.settingsService.getGlobalMaxTime()) {\r\n        // 1 sec grace time :)\r\n        this.individualTime = 1;\r\n      } else {\r\n        this.individualTime = Math.round(\r\n          (this.settingsService.getGlobalMaxTime() - this.totalElapsed )/ \r\n          (this.participantList.length)\r\n        );\r\n      }\r\n    } else {\r\n      this.individualTime = this.individualMaxTime;\r\n    }\r\n    this.future.setSeconds(this.future.getSeconds() + this.individualTime);\r\n\r\n    // console.log(this.future);\r\n    this.currentCounter = Observable.interval(1000).map((x) => {\r\n      this.currentDiff = Math.floor((this.future.getTime() - new Date().getTime()) / 1000);\r\n      this.currentElapsed = this.individualTime - this.currentDiff;\r\n      this.currentPercent = Math.round((this.currentElapsed / this.individualTime) * 100);\r\n      this.currentTotalElapsed = this.totalElapsed + this.currentElapsed; \r\n      this.totalTimePercent = Math.round(((this.totalElapsed + this.currentElapsed) / this.totalMaxTime) * 100) ;\r\n      return x;\r\n    });\r\n\r\n    this.subscription = this.currentCounter.subscribe((x) => this.currentDiff);\r\n    this.timerActive = true;\r\n  }\r\n\r\n\r\n  nextParticipant() {\r\n    // save time for participant\r\n    this.participantList[0].time = this.currentElapsed;\r\n    // add up total elapsed time\r\n    this.totalElapsed += this.currentElapsed;\r\n    this.currentElapsed = 0;\r\n    this.currentDiff = 0;\r\n    this.currentPercent = 0;\r\n    // move first Participant to done participants\r\n    this.doneParticipants.push(this.participantList[0]);\r\n    // remove the top participant\r\n    this.participantList.splice(0, 1);\r\n    if (this.participantList.length > 0) {\r\n      this.currentParticipant = this.participantList[0];\r\n    } else {\r\n      this.currentParticipant = { 'name': '', 'init': '' };\r\n\r\n    }\r\n    this.totalPercent = Math.round((this.doneParticipants.length / (this.participantList.length + this.doneParticipants.length)) * 100);\r\n    this.totalTimePercent = Math.round(((this.totalElapsed + this.currentElapsed) / this.totalMaxTime) * 100) ;\r\n    this.currentPercent = 0;\r\n    this.currentDiff = 0;\r\n    this.currentPercent = 0;\r\n    this.timerActive = false;\r\n    // stop timer\r\n    this.subscription.unsubscribe();\r\n    this.startTimer();\r\n  }\r\n\r\n  resetTimer() {\r\n\r\n    this.stopTimer();\r\n\r\n    // move all participants from done to present\r\n    for (let i = this.doneParticipants.length - 1; i >= 0; i--) {\r\n      // reset time taken\r\n      this.doneParticipants[i].time = 0;\r\n      this.participantList.push(this.doneParticipants[i]);\r\n      this.doneParticipants.splice(i, 1);\r\n    }\r\n\r\n    // reset timers\r\n    this.totalElapsed = 0;\r\n    this.totalPercent = 0;\r\n    this.totalTimePercent = 0;\r\n    this.currentTotalElapsed = 0;\r\n    this.currentPercent = 0;\r\n    this.currentDiff = 0;\r\n    this.currentParticipant = this.participantList[0];\r\n    this.currentPercent = 0;\r\n    this.currentElapsed = 0;\r\n    this.individualTime = Math.round(\r\n      this.settingsService.getGlobalMaxTime() / \r\n      this.participantList.length\r\n    );\r\n\r\n    this.sortParticipants();\r\n  }\r\n\r\n  /**\r\n   * Shuffles an array pseudo-randomly\r\n   * \r\n   * @param array \r\n   */\r\n  shuffle(array) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  shuffleParticipants() {\r\n    this.participantList = this.shuffle(this.participantList);\r\n    this.currentParticipant = this.participantList[0];\r\n  }\r\n\r\n  sortParticipants() {\r\n    this.participantList.sort(function(a, b){\r\n      return a.name.localeCompare(b.name);\r\n    });\r\n    this.currentParticipant = this.participantList[0];\r\n  }\r\n\r\n\r\n  /**\r\n   * Mark participant as absent.\r\n   * \r\n   * note that the last two participants cannot be marked as absent.\r\n   * \r\n   * @param participant Participant to mark as absent\r\n   */\r\n  markAbsent(participant) {\r\n    if (this.participantList.length <= 2) {\r\n      console.log('Cannot mark the last two participants absent.');\r\n    } else {\r\n      var idx: number = this.participantList.indexOf(participant);\r\n      this.absentParticipants.push(participant);\r\n      this.participantList.splice(idx, 1);\r\n      this.currentParticipant = this.participantList[0];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mark participant as present.\r\n   * \r\n   * @param participant Participant to mark as present\r\n   */\r\n  markPresent(participant) {\r\n    var idx: number = this.absentParticipants.indexOf(participant);\r\n    this.participantList.push(participant);\r\n    this.absentParticipants.splice(idx, 1);\r\n    // console.log(this.absentParticipants);\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\" *ngIf=\"participantList.length > 0 || doneParticipants.length > 0\">\r\n\r\n  <br>\r\n  <h4>Overall Progress</h4>\r\n  <div class=\"progress\">\r\n    <div class=\"progress-bar progress-bar-striped bg-success\" role=\"progressbar\" aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n      [style.width]=\"totalPercent + '%'\">\r\n      <span>{{totalPercent}}%</span>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <h4>Overall Time</h4>\r\n  <div class=\"progress\">\r\n    <div class=\"progress-bar progress-bar-striped bg-info\" role=\"progressbar\" aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n      [ngClass]=\"{ 'progress-bar-animated': totalTimePercent < 100, 'bg-warning': totalTimePercent > 75 && totalTimePercent <= 95,'bg-danger': totalTimePercent > 95 }\"\r\n      [style.width]=\"totalTimePercent + '%'\">\r\n      <span>\r\n        <i class=\"fa fa-exclamation-triangle\" [ngClass]=\"{'invisible' : totalTimePercent <= 95}\"></i>{{totalMaxTime - currentTotalElapsed | Seconds}}</span>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <h4>{{ currentParticipant.name }} Progress</h4>\r\n  <div class=\"progress\">\r\n    <div class=\"progress-bar progress-bar-striped \" [ngClass]=\"{ 'progress-bar-animated': currentPercent < 100, 'bg-warning': currentPercent > 75 && currentPercent <= 95,'bg-danger': currentPercent > 95 }\"\r\n      role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" [style.width]=\"currentPercent + '%'\">\r\n      <span>\r\n        <i class=\"fa fa-exclamation-triangle\" [ngClass]=\"{'invisible' : currentPercent <= 95}\"></i>\r\n        {{individualTime - currentElapsed | Seconds}}\r\n      </span>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <div class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar\">\r\n    <div class=\"btn-group mr-2\" role=\"group\">\r\n      <button class=\"btn btn-outline-success\" (click)=\"startTimer()\" title=\"Start Timer\" [disabled]=\"participantList.length == 0 || timerActive\">\r\n        <i class=\"fa fa-hourglass-start\"></i>\r\n      </button>\r\n      <button class=\"btn btn-outline-danger \" (click)=\"stopTimer()\" title=\"Stop Timer\" [disabled]=\"totalPercent == 0 && currentPercent == 0 || !timerActive\">\r\n        <i class=\"fa fa-hourglass-end\"></i>\r\n      </button>\r\n      <button class=\"btn btn-outline-secondary\" (click)=\"resetTimer()\" title=\"Reset\">\r\n        <i class=\"fa fa-undo\"></i>\r\n      </button>\r\n    </div>\r\n    <div class=\"btn-group mr-2\" role=\"group\">\r\n      <button class=\"btn btn-outline-primary\" (click)=\"nextParticipant()\" [disabled]=\"participantList.length <= 1 || !timerActive\"\r\n        title=\"Next participant\">\r\n        <i class=\"fa fa-step-forward\"></i> {{ (participantList.length > 1)?(\"(\" + participantList[1].init)+\")\":\"\" }}\r\n      </button>\r\n    </div>\r\n    <div class=\"btn-group mr-2\" role=\"group\">\r\n      <button id=\"btnGroupDrop1\" type=\"button\" class=\"btn btn-outline-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n        aria-expanded=\"false\">\r\n        <i class=\"fa fa-ellipsis-v\"></i>\r\n      </button>\r\n      <div class=\"dropdown-menu\">\r\n        <a href=\"#\" class=\"dropdown-item\" data-toggle=\"collapse\" data-target=\"#Questions\" aria-expanded=\"false\" aria-controls=\"Questions\">\r\n          <i class=\"fa fa-question\"></i> Daily Question Card</a>\r\n        <a href=\"#\" class=\"dropdown-item\" data-toggle=\"collapse\" data-target=\"#Debug\" aria-expanded=\"false\" aria-controls=\"Debug\">\r\n          <i class=\"fa fa-bug\"></i> Debug Information</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"collapse\" id=\"Debug\">\r\n    <hr>\r\n    <div class=\"card card-body\">\r\n      <h4>Debug info</h4>\r\n      <ul>\r\n        <li>Total {{ totalPercent }}% Complete</li>\r\n        <li>Current {{ currentPercent }}% Complete</li>\r\n        <li>Total Elapsed: {{ currentTotalElapsed }}</li>\r\n        <li>Stats\r\n          <ul>\r\n            <li>Participants Left: {{ participantList.length }}</li>\r\n            <li>Participants Done: {{ doneParticipants.length }}</li>\r\n            <li>Participants Absent: {{ absentParticipants.length }}</li>\r\n          </ul>\r\n        </li>\r\n        <li>Diff: {{ diff }}</li>\r\n        <li>Elapsed: {{ currentElapsed }}</li>\r\n        <li>Elapsed: {{ totalElapsed }}</li>\r\n        <li>Partipicant Time: {{ individualTime }}</li>\r\n        <li>Current Participant: {{ currentParticipant.name }} [{{ currentParticipant.init }}]</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"collapse\" id=\"Questions\">\r\n    <hr>\r\n    <div class=\"card card-body\">\r\n      <h4>Questions</h4>\r\n      <ul>\r\n        <li>What did you do yesterday?</li>\r\n        <li>What will you do today?</li>\r\n        <li>Are you impeded in any way?</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <hr>\r\n  <h4>Participants\r\n    <button class=\"btn btn-sm btn-info\" (click)=\"shuffleParticipants()\" title=\"Shuffle Participants\" [disabled]=\"participantList.length <= 2\">\r\n      <i class=\"fa fa-random\"></i>\r\n    </button>\r\n    <button class=\"btn btn-sm btn-info\" (click)=\"sortParticipants()\" title=\"Sort Participants\" [disabled]=\"participantList.length <= 2\">\r\n      <i class=\"fa fa-sort-amount-asc\"></i>\r\n    </button>\r\n  </h4>\r\n  <ul class=\"list-group\">\r\n    <li class=\"list-group-item\" *ngFor=\"let p of participantList\">\r\n      <button class=\"btn btn-outline-secondary btn-sm\" (click)=\"markAbsent(p)\" title=\"Mark as absent\" [disabled]=\"participantList.length <= 2\">\r\n        <i class=\"fa fa-minus-circle\"></i>\r\n      </button> {{ p.name }}</li>\r\n    <li class=\"list-group-item list-group-item-secondary\" *ngFor=\"let dp of doneParticipants\"> {{ dp.name }} [{{ dp.init }}] -\r\n      <span [ngClass]=\"{'text-danger' : dp.time >= individualTime}\">{{ dp.time | Seconds }}</span>\r\n    </li>\r\n    <li class=\"list-group-item list-group-item-danger\" *ngFor=\"let ap of absentParticipants\">\r\n      <button class=\"btn btn-outline-secondary btn-sm\" (click)=\"markPresent(ap)\" title=\"Mark as present\">\r\n        <i class=\"fa fa-plus-circle\"></i>\r\n      </button> {{ ap.name }}</li>\r\n  </ul>\r\n\r\n</div>\r\n<div class=\"jumbotron\" *ngIf=\"participantList.length == 0 && doneParticipants.length == 0\">\r\n  <p>There are no participants in your list. </p>\r\n  <p>To start using the Scrum Timer, please go to the\r\n    <a href=\"#\" [routerLink]=\"['participants']\">participant list</a> and add some people to the list, either manually or by importing a list from a colleague.</p>\r\n  <p>Note that the Scrum Timer stores participants in local storage. Nothing is sent to the server. This is to provide anonymity\r\n    and be compliant with corporate policies.</p>\r\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n\r\n@Pipe({name: 'Seconds'})\r\nexport class SecondsPipe implements PipeTransform {\r\n  transform(totalseconds: number): string {\r\n    let prefix: string = '';\r\n    if (totalseconds < 0) {\r\n      totalseconds = Math.abs(totalseconds);\r\n      prefix = '-';\r\n    }\r\n    const minutes: number = Math.floor(totalseconds / 60);\r\n    const seconds: number = totalseconds % 60;\r\n    return prefix + (\"00\"+minutes).slice(-2) + \":\" + (\"00\"+seconds).slice(-2);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Participant } from '../../models/Participant';\r\n\r\n@Injectable()\r\nexport class ParticipantService {\r\n  participants: Participant[];\r\n\r\n  constructor() { }\r\n\r\n  getParticipants() {\r\n    if (localStorage.getItem('participants') === null) {\r\n      this.participants = [];\r\n    } else {\r\n      this.participants = JSON.parse(localStorage.getItem('participants'));\r\n    }\r\n    return this.participants;\r\n  }\r\n\r\n  addParticipant(participant: Participant) {\r\n    this.participants.unshift(participant);\r\n    localStorage.setItem('participants', JSON.stringify(this.participants));\r\n  }\r\n\r\n  removeParticipant(participant: Participant) {\r\n    for (let i = 0; i < this.participants.length; i++) {\r\n      if (participant == this.participants[i]) {\r\n        this.participants.splice(i, 1);\r\n      }\r\n    }\r\n    localStorage.setItem('participants', JSON.stringify(this.participants));\r\n  }\r\n\r\n  exportParticipants() {\r\n    return JSON.stringify(this.participants);\r\n  }\r\n\r\n  //overwrite localstorage, and refresh local list of participants from there...\r\n  importParticipants(jsonParticipants) {\r\n    localStorage.setItem('participants', jsonParticipants);\r\n    this.exportParticipants();\r\n  }\r\n\r\n  compare(a, b) {\r\n    if (a.last_nom < b.last_nom)\r\n      return -1;\r\n    if (a.last_nom > b.last_nom)\r\n      return 1;\r\n    return 0;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n//TODO: save settings in localStorage\r\n@Injectable()\r\nexport class SettingsService {\r\n  private useGlobalMaxTime: boolean = true;\r\n  private globalMaxTime: number = 60 * 15;\r\n\r\n  constructor() { }\r\n  getGlobalMaxTime(): number {\r\n    if (localStorage.getItem('settings') === null) {\r\n      this.globalMaxTime = 60 * 15;\r\n    } else {\r\n      this.globalMaxTime = JSON.parse(localStorage.getItem('settings'))[1];\r\n    }\r\n    return this.globalMaxTime;\r\n  }\r\n\r\n  setGlobalMaxTime(newTime: number) {\r\n    this.globalMaxTime = newTime;\r\n    this.saveSettings();\r\n  }\r\n\r\n  getUseGlobalMaxTime(): boolean {\r\n    if (localStorage.getItem('settings') === null) {\r\n      this.useGlobalMaxTime = true;\r\n    } else {\r\n      this.useGlobalMaxTime = JSON.parse(localStorage.getItem('settings'))[0];\r\n    }\r\n    return this.useGlobalMaxTime;\r\n  }\r\n\r\n  setUseGlobelMaxTime(useGMTime: boolean) {\r\n    this.useGlobalMaxTime = useGMTime;\r\n    this.saveSettings();\r\n  }\r\n\r\n  exportSettings() {\r\n    return JSON.stringify([this.useGlobalMaxTime, this.globalMaxTime]);\r\n  }\r\n\r\n  saveSettings() {\r\n    localStorage.setItem('settings', this.exportSettings());\r\n  }\r\n\r\n  //overwrite localstorage, and refresh local list of participants from there...\r\n  importSettings(jsonSettings) {\r\n    localStorage.setItem('participants', jsonSettings);\r\n    this.exportSettings();\r\n  }\r\n\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":"webpack:///"}